{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware"},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncMiddleware","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting"]]},"metadata":{"role":"symbol","modules":[{"name":"VaporRouting"}],"roleHeading":"Structure","symbolKind":"struct","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AsyncRoutingMiddleware","kind":"identifier"}],"navigatorTitle":[{"text":"AsyncRoutingMiddleware","kind":"identifier"}],"externalID":"s:12VaporRouting05AsyncB10MiddlewareV","title":"AsyncRoutingMiddleware"},"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"AsyncRoutingMiddleware","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Router","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Router","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Router","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/URLRequestData","preciseIdentifier":"s:10URLRouting14URLRequestDataV","text":"URLRequestData","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"You will not typically need to interact with this type directly. Instead you should use the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"mount"},{"text":" method on your Vapor application.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"See ","type":"text"},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting","type":"reference"},{"text":" for more information on usage.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Serves requests using a router and response handler.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/vaporrouting\/asyncroutingmiddleware"]}],"kind":"symbol","topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/respond(to:chainingTo:)-4pm2r"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/AsyncMiddleware-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/Middleware-Implementations"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/URLRequestData":{"navigatorTitle":[{"kind":"identifier","text":"URLRequestData"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"URLRequestData"}],"title":"URLRequestData","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/URLRequestData","abstract":[{"type":"text","text":"A parseable URL request."}],"type":"topic","role":"symbol","url":"\/documentation\/urlrouting\/urlrequestdata"},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware","type":"topic","title":"AsyncRoutingMiddleware","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncRoutingMiddleware"}],"url":"\/documentation\/vaporrouting\/asyncroutingmiddleware","navigatorTitle":[{"kind":"identifier","text":"AsyncRoutingMiddleware"}],"abstract":[{"type":"text","text":"Serves requests using a router and response handler."}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Vapor/AsyncMiddleware":{"title":"AsyncMiddleware","navigatorTitle":[{"kind":"identifier","text":"AsyncMiddleware"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AsyncMiddleware"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/AsyncMiddleware","type":"topic","url":"\/documentation\/vapor\/asyncmiddleware","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"text":"to pass requests on to the next ","type":"text"},{"type":"codeVoice","code":"AsyncMiddleware"},{"text":" in a chain, or they can short circuit and","type":"text"},{"text":" ","type":"text"},{"text":"return a custom ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":" if desired.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware/Middleware-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/Middleware-Implementations","type":"topic","title":"Middleware Implementations","url":"\/documentation\/vaporrouting\/asyncroutingmiddleware\/middleware-implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware/AsyncMiddleware-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/AsyncMiddleware-Implementations","type":"topic","title":"AsyncMiddleware Implementations","url":"\/documentation\/vaporrouting\/asyncroutingmiddleware\/asyncmiddleware-implementations","abstract":[],"role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/VaporRouting/AsyncRoutingMiddleware/respond(to:chainingTo:)-4pm2r":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting\/AsyncRoutingMiddleware\/respond(to:chainingTo:)-4pm2r","type":"topic","title":"respond(to:chainingTo:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"respond"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"text":"Request","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor7RequestC"},{"text":", ","kind":"text"},{"text":"chainingTo","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AsyncResponder","kind":"typeIdentifier","preciseIdentifier":"s:5Vapor14AsyncResponderP"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Response","preciseIdentifier":"s:5Vapor8ResponseC","kind":"typeIdentifier"}],"url":"\/documentation\/vaporrouting\/asyncroutingmiddleware\/respond(to:chainingto:)-4pm2r","abstract":[{"type":"text","text":"Called with each "},{"type":"codeVoice","code":"Request"},{"text":" that passes through this middleware.","type":"text"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/VaporRouting":{"kind":"symbol","type":"topic","title":"VaporRouting","abstract":[{"type":"text","text":"A bidirectional Vapor router with more type safety and less fuss."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/VaporRouting","role":"collection","url":"\/documentation\/vaporrouting"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Middleware":{"title":"Middleware","navigatorTitle":[{"text":"Middleware","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Middleware","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Middleware","type":"topic","url":"\/documentation\/vapor\/middleware","role":"symbol","kind":"symbol","abstract":[{"type":"codeVoice","code":"Middleware"},{"text":" is placed between the server and your router. It is capable of","type":"text"},{"text":" ","type":"text"},{"text":"mutating both incoming requests and outgoing responses. ","type":"text"},{"type":"codeVoice","code":"Middleware"},{"text":" can choose","type":"text"},{"text":" ","type":"text"},{"text":"to pass requests on to the next ","type":"text"},{"type":"codeVoice","code":"Middleware"},{"text":" in a chain, or they can short circuit and","type":"text"},{"text":" ","type":"text"},{"text":"return a custom ","type":"text"},{"type":"codeVoice","code":"Response"},{"text":" if desired.","type":"text"}]}}}
{"abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","interfaceLanguage":"swift"},"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This channel handler should be used alongside the "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","isActive":true,"type":"reference"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"help provide a HTTP\/1.1-like abstraction on top of a HTTP\/2 multiplexed"},{"type":"text","text":" "},{"type":"text","text":"connection."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/http2tohttp1clientcodec"]}],"sections":[],"metadata":{"platforms":[],"title":"HTTP2ToHTTP1ClientCodec","modules":[{"name":"NIOHTTP2"}],"externalID":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"symbolKind":"class","role":"symbol","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:normalizeHTTPHeaders:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/HTTPProtocol","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelHandler-Implementations":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelHandler-Implementations","title":"ChannelHandler Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"title":"NIOHTTP2","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/niohttp2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/channelRead(context:data:)":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/channelRead(context:data:)","title":"channelRead(context:data:)","type":"topic","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":")"}],"role":"symbol","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/OutboundIn":{"type":"topic","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/outboundin","role":"symbol","kind":"symbol","title":"HTTP2ToHTTP1ClientCodec.OutboundIn","deprecated":true,"abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundIn","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channelinboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelInboundHandler-Implementations","title":"ChannelInboundHandler Implementations","type":"topic","abstract":[],"kind":"article","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/InboundIn":{"abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundIn","type":"topic","role":"symbol","title":"HTTP2ToHTTP1ClientCodec.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/inboundin","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamID":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"HTTP2StreamID","kind":"identifier"}],"abstract":[{"type":"text","text":"A single HTTP\/2 stream ID."}],"type":"topic","url":"\/documentation\/niohttp2\/http2streamid","title":"HTTP2StreamID","navigatorTitle":[{"text":"HTTP2StreamID","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"url":"\/documentation\/niohttp2\/http2streammultiplexer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","title":"HTTP2StreamMultiplexer","type":"topic","abstract":[{"type":"text","text":"A channel handler that creates a child channel for each HTTP\/2 stream."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2StreamMultiplexer","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HTTP2StreamMultiplexer","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/write(context:data:promise:)":{"type":"topic","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/write(context:data:promise:)","role":"symbol","kind":"symbol","title":"write(context:data:promise:)","deprecated":true,"abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"type":"text","text":" "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":". Those are then ready to be flushed to the actual "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" when"},{"type":"text","text":" "},{"code":"Channel.flush","type":"codeVoice"},{"type":"text","text":" or "},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"type":"text","text":" is called."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/write(context:data:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/init(streamID:httpProtocol:)":{"abstract":[{"type":"text","text":"Initializes a "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","type":"reference","isActive":true},{"type":"text","text":" for the given "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID","type":"reference","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:)","type":"topic","role":"symbol","title":"init(streamID:httpProtocol:)","fragments":[{"kind":"keyword","text":"convenience"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"streamID"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV","kind":"typeIdentifier","text":"HTTP2StreamID"},{"kind":"text","text":", "},{"kind":"externalParam","text":"httpProtocol"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC","kind":"typeIdentifier","text":"HTTP2ToHTTP1ClientCodec"},{"kind":"text","text":"."},{"preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC12HTTPProtocola","kind":"typeIdentifier","text":"HTTPProtocol"},{"kind":"text","text":")"}],"kind":"symbol","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/init(streamid:httpprotocol:)","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/OutboundOut":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/outboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/OutboundOut","title":"HTTP2ToHTTP1ClientCodec.OutboundOut","type":"topic","abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec":{"type":"topic","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec","role":"symbol","kind":"symbol","title":"HTTP2ToHTTP1ClientCodec","deprecated":true,"abstract":[{"type":"text","text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,"},{"type":"text","text":" "},{"type":"text","text":"and vice versa, for use on the client side."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","navigatorTitle":[{"kind":"identifier","text":"HTTP2ToHTTP1ClientCodec"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/init(streamID:httpProtocol:normalizeHTTPHeaders:)":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/init(streamid:httpprotocol:normalizehttpheaders:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/init(streamID:httpProtocol:normalizeHTTPHeaders:)","title":"init(streamID:httpProtocol:normalizeHTTPHeaders:)","type":"topic","abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec","isActive":true},{"type":"text","text":" for the given "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamID","isActive":true},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"streamID","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2StreamID","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP213HTTP2StreamIDV"},{"text":", ","kind":"text"},{"text":"httpProtocol","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTP2ToHTTP1ClientCodec","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC"},{"text":".","kind":"text"},{"text":"HTTPProtocol","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP223HTTP2ToHTTP1ClientCodecC12HTTPProtocola"},{"text":", ","kind":"text"},{"text":"normalizeHTTPHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"role":"symbol","deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/HTTPProtocol":{"type":"topic","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/httpprotocol","role":"symbol","kind":"symbol","title":"HTTP2ToHTTP1ClientCodec.HTTPProtocol","deprecated":true,"abstract":[{"type":"text","text":"The HTTP protocol scheme being used on this connection."}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPProtocol"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/HTTPProtocol","navigatorTitle":[{"kind":"identifier","text":"HTTPProtocol"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/ChannelOutboundHandler-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/ChannelOutboundHandler-Implementations","type":"topic","role":"collectionGroup","title":"ChannelOutboundHandler Implementations","kind":"article","url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/channeloutboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2ToHTTP1ClientCodec/InboundOut":{"url":"\/documentation\/niohttp2\/http2tohttp1clientcodec\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2ToHTTP1ClientCodec\/InboundOut","title":"HTTP2ToHTTP1ClientCodec.InboundOut","type":"topic","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"deprecated":true}}}
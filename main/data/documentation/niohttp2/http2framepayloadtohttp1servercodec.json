{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ServerCodec","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This channel handler should be used alongside the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"help provide a HTTP\/1.1-like abstraction on top of a HTTP\/2 multiplexed"},{"type":"text","text":" "},{"type":"text","text":"connection."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This handler uses "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame\/FramePayload","isActive":true,"type":"reference"},{"type":"text","text":" as its HTTP\/2 currency type."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/init(normalizeHTTPHeaders:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/OutboundOut"],"title":"Type Aliases"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations","generated":true}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec","interfaceLanguage":"swift"},"metadata":{"role":"symbol","roleHeading":"Class","title":"HTTP2FramePayloadToHTTP1ServerCodec","modules":[{"name":"NIOHTTP2"}],"externalID":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ServerCodecC","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ServerCodec"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTP2FramePayloadToHTTP1ServerCodec"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"title":"Conforms To","kind":"relationships","type":"conformsTo"}],"abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"text":"and vice versa, for use on the server side.","type":"text"}],"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/ChannelHandler-Implementations":{"type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/channelhandler-implementations","kind":"article","title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/ChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec":{"role":"symbol","abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and vice versa, for use on the server side."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ServerCodec","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HTTP2FramePayloadToHTTP1ServerCodec","kind":"identifier"}],"title":"HTTP2FramePayloadToHTTP1ServerCodec","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","abstract":[],"type":"topic","title":"ChannelOutboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/ChannelOutboundHandler-Implementations","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/channeloutboundhandler-implementations","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/OutboundOut":{"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/outboundout","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"title":"HTTP2FramePayloadToHTTP1ServerCodec.OutboundOut","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/OutboundOut","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2Frame/FramePayload":{"navigatorTitle":[{"text":"FramePayload","kind":"identifier"}],"url":"\/documentation\/niohttp2\/http2frame\/framepayload","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FramePayload","kind":"identifier"}],"title":"HTTP2Frame.FramePayload","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2Frame\/FramePayload","role":"symbol","type":"topic","abstract":[{"type":"text","text":"Frame-type-specific payload data."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/init(normalizeHTTPHeaders:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"normalizeHTTPHeaders"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/init(normalizehttpheaders:)","title":"init(normalizeHTTPHeaders:)","abstract":[{"type":"text","text":"Initializes a "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec","isActive":true},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/init(normalizeHTTPHeaders:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/InboundIn":{"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/inboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/InboundIn","title":"HTTP2FramePayloadToHTTP1ServerCodec.InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"kind":"symbol","type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/OutboundIn":{"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/outboundin","kind":"symbol","role":"symbol","type":"topic","title":"HTTP2FramePayloadToHTTP1ServerCodec.OutboundIn","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/OutboundIn","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/channelRead(context:data:)":{"role":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"type":"topic","kind":"symbol","title":"channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/channelinboundhandler-implementations","type":"topic","role":"collectionGroup","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/ChannelInboundHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/write(context:data:promise:)":{"url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"type":"text","text":" is called."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"title":"write(context:data:promise:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/write(context:data:promise:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"title":"NIOHTTP2","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/niohttp2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/InboundOut":{"kind":"symbol","role":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/inboundout","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/InboundOut","type":"topic","title":"HTTP2FramePayloadToHTTP1ServerCodec.InboundOut","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2StreamMultiplexer":{"url":"\/documentation\/niohttp2\/http2streammultiplexer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2StreamMultiplexer","title":"HTTP2StreamMultiplexer","type":"topic","abstract":[{"type":"text","text":"A channel handler that creates a child channel for each HTTP\/2 stream."}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2StreamMultiplexer","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"HTTP2StreamMultiplexer","kind":"identifier"}]}}}
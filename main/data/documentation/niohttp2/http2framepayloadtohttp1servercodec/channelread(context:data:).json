{"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}]}]},{"kind":"parameters","parameters":[{"name":"context","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}]},{"name":"data","content":[{"type":"paragraph","inlineContent":[{"text":"The data read from the remote peer, wrapped in a ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.fireChannelRead"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelInboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" if you want to allow the next handler to also handle the event."}],"type":"paragraph"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/channelRead(context:data:)","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","modules":[{"name":"NIOHTTP2"}],"externalID":"s:8NIOHTTP235HTTP2FramePayloadToHTTP1ServerCodecC11channelRead7context4datay7NIOCore21ChannelHandlerContextC_AG6NIOAnyVtF","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"title":"channelRead(context:data:)"},"abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/channelread(context:data:)"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"role":"symbol","url":"\/documentation\/niocore\/nioany","title":"NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","type":"topic","abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" type, similar to Swift’s builtin "},{"type":"codeVoice","code":"Any"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" the overhead of ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":", ","type":"text"},{"type":"codeVoice","code":"FileRegion"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" just like ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" will contain them within an existential container.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2":{"title":"NIOHTTP2","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/niohttp2"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec/channelRead(context:data:)":{"role":"symbol","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec\/channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"type":"topic","kind":"symbol","title":"channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP2/HTTP2FramePayloadToHTTP1ServerCodec":{"role":"symbol","abstract":[{"text":"A simple channel handler that translates HTTP\/2 concepts into HTTP\/1 data types,","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"and vice versa, for use on the server side."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTP2FramePayloadToHTTP1ServerCodec","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"HTTP2FramePayloadToHTTP1ServerCodec","kind":"identifier"}],"title":"HTTP2FramePayloadToHTTP1ServerCodec","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP2\/HTTP2FramePayloadToHTTP1ServerCodec","url":"\/documentation\/niohttp2\/http2framepayloadtohttp1servercodec","kind":"symbol"}}}
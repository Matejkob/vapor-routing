{"variants":[{"paths":["\/documentation\/asynchttpclient\/httpclientresponsedelegate"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient"]]},"metadata":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"externalID":"s:15AsyncHTTPClient0B16ResponseDelegateP","roleHeading":"Protocol","symbolKind":"protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPClientResponseDelegate"}],"modules":[{"name":"AsyncHTTPClient"}],"title":"HTTPClientResponseDelegate"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPClientResponseDelegate","kind":"identifier"},{"text":" : AnyObject","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"inlineContent":[{"type":"text","text":"You can implement this protocol if you need fine-grained control over an HTTP request\/response, for example, if you want to inspect the response"},{"type":"text","text":" "},{"type":"text","text":"headers before deciding whether to accept a response body, or if you want to stream your request body. Pass an instance of your conforming"},{"type":"text","text":" "},{"type":"text","text":"class to the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/execute(request:delegate:eventLoop:deadline:)","isActive":true},{"type":"text","text":" method and this package will call each delegate method appropriately as the request takes place."}],"type":"paragraph"},{"level":3,"type":"heading","text":"Backpressure","anchor":"Backpressure"},{"inlineContent":[{"text":"A ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","type":"reference","isActive":true},{"type":"text","text":" can be used to exert backpressure on the server response. This is achieved by way of the futures returned from"},{"type":"text","text":" "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","isActive":true},{"type":"text","text":" and "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","isActive":true},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The following functions are part of the “backpressure system” in the delegate:"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","type":"reference"}]}]},{"content":[{"inlineContent":[{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)","type":"reference","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","isActive":true}],"type":"paragraph"}]}]},{"inlineContent":[{"text":"The first three methods are strictly ","type":"text"},{"inlineContent":[{"text":"exclusive","type":"text"}],"type":"emphasis"},{"text":", with that exclusivity managed by the futures returned by ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","isActive":true,"type":"reference"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","isActive":true,"type":"reference"},{"text":". What this means is that until the returned future is completed, none of these three methods will be called","type":"text"},{"text":" ","type":"text"},{"text":"again. This allows delegates to rate limit the server to a capacity it can manage. ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)","isActive":true,"type":"reference"},{"text":" does not return a future,","type":"text"},{"text":" ","type":"text"},{"text":"as we are expecting no more data from the server at this time.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","isActive":true},{"type":"text","text":" is somewhat special: it signals the end of this regime. "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","isActive":true},{"type":"text","text":" "},{"type":"text","text":"is not exclusive: it may be called at any time, even if a returned future is not yet completed. "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","isActive":true},{"type":"text","text":" is terminal, meaning"},{"type":"text","text":" "},{"type":"text","text":"that once it has been called none of these four methods will be called again. This can be used as a signal to abandon all outstanding work."}],"type":"paragraph"},{"type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"This delegate is strongly held by the "},{"type":"codeVoice","code":"HTTPTaskHandler"},{"type":"text","text":" "},{"type":"text","text":"for the duration of the "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Request","type":"reference"},{"type":"text","text":" processing and will be"},{"type":"text","text":" "},{"type":"text","text":"released together with the "},{"type":"codeVoice","code":"HTTPTaskHandler"},{"type":"text","text":" when channel is closed."},{"type":"text","text":" "},{"type":"text","text":"Users of the library are not required to keep a reference to the"},{"type":"text","text":" "},{"type":"text","text":"object that implements this protocol, but may do so if needed."}]}],"name":"Note"}],"kind":"content"}],"relationshipsSections":[{"title":"Conforming Types","type":"conformingTypes","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/FileDownloadDelegate","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientCopyingDelegate","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator"]}],"kind":"symbol","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response"],"title":"Associated Types"},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequest(task:)-9od5p","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestHead(task:_:)-6khai","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestPart(task:_:)-4qxap"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequestPart(task:_:)-4qxap":{"defaultImplementations":1,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didSendRequestPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"IOData","preciseIdentifier":"s:7NIOCore6IODataO"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestPart(task:_:)-4qxap","type":"topic","kind":"symbol","required":true,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequestpart(task:_:)-4qxap","title":"didSendRequestPart(task:_:)","role":"symbol","abstract":[{"type":"text","text":"Called when a part of the request body is sent. Could be called zero or more times."}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/ResponseAccumulator":{"title":"ResponseAccumulator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/ResponseAccumulator","role":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ResponseAccumulator","kind":"identifier"}],"navigatorTitle":[{"text":"ResponseAccumulator","kind":"identifier"}],"abstract":[{"text":"The default ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate","isActive":true,"type":"reference"},{"text":".","type":"text"}],"url":"\/documentation\/asynchttpclient\/responseaccumulator","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/Response":{"title":"Response","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response","role":"symbol","fragments":[{"text":"associatedtype","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Response","kind":"identifier"}],"required":true,"abstract":[],"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/response","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didFinishRequest(task:)":{"title":"didFinishRequest(task:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didFinishRequest(task:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didFinishRequest"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"}],"required":true,"abstract":[{"text":"Called when the complete HTTP request is finished. You must return an instance of your ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/Response","isActive":true,"type":"reference"},{"text":" associated type. Will be called once, except if an error occurred.","type":"text"}],"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didfinishrequest(task:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveBodyPart(task:_:)-4fd4v":{"abstract":[{"text":"Called when part of a response body is received. Could be called zero or more times.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"text":" that you complete when you have finished processing the body part.","type":"text"},{"text":" ","type":"text"},{"text":"You can create an already succeeded future by calling ","type":"text"},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveBodyPart","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","title":"didReceiveBodyPart(task:_:)","required":true,"kind":"symbol","type":"topic","defaultImplementations":1,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivebodypart(task:_:)-4fd4v","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveBodyPart(task:_:)-4fd4v"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveError(task:_:)-fhsg":{"abstract":[{"text":"Called when error was thrown during request execution. Will be called zero or one time only. Request processing will be stopped after that.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"didReceiveError(task:_:)","required":true,"kind":"symbol","type":"topic","defaultImplementations":1,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceiveerror(task:_:)-fhsg","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveError(task:_:)-fhsg"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didReceiveHead(task:_:)-9r4xd":{"abstract":[{"text":"Called when response head is received. Will be called once.","type":"text"},{"text":" ","type":"text"},{"text":"You must return an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Void>"},{"text":" that you complete when you have finished processing the body part.","type":"text"},{"text":" ","type":"text"},{"text":"You can create an already succeeded future by calling ","type":"text"},{"type":"codeVoice","code":"task.eventLoop.makeSucceededFuture(())"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didReceiveHead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Response"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","title":"didReceiveHead(task:_:)","required":true,"kind":"symbol","type":"topic","defaultImplementations":1,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didreceivehead(task:_:)-9r4xd","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didReceiveHead(task:_:)-9r4xd"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequestHead(task:_:)-6khai":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"didSendRequestHead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"task"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"HTTPRequestHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Called when the request head is sent. Will be called once."}],"kind":"symbol","required":true,"url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequesthead(task:_:)-6khai","defaultImplementations":1,"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequestHead(task:_:)-6khai","title":"didSendRequestHead(task:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/execute(request:delegate:eventLoop:deadline:)":{"url":"\/documentation\/asynchttpclient\/httpclient\/execute(request:delegate:eventloop:deadline:)","title":"execute(request:delegate:eventLoop:deadline:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/execute(request:delegate:eventLoop:deadline:)","abstract":[{"type":"text","text":"Execute arbitrary HTTP request and handle response processing using provided delegate."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"execute"},{"kind":"text","text":"<"},{"text":"Delegate","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C7RequestV","text":"Request","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"delegate","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Delegate","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"eventLoop","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C19EventLoopPreferenceV","text":"EventLoopPreference","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","text":"NIODeadline","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Delegate","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClient/Request":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClient\/Request","role":"symbol","url":"\/documentation\/asynchttpclient\/httpclient\/request","title":"HTTPClient.Request","kind":"symbol","navigatorTitle":[{"text":"Request","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Request","kind":"identifier"}],"abstract":[{"text":"Represents an HTTP request.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/FileDownloadDelegate":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/FileDownloadDelegate","type":"topic","url":"\/documentation\/asynchttpclient\/filedownloaddelegate","kind":"symbol","title":"FileDownloadDelegate","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileDownloadDelegate"}],"navigatorTitle":[{"kind":"identifier","text":"FileDownloadDelegate"}],"abstract":[{"type":"text","text":"Handles a streaming download to a given file path, allowing headers and progress to be reported."}]},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient","role":"collection","title":"AsyncHTTPClient","url":"\/documentation\/asynchttpclient","type":"topic","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate":{"abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"},{"text":" allows an implementation to receive notifications about request processing and to control how response parts are processed.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPClientResponseDelegate","kind":"identifier"}],"role":"symbol","title":"HTTPClientResponseDelegate","navigatorTitle":[{"text":"HTTPClientResponseDelegate","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientCopyingDelegate":{"abstract":[{"text":"An ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate"},{"text":" that wraps a callback.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPClientCopyingDelegate","kind":"identifier"}],"role":"symbol","title":"HTTPClientCopyingDelegate","navigatorTitle":[{"text":"HTTPClientCopyingDelegate","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/asynchttpclient\/httpclientcopyingdelegate","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientCopyingDelegate"},"doc://co.pointfree.VaporRouting/documentation/AsyncHTTPClient/HTTPClientResponseDelegate/didSendRequest(task:)-9od5p":{"required":true,"title":"didSendRequest(task:)","abstract":[{"text":"Called when the request is fully sent. Will be called once.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"didSendRequest","kind":"identifier"},{"text":"(","kind":"text"},{"text":"task","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C","text":"HTTPClient","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:15AsyncHTTPClient0B0C4TaskC","text":"Task","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Response","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/asynchttpclient\/httpclientresponsedelegate\/didsendrequest(task:)-9od5p","defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncHTTPClient\/HTTPClientResponseDelegate\/didSendRequest(task:)-9od5p","kind":"symbol"}}}
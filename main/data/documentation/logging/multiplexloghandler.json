{"metadata":{"title":"MultiplexLogHandler","navigatorTitle":[{"text":"MultiplexLogHandler","kind":"identifier"}],"roleHeading":"Structure","symbolKind":"struct","modules":[{"name":"Logging"}],"role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}],"externalID":"s:7Logging19MultiplexLogHandlerV"},"abstract":[{"text":"A pseudo-","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":" that can be used to send messages to multiple other ","type":"text"},{"code":"LogHandler","type":"codeVoice"},{"text":"s.","type":"text"}],"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MultiplexLogHandler","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"level":3,"type":"heading","text":"Effective Logger.Level","anchor":"Effective-LoggerLevel"},{"type":"paragraph","inlineContent":[{"type":"text","text":"When first initialized the multiplex log handlers’ log level is automatically set to the minimum of all the"},{"type":"text","text":" "},{"type":"text","text":"passed in log handlers. This ensures that each of the handlers will be able to log at their appropriate level"},{"type":"text","text":" "},{"type":"text","text":"any log events they might be interested in."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If log handler "},{"code":"A","type":"codeVoice"},{"type":"text","text":" is logging at "},{"code":".debug","type":"codeVoice"},{"type":"text","text":" level, and log handler "},{"code":"B","type":"codeVoice"},{"type":"text","text":" is logging at "},{"code":".info","type":"codeVoice"},{"type":"text","text":" level, the constructed"},{"type":"text","text":" "},{"code":"MultiplexLogHandler([A, B])","type":"codeVoice"},{"type":"text","text":"’s effective log level will be set to "},{"code":".debug","type":"codeVoice"},{"type":"text","text":", meaning that debug messages will be"},{"type":"text","text":" "},{"type":"text","text":"handled by this handler, while only logged by the underlying "},{"code":"A","type":"codeVoice"},{"type":"text","text":" log handler (since "},{"code":"B","type":"codeVoice"},{"type":"text","text":"’s log level is "},{"code":".info","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and thus it would not actually log that log message)."}]},{"type":"paragraph","inlineContent":[{"text":"If the log level is ","type":"text"},{"inlineContent":[{"type":"text","text":"set"}],"type":"emphasis"},{"text":" on a ","type":"text"},{"code":"Logger","type":"codeVoice"},{"text":" backed by an ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" the log level will apply to ","type":"text"},{"inlineContent":[{"text":"all","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"underlying log handlers, allowing a logger to still select at what level it wants to log regardless of if the underlying","type":"text"},{"text":" ","type":"text"},{"text":"handler is a multiplex or a normal one. If for some reason one might want to not allow changing a log level of a specific","type":"text"},{"text":" ","type":"text"},{"text":"handler passed into the multiplex log handler, this is possible by wrapping it in a handler which ignores any log level changes.","type":"text"}]},{"level":3,"type":"heading","text":"Effective Logger.Metadata","anchor":"Effective-LoggerMetadata"},{"type":"paragraph","inlineContent":[{"text":"Since a ","type":"text"},{"code":"MultiplexLogHandler","type":"codeVoice"},{"text":" is a combination of multiple log handlers, the handling of metadata can be non-obvious.","type":"text"},{"text":" ","type":"text"},{"text":"For example, the underlying log handlers may have metadata of their own set before they are used to initialize the multiplex log handler.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"The multiplex log handler acts purely as proxy and does not make any changes to underlying handler metadata other than","type":"text"},{"text":" ","type":"text"},{"text":"proxying writes that users made on a ","type":"text"},{"type":"codeVoice","code":"Logger"},{"text":" instance backed by this handler.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Setting metadata is always proxied through to ","type":"text"},{"inlineContent":[{"type":"text","text":"all"}],"type":"emphasis"},{"text":" underlying handlers, meaning that if a modification like","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"logger[metadataKey: \"x\"] = \"y\""},{"text":" is made, all underlying log handlers that this multiplex handler was initiated with","type":"text"},{"text":" ","type":"text"},{"text":"will observe this change.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"Reading metadata from the multiplex log handler MAY need to pick one of conflicting values if the underlying log handlers","type":"text"},{"text":" ","type":"text"},{"text":"were already initiated with some metadata before passing them into the multiplex handler. The multiplex handler uses","type":"text"},{"text":" ","type":"text"},{"text":"the order in which the handlers were passed in during its initialization as a priority indicator - the first handler’s","type":"text"},{"text":" ","type":"text"},{"text":"values are more important than the next handlers values, etc.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Example:"},{"type":"text","text":" "},{"type":"text","text":"If the multiplex log handler was initiated with two handlers like this: "},{"type":"codeVoice","code":"MultiplexLogHandler([handler1, handler2])"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"The handlers each have some already set metadata: "},{"type":"codeVoice","code":"handler1"},{"type":"text","text":" has metadata values for keys "},{"type":"codeVoice","code":"one"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":", and "},{"type":"codeVoice","code":"handler2"},{"type":"text","text":" "},{"type":"text","text":"has values for keys "},{"type":"codeVoice","code":"two"},{"type":"text","text":" and "},{"type":"codeVoice","code":"all"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"A query through the multiplex log handler the key ","type":"text"},{"type":"codeVoice","code":"one"},{"text":" naturally returns ","type":"text"},{"type":"codeVoice","code":"handler1"},{"text":"’s value, and a query for ","type":"text"},{"type":"codeVoice","code":"two"},{"text":" ","type":"text"},{"text":"naturally returns ","type":"text"},{"type":"codeVoice","code":"handler2"},{"text":"’s value. Querying for the key ","type":"text"},{"type":"codeVoice","code":"all"},{"text":" will return ","type":"text"},{"type":"codeVoice","code":"handler1"},{"text":"’s value, as that handler was indicated","type":"text"},{"text":" ","type":"text"},{"text":"“more important” than the second handler. The same rule applies when querying for the ","type":"text"},{"type":"codeVoice","code":"metadata"},{"text":" property of the","type":"text"},{"text":" ","type":"text"},{"text":"multiplex log handler - it constructs ","type":"text"},{"type":"codeVoice","code":"Metadata"},{"text":" uniquing values.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler"},"sections":[],"variants":[{"paths":["\/documentation\/logging\/multiplexloghandler"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)"],"title":"Subscripts"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/subscript(metadataKey:)":{"url":"\/documentation\/logging\/multiplexloghandler\/subscript(metadatakey:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/subscript(metadataKey:)","title":"subscript(metadataKey:)","fragments":[{"kind":"keyword","text":"subscript"},{"kind":"text","text":"("},{"kind":"externalParam","text":"metadataKey"},{"kind":"text","text":" _: "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Key","preciseIdentifier":"s:SD3Keya"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Logger","preciseIdentifier":"s:7Logging6LoggerV"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Metadata","preciseIdentifier":"s:7Logging6LoggerV8Metadataa"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:SD5Valuea"},{"kind":"text","text":"?"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Add, remove, or change the logging metadata."}]},"doc://co.pointfree.VaporRouting/documentation/Logging":{"abstract":[],"url":"\/documentation\/logging","title":"Logging","role":"collection","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/metadata":{"title":"metadata","role":"symbol","type":"topic","kind":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/metadata","abstract":[{"type":"text","text":"Get or set the entire metadata storage as a dictionary."}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"metadata","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","text":"Metadata","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/metadata"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler":{"url":"\/documentation\/logging\/multiplexloghandler","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler","title":"MultiplexLogHandler","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexLogHandler"}],"navigatorTitle":[{"kind":"identifier","text":"MultiplexLogHandler"}],"kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A pseudo-"},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" that can be used to send messages to multiple other "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":"s."}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/init(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/init(_:)","type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"(["},{"text":"LogHandler","kind":"typeIdentifier","preciseIdentifier":"s:7Logging10LogHandlerP"},{"text":"])","kind":"text"}],"role":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/init(_:)","kind":"symbol","abstract":[{"type":"text","text":"Create a "},{"code":"MultiplexLogHandler","type":"codeVoice"},{"type":"text","text":"."}],"title":"init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/logLevel":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/logLevel","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logLevel","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Logger","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV"},{"text":".","kind":"text"},{"text":"Level","kind":"typeIdentifier","preciseIdentifier":"s:7Logging6LoggerV5LevelO"}],"abstract":[{"text":"Get or set the configured log level.","type":"text"}],"role":"symbol","title":"logLevel","url":"\/documentation\/logging\/multiplexloghandler\/loglevel","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/log(level:message:metadata:source:file:function:line:)":{"type":"topic","title":"log(level:message:metadata:source:file:function:line:)","role":"symbol","kind":"symbol","url":"\/documentation\/logging\/multiplexloghandler\/log(level:message:metadata:source:file:function:line:)","abstract":[{"type":"text","text":"This method is called when a "},{"code":"LogHandler","type":"codeVoice"},{"type":"text","text":" must emit a log message. There is no need for the "},{"code":"LogHandler","type":"codeVoice"},{"type":"text","text":" to"},{"type":"text","text":" "},{"type":"text","text":"check if the "},{"code":"level","type":"codeVoice"},{"type":"text","text":" is above or below the configured "},{"code":"logLevel","type":"codeVoice"},{"type":"text","text":" as "},{"code":"Logger","type":"codeVoice"},{"type":"text","text":" already performed this check and"},{"type":"text","text":" "},{"type":"text","text":"determined that a message should be logged."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/log(level:message:metadata:source:file:function:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"log","kind":"identifier"},{"text":"(","kind":"text"},{"text":"level","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV5LevelO","text":"Level","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Logging6LoggerV","text":"Logger","kind":"typeIdentifier"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV7MessageV","kind":"typeIdentifier","text":"Message"},{"kind":"text","text":", "},{"kind":"externalParam","text":"metadata"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Logging6LoggerV","kind":"typeIdentifier","text":"Logger"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Logging6LoggerV8Metadataa","kind":"typeIdentifier","text":"Metadata"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"source"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Logging/MultiplexLogHandler/LogHandler-Implementations":{"kind":"article","title":"LogHandler Implementations","role":"collectionGroup","url":"\/documentation\/logging\/multiplexloghandler\/loghandler-implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/MultiplexLogHandler\/LogHandler-Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Logging/LogHandler":{"title":"LogHandler","kind":"symbol","navigatorTitle":[{"text":"LogHandler","kind":"identifier"}],"role":"symbol","url":"\/documentation\/logging\/loghandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LogHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"LogHandler"},{"type":"text","text":" is an implementation of a logging backend."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Logging\/LogHandler","type":"topic"}}}
{"hierarchy":{"paths":[[]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS"},"sections":[],"kind":"symbol","topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ALPNResult","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIResult","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/TLSUserEvent"]}],"variants":[{"paths":["\/documentation\/niotls"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"NIOTLS","role":"collection","modules":[{"name":"NIOTLS"}],"symbolKind":"module","roleHeading":"Framework","externalID":"NIOTLS"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOTLS/TLSUserEvent":{"kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"TLSUserEvent","kind":"identifier"}],"role":"symbol","title":"TLSUserEvent","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/TLSUserEvent","abstract":[{"type":"text","text":"Common user events sent by all TLS implementations."}],"navigatorTitle":[{"text":"TLSUserEvent","kind":"identifier"}],"url":"\/documentation\/niotls\/tlsuserevent"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS":{"title":"NIOTLS","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS","kind":"symbol","role":"collection","url":"\/documentation\/niotls","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIResult":{"type":"topic","role":"symbol","url":"\/documentation\/niotls\/sniresult","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SNIResult"}],"title":"SNIResult","abstract":[{"type":"text","text":"The result of the SNI parsing. If "},{"code":"hostname","type":"codeVoice"},{"text":", then the enum also","type":"text"},{"text":" ","type":"text"},{"text":"contains the hostname received in the SNI extension. If ","type":"text"},{"code":"fallback","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"then either we could not parse the SNI extension or it was not there","type":"text"},{"text":" ","type":"text"},{"text":"at all.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SNIResult"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIResult"},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ApplicationProtocolNegotiationHandler":{"navigatorTitle":[{"text":"ApplicationProtocolNegotiationHandler","kind":"identifier"}],"title":"ApplicationProtocolNegotiationHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ApplicationProtocolNegotiationHandler","kind":"symbol","role":"symbol","url":"\/documentation\/niotls\/applicationprotocolnegotiationhandler","type":"topic","abstract":[{"text":"A helper ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" that makes it easy to swap channel pipelines","type":"text"},{"text":" ","type":"text"},{"text":"based on the result of an ALPN negotiation.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ApplicationProtocolNegotiationHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/ALPNResult":{"navigatorTitle":[{"text":"ALPNResult","kind":"identifier"}],"title":"ALPNResult","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/ALPNResult","kind":"symbol","role":"symbol","url":"\/documentation\/niotls\/alpnresult","type":"topic","abstract":[{"text":"The result of an ALPN negotiation.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ALPNResult","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOTLS/SNIHandler":{"navigatorTitle":[{"text":"SNIHandler","kind":"identifier"}],"role":"symbol","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTLS\/SNIHandler","url":"\/documentation\/niotls\/snihandler","title":"SNIHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SNIHandler","kind":"identifier"}],"abstract":[{"text":"A channel handler that can be used to arbitrarily edit a channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline based on the hostname requested in the Server Name Indication","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"portion of the TLS Client Hello."}]}}}
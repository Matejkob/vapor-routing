{"sections":[],"abstract":[{"type":"text","text":"Atomically exchanges "},{"code":"value","type":"codeVoice"},{"type":"text","text":" for the current value of this object."}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/exchange(with:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/exchange(with:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"exchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"T"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The new value to set this object to."}],"type":"paragraph"}],"name":"value"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"inlineContent":[{"type":"text","text":"The value previously held by this object."}],"type":"paragraph"}],"kind":"content"},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"inlineContent":[{"type":"text","text":"This implementation uses a "},{"type":"emphasis","inlineContent":[{"type":"text","text":"relaxed"}]},{"type":"text","text":" memory ordering. This guarantees nothing"},{"type":"text","text":" "},{"type":"text","text":"more than that this operation is atomic: there is no guarantee that any other"},{"type":"text","text":" "},{"type":"text","text":"event will be ordered before or after this one."}],"type":"paragraph"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The implementation of "},{"code":"exchange","type":"codeVoice"},{"type":"text","text":" contains a "},{"inlineContent":[{"text":"Compare and Exchange loop","type":"text"}],"type":"emphasis"},{"type":"text","text":", ie. it may busy wait with"},{"type":"text","text":" "},{"type":"text","text":"100% CPU load."}]}],"type":"aside","name":"Warning","style":"warning"}]}],"metadata":{"platforms":[],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"NIOConcurrencyHelpers"}],"title":"exchange(with:)","externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC8exchange4withxx_tF"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"deprecationSummary":[{"inlineContent":[{"type":"text","text":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}],"type":"paragraph"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox/exchange(with:)":{"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/exchange(with:)","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/exchange(with:)","title":"exchange(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Atomically exchanges "},{"type":"codeVoice","code":"value"},{"type":"text","text":" for the current value of this object."}],"role":"symbol","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","title":"NIOConcurrencyHelpers","type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox","title":"AtomicBox","navigatorTitle":[{"text":"AtomicBox","kind":"identifier"}],"abstract":[{"code":"AtomicBox","type":"codeVoice"},{"text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class.","type":"text"}],"role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicBox","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicbox"}}}
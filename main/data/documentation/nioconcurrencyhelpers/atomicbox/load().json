{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/load()"},"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"AtomicBox is deprecated without replacement because the original implementation doesn't work."}]}],"metadata":{"modules":[{"name":"NIOConcurrencyHelpers"}],"externalID":"s:21NIOConcurrencyHelpers9AtomicBoxC4loadxyF","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","title":"load()","platforms":[],"roleHeading":"Instance Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"T"}]}]},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"type":"paragraph","inlineContent":[{"text":"The value of this object","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This implementation uses a ","type":"text"},{"inlineContent":[{"text":"relaxed","type":"text"}],"type":"emphasis"},{"text":" memory ordering. This guarantees nothing","type":"text"},{"text":" ","type":"text"},{"text":"more than that this operation is atomic: there is no guarantee that any other","type":"text"},{"text":" ","type":"text"},{"text":"event will be ordered before or after this one.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The implementation of "},{"type":"codeVoice","code":"exchange"},{"type":"text","text":" contains a "},{"inlineContent":[{"text":"Compare and Exchange loop","type":"text"}],"type":"emphasis"},{"type":"text","text":", ie. it may busy wait with"},{"type":"text","text":" "},{"type":"text","text":"100% CPU load."}]}],"name":"Warning","type":"aside","style":"warning"}],"kind":"content"}],"sections":[],"abstract":[{"type":"text","text":"Atomically loads and returns the value of this object."}],"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/atomicbox\/load()"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox","title":"AtomicBox","navigatorTitle":[{"text":"AtomicBox","kind":"identifier"}],"abstract":[{"code":"AtomicBox","type":"codeVoice"},{"text":" is a heap-allocated box which allows lock-free access to an instance of a Swift class.","type":"text"}],"role":"symbol","deprecated":true,"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicBox","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicbox"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","title":"NIOConcurrencyHelpers","type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicBox/load()":{"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/atomicbox\/load()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicBox\/load()","role":"symbol","type":"topic","title":"load()","deprecated":true,"abstract":[{"type":"text","text":"Atomically loads and returns the value of this object."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]}}}
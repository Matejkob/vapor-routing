{"kind":"symbol","abstract":[{"type":"text","text":"Atomically compares the value against "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"type":"codeVoice","code":"desired"},{"type":"text","text":"."}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareAndExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"desired","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The value that this object must currently hold for the","type":"text"},{"text":" ","type":"text"},{"text":"compare-and-swap to succeed.","type":"text"}]}],"name":"expected"},{"content":[{"inlineContent":[{"type":"text","text":"The new value that this object will hold if the compare"},{"type":"text","text":" "},{"type":"text","text":"succeeds."}],"type":"paragraph"}],"name":"desired"}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"inlineContent":[{"text":"","type":"text"},{"code":"True","type":"codeVoice"},{"text":" if the exchange occurred, or ","type":"text"},{"code":"False","type":"codeVoice"},{"text":" if ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" did not","type":"text"},{"text":" ","type":"text"},{"text":"match the current value and so no exchange occurred.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This implementation conforms to C11’s ","type":"text"},{"code":"atomic_compare_exchange_strong","type":"codeVoice"},{"text":". This","type":"text"},{"text":" ","type":"text"},{"text":"means that the compare-and-swap will always succeed if ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" is equal to","type":"text"},{"text":" ","type":"text"},{"text":"value. Additionally, it uses a ","type":"text"},{"inlineContent":[{"type":"text","text":"sequentially consistent ordering"}],"type":"emphasis"},{"text":". For more","type":"text"},{"text":" ","type":"text"},{"text":"details on atomic memory models, check the documentation for C11’s","type":"text"},{"text":" ","type":"text"},{"code":"stdatomic.h","type":"codeVoice"},{"text":".","type":"text"}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic\/compareAndExchange(expected:desired:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic"]]},"deprecationSummary":[{"inlineContent":[{"text":"please use ManagedAtomic from https:\/\/github.com\/apple\/swift-atomics instead","type":"text"}],"type":"paragraph"}],"variants":[{"paths":["\/documentation\/nioconcurrencyhelpers\/nioatomic\/compareandexchange(expected:desired:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"title":"compareAndExchange(expected:desired:)","role":"symbol","externalID":"s:21NIOConcurrencyHelpers9NIOAtomicC18compareAndExchange8expected7desiredSbx_xtF","modules":[{"name":"NIOConcurrencyHelpers"}],"symbolKind":"method","platforms":[],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"roleHeading":"Instance Method"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/NIOAtomic/compareAndExchange(expected:desired:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic\/compareAndExchange(expected:desired:)","deprecated":true,"title":"compareAndExchange(expected:desired:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"Atomically compares the value against "},{"type":"codeVoice","code":"expected"},{"type":"text","text":" and, if they are equal,"},{"type":"text","text":" "},{"type":"text","text":"replaces the value with "},{"type":"codeVoice","code":"desired"},{"type":"text","text":"."}],"url":"\/documentation\/nioconcurrencyhelpers\/nioatomic\/compareandexchange(expected:desired:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/NIOAtomic":{"role":"symbol","title":"NIOAtomic","deprecated":true,"type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/nioatomic","navigatorTitle":[{"kind":"identifier","text":"NIOAtomic"}],"abstract":[{"type":"text","text":"An encapsulation of an atomic primitive object."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOAtomic"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/NIOAtomic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","title":"NIOConcurrencyHelpers","type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"}}}
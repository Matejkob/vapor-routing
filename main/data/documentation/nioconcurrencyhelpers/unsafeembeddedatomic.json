{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeEmbeddedAtomic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","kind":"typeIdentifier","preciseIdentifier":"s:21NIOConcurrencyHelpers15AtomicPrimitiveP","text":"AtomicPrimitive"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"inlineContent":[{"text":"Before using ","type":"text"},{"code":"UnsafeEmbeddedAtomic","type":"codeVoice"},{"text":", please consider whether your needs can be met by ","type":"text"},{"code":"Atomic","type":"codeVoice"},{"text":" instead.","type":"text"},{"text":" ","type":"text"},{"code":"UnsafeEmbeddedAtomic","type":"codeVoice"},{"text":" is a value type, but atomics are heap-allocated. Thus, it is only safe to","type":"text"},{"text":" ","type":"text"},{"text":"use ","type":"text"},{"code":"UnsafeEmbeddedAtomic","type":"codeVoice"},{"text":" in situations where the atomic can be guaranteed to be cleaned up (via calling ","type":"text"},{"code":"destroy","type":"codeVoice"},{"text":").","type":"text"},{"text":" ","type":"text"},{"text":"If you cannot make these guarantees, use ","type":"text"},{"code":"Atomic","type":"codeVoice"},{"text":" instead, which manages this for you.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Atomic objects support a wide range of atomic operations:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Compare and swap"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Add"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Subtract"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Exchange"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Load current value"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"Store current value","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"Atomic primitives are useful when building constructs that need to","type":"text"},{"text":" ","type":"text"},{"text":"communicate or cooperate across multiple threads. In the case of","type":"text"},{"text":" ","type":"text"},{"text":"SwiftNIO this usually involves communicating across multiple event loops.","type":"text"}],"type":"paragraph"}]}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"text":"please use UnsafeAtomic from https:\/\/github.com\/apple\/swift-atomics instead","type":"text"}]}],"kind":"symbol","abstract":[{"type":"text","text":"An atomic primitive object."}],"metadata":{"platforms":[],"roleHeading":"Structure","navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"externalID":"s:21NIOConcurrencyHelpers20UnsafeEmbeddedAtomicV","symbolKind":"struct","role":"symbol","modules":[{"name":"NIOConcurrencyHelpers"}],"title":"UnsafeEmbeddedAtomic"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic"]}],"sections":[],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)"],"title":"Instance Methods"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/init(value:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"type":"text","text":"Create an atomic object with "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"deprecated":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/init(value:)","title":"init(value:)","kind":"symbol","type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/init(value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic":{"navigatorTitle":[{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}],"deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic","type":"topic","title":"UnsafeEmbeddedAtomic","role":"symbol","kind":"symbol","abstract":[{"text":"An atomic primitive object.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeEmbeddedAtomic","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/load()":{"abstract":[{"text":"Atomically loads and returns the value of this object.","type":"text"}],"deprecated":true,"type":"topic","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/load()","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/load()","title":"load()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers":{"role":"collection","title":"NIOConcurrencyHelpers","type":"topic","kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/AtomicPrimitive":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/AtomicPrimitive","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicPrimitive","kind":"identifier"}],"navigatorTitle":[{"text":"AtomicPrimitive","kind":"identifier"}],"url":"\/documentation\/nioconcurrencyhelpers\/atomicprimitive","abstract":[{"type":"text","text":"The protocol that all types that can be made atomic must conform to."}],"role":"symbol","kind":"symbol","type":"topic","title":"AtomicPrimitive"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/sub(_:)":{"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/sub(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/sub(_:)","title":"sub(_:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"sub","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}],"role":"symbol","deprecated":true,"abstract":[{"type":"text","text":"Atomically subtracts "},{"type":"codeVoice","code":"rhs"},{"type":"text","text":" from this object."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/destroy()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"text":"()","kind":"text"}],"title":"destroy()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/destroy()","type":"topic","abstract":[{"text":"Destroy the atomic value.","type":"text"}],"deprecated":true,"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/destroy()"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/exchange(with:)":{"kind":"symbol","deprecated":true,"type":"topic","abstract":[{"text":"Atomically exchanges ","type":"text"},{"type":"codeVoice","code":"value"},{"text":" for the current value of this object.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"}],"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/exchange(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/exchange(with:)","title":"exchange(with:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/add(_:)":{"deprecated":true,"url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/add(_:)","type":"topic","title":"add(_:)","role":"symbol","kind":"symbol","abstract":[{"text":"Atomically adds ","type":"text"},{"type":"codeVoice","code":"rhs"},{"text":" to this object.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/add(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"},{"text":"(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/store(_:)":{"abstract":[{"type":"text","text":"Atomically replaces the value of this object with "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"kind":"symbol","deprecated":true,"title":"store(_:)","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/store(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"store"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":")"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/store(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOConcurrencyHelpers/UnsafeEmbeddedAtomic/compareAndExchange(expected:desired:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOConcurrencyHelpers\/UnsafeEmbeddedAtomic\/compareAndExchange(expected:desired:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareAndExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"title":"compareAndExchange(expected:desired:)","role":"symbol","deprecated":true,"abstract":[{"text":"Atomically compares the value against ","type":"text"},{"code":"expected","type":"codeVoice"},{"text":" and, if they are equal,","type":"text"},{"text":" ","type":"text"},{"text":"replaces the value with ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","url":"\/documentation\/nioconcurrencyhelpers\/unsafeembeddedatomic\/compareandexchange(expected:desired:)","type":"topic"}}}
{"metadata":{"role":"collection","modules":[{"name":"CoreMetrics"}],"title":"CoreMetrics","roleHeading":"Framework","symbolKind":"module","externalID":"CoreMetrics"},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer"]},{"title":"Protocols","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler"]},{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"]}],"hierarchy":{"paths":[[]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics"},"variants":[{"paths":["\/documentation\/coremetrics"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimerHandler":{"navigatorTitle":[{"kind":"identifier","text":"TimerHandler"}],"title":"TimerHandler","abstract":[{"type":"text","text":"A "},{"code":"TimerHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"Timer","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimerHandler","type":"topic","kind":"symbol","url":"\/documentation\/coremetrics\/timerhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimerHandler"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/TimeUnit":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/TimeUnit","role":"symbol","url":"\/documentation\/coremetrics\/timeunit","abstract":[],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"TimeUnit"}],"title":"TimeUnit","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"TimeUnit"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Gauge":{"navigatorTitle":[{"kind":"identifier","text":"Gauge"}],"title":"Gauge","abstract":[{"type":"text","text":"A gauge is a metric that represents a single numerical value that can arbitrarily go up and down."},{"type":"text","text":" "},{"type":"text","text":"Gauges are typically used for measured values like temperatures or current memory usage, but also “counts” that can go up and down, like the number of active threads."},{"type":"text","text":" "},{"type":"text","text":"Gauges are modeled as "},{"code":"Recorder","type":"codeVoice"},{"type":"text","text":" with a sample size of 1 and that does not perform any aggregation."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Gauge","type":"topic","kind":"symbol","url":"\/documentation\/coremetrics\/gauge","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Gauge"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics":{"url":"\/documentation\/coremetrics","type":"topic","title":"CoreMetrics","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics","abstract":[],"kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Timer":{"url":"\/documentation\/coremetrics\/timer","type":"topic","title":"Timer","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Timer","abstract":[{"text":"A timer collects observations within a time window (usually things like request durations) and provides aggregated information about the data sample,","type":"text"},{"text":" ","type":"text"},{"text":"for example, min, max and various quantiles. It is similar to a ","type":"text"},{"type":"codeVoice","code":"Recorder"},{"text":" but specialized for values that represent durations.","type":"text"}],"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Timer","kind":"identifier"}],"navigatorTitle":[{"text":"Timer","kind":"identifier"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Counter":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Counter","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"Counter","kind":"identifier"}],"abstract":[{"text":"A counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a counter to represent the number of requests served, tasks completed, or errors.","type":"text"}],"title":"Counter","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Counter","url":"\/documentation\/coremetrics\/counter"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/RecorderHandler":{"url":"\/documentation\/coremetrics\/recorderhandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RecorderHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"Recorder"},{"type":"text","text":"."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"RecorderHandler"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"RecorderHandler"}],"title":"RecorderHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/RecorderHandler"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsSystem":{"abstract":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"MetricsSystem"},{"text":" is a global facility where the default metrics backend implementation (","type":"text"},{"type":"codeVoice","code":"MetricsFactory"},{"text":") can be","type":"text"},{"text":" ","type":"text"},{"text":"configured. ","type":"text"},{"type":"codeVoice","code":"MetricsSystem"},{"text":" is set up just once in a given program to set up the desired metrics backend","type":"text"},{"text":" ","type":"text"},{"text":"implementation.","type":"text"}],"role":"symbol","title":"MetricsSystem","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"MetricsSystem","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/coremetrics\/metricssystem","navigatorTitle":[{"text":"MetricsSystem","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsSystem"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounter":{"abstract":[{"text":"A FloatingPointCounter is a cumulative metric that represents a single monotonically increasing FloatingPointCounter whose value can only increase or be reset to zero.","type":"text"},{"text":" ","type":"text"},{"text":"For example, you can use a FloatingPointCounter to represent the number of requests served, tasks completed, or errors.","type":"text"},{"text":" ","type":"text"},{"text":"FloatingPointCounter is not supported by all metrics backends, however a default implementation is provided which accumulates floating point values and records increments to a standard Counter after crossing integer boundaries.","type":"text"}],"role":"symbol","title":"FloatingPointCounter","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"FloatingPointCounter","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/coremetrics\/floatingpointcounter","navigatorTitle":[{"text":"FloatingPointCounter","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounter"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MultiplexMetricsHandler":{"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiplexMetricsHandler"}],"title":"MultiplexMetricsHandler","navigatorTitle":[{"kind":"identifier","text":"MultiplexMetricsHandler"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MultiplexMetricsHandler","url":"\/documentation\/coremetrics\/multiplexmetricshandler","kind":"symbol","abstract":[{"type":"text","text":"A pseudo-metrics handler that can be used to send messages to multiple other metrics handlers."}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/NOOPMetricsHandler":{"url":"\/documentation\/coremetrics\/noopmetricshandler","abstract":[{"type":"text","text":"Ships with the metrics module, used for initial bootstrapping."}],"type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NOOPMetricsHandler"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NOOPMetricsHandler"}],"title":"NOOPMetricsHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/NOOPMetricsHandler"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/FloatingPointCounterHandler":{"navigatorTitle":[{"kind":"identifier","text":"FloatingPointCounterHandler"}],"title":"FloatingPointCounterHandler","abstract":[{"type":"text","text":"A "},{"code":"FloatingPointCounterHandler","type":"codeVoice"},{"type":"text","text":" represents a backend implementation of a "},{"code":"FloatingPointCounter","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/FloatingPointCounterHandler","type":"topic","kind":"symbol","url":"\/documentation\/coremetrics\/floatingpointcounterhandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FloatingPointCounterHandler"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/MetricsFactory":{"navigatorTitle":[{"kind":"identifier","text":"MetricsFactory"}],"title":"MetricsFactory","abstract":[{"type":"text","text":"The "},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":" is the bridge between the "},{"code":"MetricsSystem","type":"codeVoice"},{"type":"text","text":" and the metrics backend implementation."},{"type":"text","text":" "},{"code":"MetricsFactory","type":"codeVoice"},{"type":"text","text":"’s role is to initialize concrete implementations of the various metric types:"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/MetricsFactory","type":"topic","kind":"symbol","url":"\/documentation\/coremetrics\/metricsfactory","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MetricsFactory"}]},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/CounterHandler":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CounterHandler"}],"title":"CounterHandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/CounterHandler","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CounterHandler"}],"type":"topic","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"CounterHandler"},{"type":"text","text":" represents a backend implementation of a "},{"type":"codeVoice","code":"Counter"},{"type":"text","text":"."}],"url":"\/documentation\/coremetrics\/counterhandler"},"doc://co.pointfree.VaporRouting/documentation/CoreMetrics/Recorder":{"kind":"symbol","title":"Recorder","url":"\/documentation\/coremetrics\/recorder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/CoreMetrics\/Recorder","abstract":[{"type":"text","text":"A recorder collects observations within a time window (usually things like response sizes) and "},{"type":"emphasis","inlineContent":[{"text":"can","type":"text"}]},{"type":"text","text":" provide aggregated information about the data sample, for example, count, sum, min, max and various quantiles."}],"role":"symbol","navigatorTitle":[{"text":"Recorder","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Recorder","kind":"identifier"}],"type":"topic"}}}
{"abstract":[{"text":"A type-erased parser-printer of ","type":"text"},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)"],"title":"Initializers"},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations"],"generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/anyparserprinter"]}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnyParserPrinter"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser-printer forwards its "},{"type":"codeVoice","code":"parse(_:)"},{"type":"text","text":" and "},{"type":"codeVoice","code":"print(_:to:)"},{"type":"text","text":" methods to an arbitrary"},{"type":"text","text":" "},{"type":"text","text":"underlying parser-printer having the same "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" types, hiding the specifics of"},{"type":"text","text":" "},{"type":"text","text":"the underlying "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","isActive":true},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"Use ","type":"text"},{"code":"AnyParserPrinter","type":"codeVoice"},{"text":" to wrap a parser whose type has details you don’t want to expose across","type":"text"},{"text":" ","type":"text"},{"text":"API boundaries, such as different modules. When you use type erasure this way, you can change","type":"text"},{"text":" ","type":"text"},{"text":"the underlying parser over time without affecting existing clients.","type":"text"}]}],"kind":"content"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter"},"metadata":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"modules":[{"name":"Parsing"}],"title":"AnyParserPrinter","symbolKind":"struct","role":"symbol","roleHeading":"Structure","externalID":"s:7Parsing16AnyParserPrinterV"},"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"kind":"symbol","relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"type":"conformsTo","kind":"relationships"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/print(_:into:)":{"role":"symbol","abstract":[{"text":"Attempts to print a well-structured piece of data into something more nebulous.","type":"text"}],"type":"topic","kind":"symbol","title":"print(_:into:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"print"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/parsing\/anyparserprinter\/print(_:into:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/init(parse:print:)":{"role":"symbol","abstract":[{"text":"Creates a parser-printer that wraps the given closures in its ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","isActive":true,"type":"reference"},{"text":" and","type":"text"},{"text":" ","type":"text"},{"code":"print(_:to:)","type":"codeVoice"},{"text":" methods.","type":"text"}],"type":"topic","kind":"symbol","title":"init(parse:print:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(parse:print:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"parse"},{"kind":"text","text":": ("},{"kind":"keyword","text":"inout"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"print","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"url":"\/documentation\/parsing\/anyparserprinter\/init(parse:print:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Output"}],"title":"parse(_:)","url":"\/documentation\/parsing\/anyparserprinter\/parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/parse(_:)","type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/init(_:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter\/init(_:)","title":"init(_:)","abstract":[{"type":"text","text":"Creates a type-erasing parser-printer to wrap the given parser-printer."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/Parser-Implementations":{"url":"\/documentation\/parsing\/anyparserprinter\/parser-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/Parser-Implementations","title":"Parser Implementations","type":"topic","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter/ParserPrinter-Implementations":{"type":"topic","kind":"article","title":"ParserPrinter Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter\/ParserPrinter-Implementations","url":"\/documentation\/parsing\/anyparserprinter\/parserprinter-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParserPrinter":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParserPrinter","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"AnyParserPrinter","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParserPrinter","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/anyparserprinter","title":"AnyParserPrinter","abstract":[{"type":"text","text":"A type-erased parser-printer of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}]}}}
{"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildIf"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:7Parsing12OneOfBuilderO","kind":"typeIdentifier","text":"OneOfBuilder"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing12OneOfBuilderO08OptionalbC0V","text":"OptionalOneOf","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Type Method","symbolKind":"method","role":"symbol","externalID":"s:7Parsing12OneOfBuilderO7buildIfyAC08OptionalbC0Vy_xGxSgAA6ParserRzlFZ","title":"buildIf(_:)","modules":[{"name":"Parsing"}]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildIf","kind":"identifier"},{"text":"<","kind":"text"},{"text":"P","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"parser","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","text":"OneOfBuilder","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing12OneOfBuilderO"},{"text":".","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf","text":"OptionalOneOf","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing12OneOfBuilderO08OptionalbC0V"},{"text":"<","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"P","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","text":"Parser","kind":"typeIdentifier","preciseIdentifier":"s:7Parsing6ParserP"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"codeListing","syntax":"swift","code":["let whitespace = OneOf {","  if shouldParseNewlines {","    \"\\r\\n\"","    \"\\r\"","    \"\\n\"","  }","","  \" \"","  \"\\t\"","}"]}]}],"variants":[{"paths":["\/documentation\/parsing\/oneofbuilder\/buildif(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/buildIf(_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"type":"text","text":"Provides support for "},{"type":"codeVoice","code":"if"},{"type":"text","text":" statements in "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder"},{"type":"text","text":" blocks, producing an optional parser."}],"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder":{"type":"topic","title":"OneOfBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","role":"symbol","url":"\/documentation\/parsing\/oneofbuilder","abstract":[{"type":"text","text":"A custom parameter attribute that constructs parsers from closures. The constructed parser"},{"type":"text","text":" "},{"type":"text","text":"runs each parser in the closure, one after another, till one succeeds with an output."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"OneOfBuilder"}],"navigatorTitle":[{"text":"OneOfBuilder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/buildIf(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/buildIf(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildIf"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"P"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":"?) -> "},{"preciseIdentifier":"s:7Parsing12OneOfBuilderO","kind":"typeIdentifier","text":"OneOfBuilder"},{"kind":"text","text":"."},{"preciseIdentifier":"s:7Parsing12OneOfBuilderO08OptionalbC0V","kind":"typeIdentifier","text":"OptionalOneOf"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"P"},{"kind":"text","text":">"}],"kind":"symbol","url":"\/documentation\/parsing\/oneofbuilder\/buildif(_:)","abstract":[{"text":"Provides support for ","type":"text"},{"type":"codeVoice","code":"if"},{"text":" statements in ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder","isActive":true},{"text":" blocks, producing an optional parser.","type":"text"}],"type":"topic","title":"buildIf(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/OneOfBuilder/OptionalOneOf":{"title":"OneOfBuilder.OptionalOneOf","url":"\/documentation\/parsing\/oneofbuilder\/optionaloneof","abstract":[{"text":"A parser that parses output from an optional parser.","type":"text"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"OptionalOneOf"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"OptionalOneOf"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/OneOfBuilder\/OptionalOneOf"}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/rest"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"preciseIdentifier":"s:Sl","kind":"typeIdentifier","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"]}]},{"content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"codeListing","syntax":"swift","code":["var input = \"Hello\"[...]","Rest().parse(&input)  \/\/ \"Hello\"","input                 \/\/ \"\""]},{"type":"paragraph","inlineContent":[{"text":"This parser fails if there is no input to consume:","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["try Rest().parse(\"\")","","\/\/\/ error: unexpected input","\/\/\/  --> input:1:1","\/\/\/ 1 |","\/\/\/   | ^ expected a non-empty input"]},{"type":"paragraph","inlineContent":[{"text":"If you want to allow for the possibility of an empty remaining input you can use the","type":"text"},{"text":" ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally"},{"text":" parser to parse an optional output value, or the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/replaceError(with:)"},{"text":" method","type":"text"},{"text":" ","type":"text"},{"text":"to coalesce the error into a default output value.","type":"text"}]}],"kind":"content"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-3wugv","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-41jf5","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-9bc09"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Structure","modules":[{"name":"Parsing"}],"title":"Rest","externalID":"s:7Parsing4RestV","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Rest","kind":"identifier"}],"symbolKind":"struct","navigatorTitle":[{"text":"Rest","kind":"identifier"}]},"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"]}],"abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-9bc09":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-9bc09","role":"symbol","url":"\/documentation\/parsing\/rest\/init()-9bc09","kind":"symbol","title":"init()","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/parse(_:)":{"kind":"symbol","role":"symbol","title":"parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/parse(_:)","url":"\/documentation\/parsing\/rest\/parse(_:)","type":"topic","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/Parser-Implementations":{"type":"topic","title":"Parser Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/Parser-Implementations","role":"collectionGroup","abstract":[],"kind":"article","url":"\/documentation\/parsing\/rest\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-41jf5":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-41jf5","role":"symbol","url":"\/documentation\/parsing\/rest\/init()-41jf5","kind":"symbol","title":"init()","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/ParserPrinter-Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/rest\/parserprinter-implementations","kind":"article","title":"ParserPrinter Implementations","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally":{"abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/parsing\/optionally","title":"Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest":{"title":"Rest","url":"\/documentation\/parsing\/rest","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest","type":"topic","abstract":[{"type":"text","text":"A parser that consumes everything to the end of the collection and returns this subsequence as"},{"type":"text","text":" "},{"type":"text","text":"its output."}],"navigatorTitle":[{"kind":"identifier","text":"Rest"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Rest"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/replaceError(with:)":{"title":"replaceError(with:)","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/replaceError(with:)","role":"symbol","kind":"symbol","url":"\/documentation\/parsing\/rest\/replaceerror(with:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO","text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","text":"ReplaceError","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"role":"symbol","title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Rest/init()-3wugv":{"conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"Substring.UTF8View"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Rest\/init()-3wugv","role":"symbol","url":"\/documentation\/parsing\/rest\/init()-3wugv","kind":"symbol","title":"init()","type":"topic","abstract":[]}}}
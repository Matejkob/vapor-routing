{"abstract":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"metadata":{"title":"convert(apply:unapply:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"role":"symbol","externalID":"s:7Parsing10ConversionPAAE7convert5apply7unapplyAA03AnyB0Vyqd__qd_0_Gqd_0_Sgqd__c_qd__Sgqd_0_ctAIRszr0_lFZ::SYNTHESIZED::s:7Parsing11ConversionsO17SubstringToStringV","symbolKind":"method","modules":[{"name":"Parsing"}],"roleHeading":"Type Method","extendedModule":"Parsing"},"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/convert(apply:unapply:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"convert"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":" == "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","kind":"typeIdentifier","text":"AnyConversion","preciseIdentifier":"s:7Parsing13AnyConversionV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]}]},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that attempts to convert an input into an output. ","type":"text"},{"code":"apply","type":"codeVoice"},{"text":" is executed","type":"text"},{"text":" ","type":"text"},{"text":"each time the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/apply(_:)","isActive":true,"type":"reference"},{"text":" method is called on the resulting conversion. If the closure","type":"text"},{"text":" ","type":"text"},{"text":"returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":", an error is thrown. Otherwise, the value is unwrapped.","type":"text"}]}],"name":"apply"},{"content":[{"inlineContent":[{"type":"text","text":"A closure that attempts to convert an output into an input. "},{"type":"codeVoice","code":"unapply"},{"type":"text","text":" is executed"},{"type":"text","text":" "},{"type":"text","text":"each time the "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/unapply(_:)","isActive":true},{"type":"text","text":" method is called on the resulting conversion. If the closure"},{"type":"text","text":" "},{"type":"text","text":"returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":", an error is thrown. Otherwise, the value is unwrapped."}],"type":"paragraph"}],"name":"unapply"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"Useful for experimenting with conversions in a lightweight manner, without the ceremony of","type":"text"},{"text":" ","type":"text"},{"text":"defining a dedicated type.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct Amount {","  var cents: Int","}","","let amount = Parse(","  .convert(","    apply: { dollars, cents in Amount(cents: dollars * 100 + cents) },","    unapply: { amount in amount.cents.quotientAndRemainder(dividingBy: 100) }","  )",") {","  Digits()","  \".\"","  Digits(2)","}"]},{"type":"paragraph","inlineContent":[{"text":"If performance is a concern, you should define a custom type that conforms to ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion"},{"text":" ","type":"text"},{"text":"instead, which avoids the overhead of escaping closures, gives the compiler the ability to","type":"text"},{"text":" ","type":"text"},{"text":"better optimize, and puts your in a better position to test the conversion.","type":"text"}]},{"type":"codeListing","syntax":"swift","code":["struct AmountConversion: Conversion {","  func apply(_ dollarsAndCents: (Int, Int)) -> Amount {","    return Amount(cents: dollarsAndCents.0 * 100 + dollarsAndCents.1)","  }","","  func unapply(_ amount: Amount) -> (Int, Int) {","    amount.cents.quotientAndRemainder(dividingBy: 100)","  }","}","","let amount = Parse(AmountConversion()) {","  Digits()","  \".\"","  Digits(2)","}"]}],"kind":"content"}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/conversions\/substringtostring\/convert(apply:unapply:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/Conversion-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions":{"title":"Conversions","type":"topic","navigatorTitle":[{"text":"Conversions","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions","abstract":[{"text":"A namespace for types that serve as conversions.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Conversions","kind":"identifier"}],"url":"\/documentation\/parsing\/conversions"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/SubstringToString/Conversion-Implementations":{"title":"Conversion Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/Conversion-Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/parsing\/conversions\/substringtostring\/conversion-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/SubstringToString/unapply(_:)":{"abstract":[{"type":"text","text":"Attempts to transform an output back into an input."}],"title":"unapply(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unapply"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"}],"kind":"symbol","role":"symbol","url":"\/documentation\/parsing\/conversions\/substringtostring\/unapply(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/unapply(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","title":"Conversion","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversion","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversion"}],"navigatorTitle":[{"kind":"identifier","text":"Conversion"}],"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value "},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value back into an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/SubstringToString/convert(apply:unapply:)":{"abstract":[{"type":"text","text":"A conversion that invokes the given apply and unapply functions."}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"convert","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Input","kind":"genericParameter"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Output"},{"kind":"text","text":">("},{"kind":"externalParam","text":"apply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"unapply"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Self"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/convert(apply:unapply:)","kind":"symbol","role":"symbol","title":"convert(apply:unapply:)","url":"\/documentation\/parsing\/conversions\/substringtostring\/convert(apply:unapply:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/SubstringToString":{"title":"Conversions.SubstringToString","abstract":[{"type":"text","text":"A conversion from a substring to a string."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SubstringToString","kind":"identifier"}],"role":"symbol","url":"\/documentation\/parsing\/conversions\/substringtostring","navigatorTitle":[{"text":"SubstringToString","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyConversion":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyConversion","role":"symbol","navigatorTitle":[{"text":"AnyConversion","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/parsing\/anyconversion","abstract":[{"type":"text","text":"A type-erased "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","type":"reference","isActive":true},{"type":"text","text":"."}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyConversion","kind":"identifier"}],"title":"AnyConversion","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversions/SubstringToString/apply(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversions\/SubstringToString\/apply(_:)","url":"\/documentation\/parsing\/conversions\/substringtostring\/apply(_:)","title":"apply(_:)","kind":"symbol","abstract":[{"type":"text","text":"Attempts to transform an input into an output."}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"apply"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]}}}
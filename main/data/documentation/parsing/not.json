{"metadata":{"navigatorTitle":[{"text":"Not","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Not","kind":"identifier"}],"externalID":"s:7Parsing3NotV","roleHeading":"Structure","role":"symbol","title":"Not","modules":[{"name":"Parsing"}],"symbolKind":"struct"},"relationshipsSections":[{"type":"conformsTo","kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"kind":"symbol","schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Upstream"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP"}]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"type":"text","text":"For example, to parse a line from an input that does not start with “\/\/” one can do:"}],"type":"paragraph"},{"syntax":"swift","type":"codeListing","code":["let uncommentedLine = Parse {","  Not { \"\/\/\" }","  PrefixUpTo(\"\\n\")","}","","try uncommentedLine.parse(\"let x = 1\") \/\/ ✅ \"let x = 1\"","","try uncommentedLine.parse(\"\/\/ let x = 1\") \/\/ ❌","\/\/ error: unexpected input","\/\/  --> input:1:1-2","\/\/ 1 | \/\/ let x = 1","\/\/   | ^^ expected not to be processed"]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not"},"variants":[{"paths":["\/documentation\/parsing\/not"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/upstream"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/parse(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/print(_:into:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/ParserPrinter-Implementations"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not":{"title":"Not","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Not"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not","abstract":[{"type":"text","text":"A parser that succeeds if the given parser fails, and does not consume any input."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Not"}],"url":"\/documentation\/parsing\/not"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/parse(_:)":{"kind":"symbol","title":"parse(_:)","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","type":"topic","url":"\/documentation\/parsing\/not\/parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","abstract":[{"type":"text","text":"A "},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser"},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/upstream":{"role":"symbol","title":"upstream","abstract":[],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/not\/upstream","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/upstream","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upstream","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/init(_:)":{"kind":"symbol","title":"init(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/init(_:)","type":"topic","abstract":[{"type":"text","text":"Creates a parser that succeeds if the given parser fails, and does not consume any input."}],"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Upstream","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/not\/init(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/Parser-Implementations":{"title":"Parser Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/Parser-Implementations","abstract":[],"role":"collectionGroup","kind":"article","url":"\/documentation\/parsing\/not\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/ParserPrinter-Implementations","type":"topic","title":"ParserPrinter Implementations","abstract":[],"url":"\/documentation\/parsing\/not\/parserprinter-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Not/print(_:into:)":{"role":"symbol","title":"print(_:into:)","abstract":[{"type":"text","text":"Attempts to print a well-structured piece of data into something more nebulous."}],"kind":"symbol","type":"topic","url":"\/documentation\/parsing\/not\/print(_:into:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Not\/print(_:into:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"print","kind":"identifier"},{"text":"((), ","kind":"text"},{"text":"into","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"typeIdentifier","text":"Upstream"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]}}}
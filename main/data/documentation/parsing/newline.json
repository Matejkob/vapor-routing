{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/init()-3hk4u","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/init()-4xfjf","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/init()-9v1iv"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations"],"generated":true,"title":"Default Implementations"}],"deprecationSummary":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Use 'Whitespace(1, .vertical)' instead"}]}],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline","interfaceLanguage":"swift"},"sections":[],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Newline"}],"title":"Newline","modules":[{"name":"Parsing"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"symbolKind":"struct","roleHeading":"Structure","platforms":[],"role":"symbol","externalID":"s:7Parsing7NewlineV"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"InputToBytes"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","preciseIdentifier":"s:7Parsing10ConversionP","text":"Conversion"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sl","text":"Collection"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"InputToBytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"InputToBytes"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"text":"UTF8","preciseIdentifier":"s:s4UTF8a","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"CodeUnit","preciseIdentifier":"s:s7UnicodeO4UTF8O8CodeUnita","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/parsing\/newline"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Conversion":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Conversion","title":"Conversion","type":"topic","kind":"symbol","url":"\/documentation\/parsing\/conversion","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Conversion"}],"navigatorTitle":[{"kind":"identifier","text":"Conversion"}],"abstract":[{"type":"text","text":"Declares a type that can transform an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value into an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value "},{"inlineContent":[{"type":"text","text":"and"}],"type":"emphasis"},{"type":"text","text":" transform an"},{"type":"text","text":" "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value back into an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/Parser-Implementations":{"kind":"article","role":"collectionGroup","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/Parser-Implementations","url":"\/documentation\/parsing\/newline\/parser-implementations","title":"Parser Implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/init()-4xfjf":{"title":"init()","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.SubstringToUTF8View"},{"type":"text","text":"."}]},"abstract":[],"role":"symbol","deprecated":true,"type":"topic","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/init()-4xfjf","url":"\/documentation\/parsing\/newline\/init()-4xfjf"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"title":"ParserPrinter","abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Conversion"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"PrependableCollection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":", ","type":"text"},{"code":"InputToBytes.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"InputToBytes.Output.SubSequence","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"InputToBytes.Output.Element","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"UTF8.CodeUnit","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"url":"\/documentation\/parsing\/parserprinter","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/ParserPrinter-Implementations":{"role":"collectionGroup","url":"\/documentation\/parsing\/newline\/parserprinter-implementations","type":"topic","abstract":[],"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/ParserPrinter-Implementations","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/init()-3hk4u":{"role":"symbol","deprecated":true,"url":"\/documentation\/parsing\/newline\/init()-3hk4u","kind":"symbol","title":"init()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/init()-3hk4u","abstract":[],"type":"topic","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"C","kind":"genericParameter"},{"text":">()","kind":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Conversion"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Input.SubSequence"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":", ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.SubSequence"},{"text":", and ","type":"text"},{"type":"codeVoice","code":"InputToBytes.Output.Element"},{"text":" is ","type":"text"},{"type":"codeVoice","code":"UTF8.CodeUnit"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/init()-9v1iv":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"url":"\/documentation\/parsing\/newline\/init()-9v1iv","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"InputToBytes"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Conversions.Identity<Substring.UTF8View>"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","type":"topic","deprecated":true,"title":"init()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/init()-9v1iv","role":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline/parse(_:)":{"url":"\/documentation\/parsing\/newline\/parse(_:)","deprecated":true,"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InputToBytes","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","title":"parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"text":" conformances, not when you want to parse a concrete","type":"text"},{"text":" ","type":"text"},{"text":"input.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Newline":{"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Newline","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Newline"}],"url":"\/documentation\/parsing\/newline","navigatorTitle":[{"kind":"identifier","text":"Newline"}],"title":"Newline","abstract":[],"deprecated":true}}}
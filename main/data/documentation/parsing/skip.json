{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"A parser that discards the output of another parser."}],"metadata":{"title":"Skip","externalID":"s:7Parsing4SkipV","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"symbolKind":"struct","navigatorTitle":[{"text":"Skip","kind":"identifier"}],"modules":[{"name":"Parsing"}],"role":"symbol","roleHeading":"Structure"},"kind":"symbol","primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Skip"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Parsers"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Parsers"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","kind":"typeIdentifier","text":"Parser","preciseIdentifier":"s:7Parsing6ParserP"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"variants":[{"paths":["\/documentation\/parsing\/skip"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/init(_:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/parsers"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/parse(_:)"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/ParserPrinter-Implementations"]}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"kind":"relationships","type":"conformsTo"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}],"role":"symbol","url":"\/documentation\/parsing\/parserprinter","title":"ParserPrinter","conformance":{"constraints":[{"code":"Parsers","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"ParserPrinter","type":"codeVoice"},{"type":"text","text":" and "},{"code":"Parsers.Output","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Void","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"ParserPrinter","kind":"identifier"}],"navigatorTitle":[{"text":"ParserPrinter","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip/parse(_:)":{"abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"type":"codeVoice","code":"Parser"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"title":"parse(_:)","type":"topic","url":"\/documentation\/parsing\/skip\/parse(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/parse(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"parse","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip/init(_:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"text":"Parsers","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/init(_:)","title":"init(_:)","role":"symbol","url":"\/documentation\/parsing\/skip\/init(_:)","type":"topic","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip/ParserPrinter-Implementations":{"kind":"article","abstract":[],"type":"topic","title":"ParserPrinter Implementations","role":"collectionGroup","url":"\/documentation\/parsing\/skip\/parserprinter-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/ParserPrinter-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip":{"navigatorTitle":[{"text":"Skip","kind":"identifier"}],"title":"Skip","role":"symbol","url":"\/documentation\/parsing\/skip","abstract":[{"text":"A parser that discards the output of another parser.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Skip","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/Parser-Implementations","kind":"article","title":"Parser Implementations","role":"collectionGroup","abstract":[],"type":"topic","url":"\/documentation\/parsing\/skip\/parser-implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Skip/parsers":{"abstract":[{"type":"text","text":"The parser from which this parser receives output."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Skip\/parsers","kind":"symbol","url":"\/documentation\/parsing\/skip\/parsers","title":"parsers","role":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"parsers"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Parsers"}],"type":"topic"}}}
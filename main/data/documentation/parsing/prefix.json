{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix"},"kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-4kn0k","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-99fro","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-548tz","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-70enw","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-7dsyo","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-29h8i","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-2dygj","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-3u32v","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-3efj0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-5bxwl","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-x1nu","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-5r6r0","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-7fzba","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maxLength","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maximum","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minLength","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minimum","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/predicate"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/parse(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/ParserPrinter-Implementations"]}],"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Input"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"Collection","preciseIdentifier":"s:Sl"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This parser is named after "},{"code":"Sequence.prefix","type":"codeVoice"},{"type":"text","text":", which it uses under the hood to consume a number"},{"type":"text","text":" "},{"type":"text","text":"of elements and return them as output. It can be configured with minimum and maximum lengths,"},{"type":"text","text":" "},{"type":"text","text":"as well as a predicate."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, to parse as many numbers off the beginning of a substring:"}]},{"type":"codeListing","code":["var input = \"123 hello world\"[...]","try Prefix { $0.isNumber }.parse(&input)  \/\/ \"123\"","input                                     \/\/ \" Hello world\""],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you wanted this parser to fail if "},{"type":"emphasis","inlineContent":[{"text":"no","type":"text"}]},{"type":"text","text":" numbers are consumed, you could introduce a minimum"},{"type":"text","text":" "},{"type":"text","text":"length."}]},{"type":"codeListing","code":["var input = \"No numbers here\"[...]","try Prefix(1...) { $0.isNumber }.parse(&input)","\/\/ error: unexpected input","\/\/  --> input:1:1","\/\/ 1 | No numbers here","\/\/   | ^ expected 1 element satisfying predicate"],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"text":"If a predicate is not provided, the parser will simply consume the prefix within the minimum and","type":"text"},{"text":" ","type":"text"},{"text":"maximum lengths provided:","type":"text"}]},{"type":"codeListing","code":["var input = \"Lorem ipsum dolor\"[...]","try Prefix(2).parse(&input)  \/\/ \"Lo\"","input                        \/\/ \"rem ipsum dolor\""],"syntax":"swift"},{"text":"Printer","level":2,"anchor":"Printer","type":"heading"},{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","type":"reference","isActive":true},{"type":"text","text":" is also a printer when its "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" generic conforms to "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","type":"reference","isActive":true},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"such as "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":" and "},{"type":"codeVoice","code":"UTF8View"},{"type":"text","text":":"}]},{"type":"codeListing","code":["Prefix { $0 != \",\" }.print(\"Hello World\") \/\/ \"Hello World\""],"syntax":"swift"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It fails to print if the collection being printed does not meet the "},{"type":"codeVoice","code":"minLength"},{"type":"text","text":" and "},{"type":"codeVoice","code":"maxLength"},{"type":"text","text":" "},{"type":"text","text":"requirements, or if the predicate provided is not satisfied on every element of the collection:"}]},{"type":"codeListing","code":["Prefix { $0 != \",\" }.print(\"Hello, World\")","\/\/ An error was thrown and was not caught"],"syntax":"swift"}],"kind":"content"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"]}],"variants":[{"paths":["\/documentation\/parsing\/prefix"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"modules":[{"name":"Parsing"}],"title":"Prefix","externalID":"s:7Parsing6PrefixV","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"role":"symbol","symbolKind":"struct","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}],"roleHeading":"Structure"},"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"role":"symbol","title":"ParserPrinter","url":"\/documentation\/parsing\/parserprinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"PrependableCollection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","isActive":true},{"type":"text","text":" that can incrementally “print” an output value back into an input."}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/predicate":{"kind":"symbol","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/predicate","title":"predicate","url":"\/documentation\/parsing\/prefix\/predicate","role":"symbol","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"predicate"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")?"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:while:)-x1nu":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-x1nu","url":"\/documentation\/parsing\/prefix\/init(minlength:while:)-x1nu","abstract":[],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"deprecated":true,"title":"init(minLength:while:)","type":"topic","kind":"symbol","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss7Elementa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/minLength":{"deprecated":true,"title":"minLength","kind":"symbol","abstract":[],"url":"\/documentation\/parsing\/prefix\/minlength","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"code":"Input.SubSequence","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minLength","type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minLength","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:maxLength:while:)-29h8i":{"type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-29h8i","title":"init(minLength:maxLength:while:)","kind":"symbol","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Substring","type":"codeVoice"},{"text":".","type":"text"}]},"deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:Ss","text":"Substring","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:Ss7Elementa","text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)-29h8i","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-99fro":{"url":"\/documentation\/parsing\/prefix\/init(_:while:)-99fro","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-99fro","title":"init(_:while:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"abstract":[],"role":"symbol","type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": ((","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"kind":"text","text":")?)"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(maxLength:while:)-70enw":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-70enw","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","deprecated":true,"type":"topic","url":"\/documentation\/parsing\/prefix\/init(maxlength:while:)-70enw","abstract":[],"kind":"symbol","title":"init(maxLength:while:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(while:)-8u42b":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-8u42b","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Initializes a parser that consumes a subsequence from the beginning of its input."}],"url":"\/documentation\/parsing\/prefix\/init(while:)-8u42b","title":"init(while:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"Prefix"}],"title":"Prefix","role":"symbol","url":"\/documentation\/parsing\/prefix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix","kind":"symbol","abstract":[{"type":"text","text":"A parser that consumes a subsequence from the beginning of its input."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Prefix"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/Parser-Implementations":{"type":"topic","kind":"article","url":"\/documentation\/parsing\/prefix\/parser-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/Parser-Implementations","title":"Parser Implementations","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/maximum":{"title":"maximum","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maximum","url":"\/documentation\/parsing\/prefix\/maximum","kind":"symbol","abstract":[],"role":"symbol","type":"topic","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"maximum","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"?","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/ParserPrinter-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/ParserPrinter-Implementations","abstract":[],"title":"ParserPrinter Implementations","url":"\/documentation\/parsing\/prefix\/parserprinter-implementations","type":"topic","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(while:)-7fzba":{"abstract":[],"type":"topic","kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Substring","preciseIdentifier":"s:Ss"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:Ss7Elementa"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring"},{"type":"text","text":"."}]},"role":"symbol","title":"init(while:)","url":"\/documentation\/parsing\/prefix\/init(while:)-7fzba","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-7fzba"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:maxLength:while:)-3u32v":{"abstract":[],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-3u32v","url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)-3u32v","deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier","text":"UTF8View"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"init(minLength:maxLength:while:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:while:)-5bxwl":{"role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Input","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"init(minLength:while:)","deprecated":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-5bxwl","url":"\/documentation\/parsing\/prefix\/init(minlength:while:)-5bxwl"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(maxLength:while:)-7dsyo":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-7dsyo","deprecated":true,"kind":"symbol","url":"\/documentation\/parsing\/prefix\/init(maxlength:while:)-7dsyo","title":"init(maxLength:while:)","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Input","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Substring.UTF8View","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier","text":"UTF8View"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")"}],"role":"symbol","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/maxLength":{"role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?"}],"title":"maxLength","deprecated":true,"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/maxLength","url":"\/documentation\/parsing\/prefix\/maxlength","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"code":"Collection","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"Input","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Input.SubSequence","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"kind":"symbol","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(maxLength:while:)-548tz":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"abstract":[],"type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(maxLength:while:)-548tz","deprecated":true,"title":"init(maxLength:while:)","url":"\/documentation\/parsing\/prefix\/init(maxlength:while:)-548tz","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Collection"},{"type":"text","text":" and "},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]}},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:while:)-3efj0":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:while:)-3efj0","kind":"symbol","title":"init(minLength:while:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}]},"deprecated":true,"role":"symbol","url":"\/documentation\/parsing\/prefix\/init(minlength:while:)-3efj0","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"minLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss","text":"Substring"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV","text":"UTF8View"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")"}],"abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(minLength:maxLength:while:)-2dygj":{"role":"symbol","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Input"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"Collection"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Input.SubSequence"},{"type":"text","text":"."}]},"deprecated":true,"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"maxLength","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"?, ","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Input","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":")","kind":"text"}],"kind":"symbol","abstract":[],"type":"topic","title":"init(minLength:maxLength:while:)","url":"\/documentation\/parsing\/prefix\/init(minlength:maxlength:while:)-2dygj","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(minLength:maxLength:while:)-2dygj"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(while:)-5r6r0":{"url":"\/documentation\/parsing\/prefix\/init(while:)-5r6r0","title":"init(while:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(while:)-5r6r0","type":"topic","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}]},"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Substring","preciseIdentifier":"s:Ss","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"UTF8View","preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-4kn0k":{"abstract":[],"kind":"symbol","title":"init(_:while:)","type":"topic","url":"\/documentation\/parsing\/prefix\/init(_:while:)-4kn0k","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-4kn0k","conformance":{"constraints":[{"type":"codeVoice","code":"Input"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Substring.UTF8View"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"preciseIdentifier":"s:Ss","kind":"typeIdentifier","text":"Substring"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV","kind":"typeIdentifier","text":"UTF8View"},{"kind":"text","text":"."},{"preciseIdentifier":"s:Ss8UTF8ViewV7Elementa","kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":")?)"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/PrependableCollection":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/PrependableCollection","url":"\/documentation\/parsing\/prependablecollection","type":"topic","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"PrependableCollection"}],"title":"PrependableCollection","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"PrependableCollection"}],"abstract":[{"text":"A collection that supports empty initialization and the ability to prepend a sequence of","type":"text"},{"text":" ","type":"text"},{"text":"elements of elements to itself.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/parse(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/parse(_:)","abstract":[{"text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically","type":"text"},{"text":" ","type":"text"},{"text":"you only call this from other ","type":"text"},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"title":"parse(_:)","kind":"symbol","url":"\/documentation\/parsing\/prefix\/parse(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Input"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/minimum":{"abstract":[],"title":"minimum","role":"symbol","url":"\/documentation\/parsing\/prefix\/minimum","fragments":[{"text":"let","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"minimum"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/minimum","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Prefix/init(_:while:)-472tv":{"type":"topic","title":"init(_:while:)","url":"\/documentation\/parsing\/prefix\/init(_:while:)-472tv","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Prefix\/init(_:while:)-472tv","abstract":[{"text":"Initializes a parser that consumes a subsequence from the beginning of its input.","type":"text"}],"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"R"},{"kind":"text","text":", "},{"kind":"externalParam","text":"while"},{"kind":"text","text":": (("},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":")?)"}],"role":"symbol"}}}
{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/init(_:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/wrapped"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/parse(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations"],"title":"Default Implementations","generated":true}],"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter"],"title":"Conforms To","type":"conformsTo","kind":"relationships"}],"metadata":{"roleHeading":"Structure","title":"Optionally","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"modules":[{"name":"Parsing"}],"externalID":"s:7Parsing10OptionallyV","navigatorTitle":[{"text":"Optionally","kind":"identifier"}],"role":"symbol","symbolKind":"struct"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","interfaceLanguage":"swift"},"abstract":[{"text":"A parser that runs the given parser and succeeds with ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if it fails.","type":"text"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Wrapped","kind":"genericParameter"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"Parser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","preciseIdentifier":"s:7Parsing6ParserP","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"anchor":"overview","text":"Overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use this parser when you are parsing into an output data model that contains "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"When the wrapped parser fails ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","isActive":true,"type":"reference"},{"text":" will backtrack any consumption of the input so","type":"text"},{"text":" ","type":"text"},{"text":"that later parsers can attempt to parser the input:","type":"text"}]},{"code":["let parser = Parse {","  \"Hello,\"","  Optionally { \" \"; Bool.parser() }","  \" world!\"","}","","try parser.parse(\"Hello, world!\")      \/\/ nil 1️⃣","try parser.parse(\"Hello, true world!\") \/\/ true"],"syntax":"swift","type":"codeListing"},{"type":"paragraph","inlineContent":[{"text":"If ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","type":"reference","isActive":true},{"text":" did not backtrack then 1️⃣ would fail because it would consume a space,","type":"text"},{"text":" ","type":"text"},{"text":"causing the ","type":"text"},{"code":"\" world!\"","type":"codeVoice"},{"text":" parser to fail since there is no longer any space to consume.","type":"text"},{"text":" ","type":"text"},{"text":"Read the article ","type":"text"},{"text":"doc:Backtracking","type":"text"},{"text":" to learn more about how backtracking works.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you are optionally parsing input that should coalesce into some default, you can skip the"},{"type":"text","text":" "},{"type":"text","text":"optionality and instead use "},{"isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","type":"reference"},{"type":"text","text":" with a default:"}]},{"type":"codeListing","code":["Optionally { Int.parser() }","  .map { $0 ?? 0 }","","\/\/ vs.","","Int.parser()","  .replaceError(with: 0)"],"syntax":"swift"}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing"]]},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"paths":["\/documentation\/parsing\/optionally"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally":{"abstract":[{"type":"text","text":"A parser that runs the given parser and succeeds with "},{"type":"codeVoice","code":"nil"},{"text":" if it fails.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Optionally","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally","kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/parsing\/optionally","title":"Optionally","navigatorTitle":[{"text":"Optionally","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/ParserPrinter":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/ParserPrinter","kind":"symbol","type":"topic","title":"ParserPrinter","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ParserPrinter"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Wrapped"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"ParserPrinter"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","url":"\/documentation\/parsing\/parserprinter","navigatorTitle":[{"kind":"identifier","text":"ParserPrinter"}],"abstract":[{"type":"text","text":"A "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","type":"reference","isActive":true},{"text":" that can incrementally “print” an output value back into an input.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/init(_:)":{"abstract":[],"url":"\/documentation\/parsing\/optionally\/init(_:)","fragments":[{"kind":"identifier","text":"init"},{"text":"(() -> ","kind":"text"},{"text":"Wrapped","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/init(_:)","title":"init(_:)","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Parser":{"title":"Parser","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parser"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Parser","abstract":[{"type":"text","text":"Declares a type that can incrementally parse an "},{"code":"Output","type":"codeVoice"},{"type":"text","text":" value from an "},{"code":"Input","type":"codeVoice"},{"type":"text","text":" value."}],"role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parser"}],"url":"\/documentation\/parsing\/parser"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/parse(_:)":{"role":"symbol","abstract":[{"type":"text","text":"Attempts to parse a nebulous piece of data into something more well-structured. Typically"},{"type":"text","text":" "},{"type":"text","text":"you only call this from other "},{"code":"Parser","type":"codeVoice"},{"type":"text","text":" conformances, not when you want to parse a concrete"},{"type":"text","text":" "},{"type":"text","text":"input."}],"type":"topic","url":"\/documentation\/parsing\/optionally\/parse(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/parse(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"parse"},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Wrapped"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":"?"}],"title":"parse(_:)"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/Parser-Implementations":{"title":"Parser Implementations","url":"\/documentation\/parsing\/optionally\/parser-implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/Parser-Implementations","abstract":[],"kind":"article","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/wrapped":{"role":"symbol","title":"wrapped","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/wrapped","url":"\/documentation\/parsing\/optionally\/wrapped","kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrapped"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Wrapped"}],"type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/replaceError(with:)":{"url":"\/documentation\/parsing\/optionally\/replaceerror(with:)","type":"topic","title":"replaceError(with:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/replaceError(with:)","abstract":[{"type":"text","text":"A parser that replaces its error with a provided output."}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceError","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Output","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Parsers","preciseIdentifier":"s:7Parsing7ParsersO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ReplaceError","preciseIdentifier":"s:7Parsing7ParsersO12ReplaceErrorV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Parsing/Optionally/ParserPrinter-Implementations":{"url":"\/documentation\/parsing\/optionally\/parserprinter-implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/Optionally\/ParserPrinter-Implementations","role":"collectionGroup","kind":"article","type":"topic","title":"ParserPrinter Implementations"},"doc://co.pointfree.VaporRouting/documentation/Parsing":{"title":"Parsing","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/parsing"}}}
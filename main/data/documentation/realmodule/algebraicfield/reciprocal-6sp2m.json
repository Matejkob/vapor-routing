{"sections":[],"abstract":[{"type":"text","text":"Implementations should be "},{"inlineContent":[{"text":"conservative","type":"text"}],"type":"emphasis"},{"type":"text","text":" with the reciprocal property;"},{"type":"text","text":" "},{"type":"text","text":"it is OK to return "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" even in cases where a reciprocal could be"},{"type":"text","text":" "},{"type":"text","text":"represented. For this reason, a default implementation that simply"},{"type":"text","text":" "},{"type":"text","text":"always returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is correct, but conforming types should provide"},{"type":"text","text":" "},{"type":"text","text":"a better implementation if possible."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/realmodule\/algebraicfield\/reciprocal-6sp2m"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"? { "},{"kind":"keyword","text":"get"},{"kind":"text","text":" }"}],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"metadata":{"roleHeading":"Instance Property","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"symbolKind":"property","extendedModule":"RealModule","modules":[{"name":"RealModule"}],"title":"reciprocal","role":"symbol","externalID":"s:10RealModule14AlgebraicFieldPAAE10reciprocalxSgvp"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m","interfaceLanguage":"swift"},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField","doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField/reciprocal-156o3":{"required":true,"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"?"}],"title":"reciprocal","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"The (approximate) reciprocal (multiplicative inverse) of this number,"},{"type":"text","text":" "},{"type":"text","text":"if it is representable."}],"defaultImplementations":2,"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-156o3","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-156o3"},"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField":{"abstract":[{"text":"A type modeling an algebraic ","type":"text"},{"type":"reference","isActive":true,"identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)"},{"text":". Refines the ","type":"text"},{"type":"codeVoice","code":"SignedNumeric"},{"text":" protocol,","type":"text"},{"text":" ","type":"text"},{"text":"adding division.","type":"text"}],"navigatorTitle":[{"text":"AlgebraicField","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField","url":"\/documentation\/realmodule\/algebraicfield","kind":"symbol","type":"topic","title":"AlgebraicField","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AlgebraicField","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/RealModule":{"title":"RealModule","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/realmodule"},"doc://co.pointfree.VaporRouting/documentation/RealModule/AlgebraicField/reciprocal-6sp2m":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"reciprocal"},{"kind":"text","text":": "},{"text":"Self","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"title":"reciprocal","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Implementations should be "},{"inlineContent":[{"type":"text","text":"conservative"}],"type":"emphasis"},{"type":"text","text":" with the reciprocal property;"},{"type":"text","text":" "},{"type":"text","text":"it is OK to return "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" even in cases where a reciprocal could be"},{"type":"text","text":" "},{"type":"text","text":"represented. For this reason, a default implementation that simply"},{"type":"text","text":" "},{"type":"text","text":"always returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is correct, but conforming types should provide"},{"type":"text","text":" "},{"type":"text","text":"a better implementation if possible."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/RealModule\/AlgebraicField\/reciprocal-6sp2m","url":"\/documentation\/realmodule\/algebraicfield\/reciprocal-6sp2m"},"https://en.wikipedia.org/wiki/Field_(mathematics)":{"type":"link","title":"field","titleInlineContent":[{"type":"text","text":"field"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)","identifier":"https:\/\/en.wikipedia.org\/wiki\/Field_(mathematics)"}}}
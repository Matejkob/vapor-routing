{"abstract":[{"type":"text","text":"Create a new "},{"code":"NIOWebSocketServerUpgrader","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"shouldUpgrade"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","kind":"typeIdentifier","text":"HTTPHeaders"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":", "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">)"}]}]},{"kind":"parameters","parameters":[{"name":"maxFrameSize","content":[{"inlineContent":[{"text":"The maximum frame size the decoder is willing to tolerate from the","type":"text"},{"text":" ","type":"text"},{"text":"remote peer. WebSockets in principle allows frame sizes up to ","type":"text"},{"code":"2**64","type":"codeVoice"},{"text":" bytes, but","type":"text"},{"text":" ","type":"text"},{"text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not","type":"text"},{"text":" ","type":"text"},{"text":"possible to even. Users may set this to any value up to ","type":"text"},{"code":"UInt32.max","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"name":"automaticErrorHandling","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Whether the pipeline should automatically handle protocol"},{"type":"text","text":" "},{"type":"text","text":"errors by sending error responses and closing the connection. Defaults to "},{"type":"codeVoice","code":"true"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"may be set to "},{"type":"codeVoice","code":"false"},{"type":"text","text":" if the user wishes to handle their own errors."}]}]},{"name":"shouldUpgrade","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A callback that determines whether the websocket request should be"},{"type":"text","text":" "},{"type":"text","text":"upgraded. This callback is responsible for creating a "},{"code":"HTTPHeaders","type":"codeVoice"},{"type":"text","text":" object with"},{"type":"text","text":" "},{"type":"text","text":"any headers that it needs on the response "},{"type":"emphasis","inlineContent":[{"type":"text","text":"except for"}]},{"type":"text","text":" the "},{"code":"Upgrade","type":"codeVoice"},{"type":"text","text":", "},{"code":"Connection","type":"codeVoice"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"Sec-WebSocket-Accept","type":"codeVoice"},{"type":"text","text":" headers, which this upgrader will handle. Should return"},{"type":"text","text":" "},{"type":"text","text":"an "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" containing "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if the upgrade should be refused."}]}]},{"name":"upgradePipelineHandler","content":[{"inlineContent":[{"type":"text","text":"A function that will be called once the upgrade response is"},{"type":"text","text":" "},{"type":"text","text":"flushed, and that is expected to mutate the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" appropriately to handle the"},{"type":"text","text":" "},{"type":"text","text":"websocket protocol. This only needs to add the user handlers: the"},{"type":"text","text":" "},{"type":"codeVoice","code":"WebSocketFrameEncoder"},{"type":"text","text":" and "},{"type":"codeVoice","code":"WebSocketFrameDecoder"},{"type":"text","text":" will have been added to the"},{"type":"text","text":" "},{"type":"text","text":"pipeline automatically."}],"type":"paragraph"}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"modules":[{"name":"NIOWebSocket"}],"symbolKind":"init","roleHeading":"Initializer","title":"init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","externalID":"s:12NIOWebSocket0aB14ServerUpgraderC12maxFrameSize22automaticErrorHandling13shouldUpgrade22upgradePipelineHandlerACSi_Sb7NIOCore15EventLoopFutureCy8NIOHTTP111HTTPHeadersVSgGAH7Channel_p_AK15HTTPRequestHeadVtcAJyytGAhP_p_ARtctcfc","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"automaticErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", ","kind":"text"},{"text":"shouldUpgrade","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"text":", ","kind":"text"},{"text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketserverupgrader\/init(maxframesize:automaticerrorhandling:shouldupgrade:upgradepipelinehandler:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPRequestHead":{"url":"\/documentation\/niohttp1\/httprequesthead","title":"HTTPRequestHead","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPRequestHead","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPRequestHead"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A representation of the request line and header fields of a HTTP request."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPRequestHead"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPHeaders":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"HTTPHeaders"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPHeaders"}],"title":"HTTPHeaders","role":"symbol","url":"\/documentation\/niohttp1\/httpheaders","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPHeaders","kind":"symbol","abstract":[{"type":"text","text":"A representation of a block of HTTP header fields."}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)":{"type":"topic","abstract":[{"type":"text","text":"Create a new "},{"code":"NIOWebSocketServerUpgrader","type":"codeVoice"},{"type":"text","text":"."}],"fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"automaticErrorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"shouldUpgrade"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","text":"HTTPRequestHead"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders"},{"kind":"text","text":"?>, "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"text":"HTTPRequestHead","preciseIdentifier":"s:8NIOHTTP115HTTPRequestHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">)","kind":"text"}],"title":"init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)","kind":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader\/init(maxframesize:automaticerrorhandling:shouldupgrade:upgradepipelinehandler:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader\/init(maxFrameSize:automaticErrorHandling:shouldUpgrade:upgradePipelineHandler:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketServerUpgrader":{"type":"topic","abstract":[{"type":"text","text":"A "},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" that knows how to do the WebSocket upgrade dance."}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketServerUpgrader"}],"title":"NIOWebSocketServerUpgrader","kind":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketserverupgrader","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketServerUpgrader","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketServerUpgrader"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]}}}
{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"This upgrader assumes that the ","type":"text"},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"text":" will create and send the upgrade request.","type":"text"},{"text":" ","type":"text"},{"text":"This upgrader also assumes that the ","type":"text"},{"type":"codeVoice","code":"HTTPClientUpgradeHandler"},{"text":" will appropriately mutate the","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to remove the HTTP ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketclientupgrader"]}],"relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader"],"title":"Conforms To","kind":"relationships"}],"metadata":{"symbolKind":"class","title":"NIOWebSocketClientUpgrader","externalID":"s:12NIOWebSocket0aB14ClientUpgraderC","modules":[{"name":"NIOWebSocket"}],"navigatorTitle":[{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}],"role":"symbol","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NIOWebSocketClientUpgrader","kind":"identifier"}]},"abstract":[{"text":"A ","type":"text"},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)"]},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)"],"title":"Type Methods"}],"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"requestKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"automaticErrorHandling","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", "},{"kind":"externalParam","text":"upgradePipelineHandler"},{"kind":"text","text":": ("},{"text":"Channel","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":", ","kind":"text"},{"text":"HTTPResponseHead","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">)","kind":"text"}],"role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/init(requestkey:maxframesize:automaticerrorhandling:upgradepipelinehandler:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","abstract":[],"title":"init(requestKey:maxFrameSize:automaticErrorHandling:upgradePipelineHandler:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"abstract":[{"text":"An object that implements ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","title":"NIOHTTPClientProtocolUpgrader","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"type":"topic","kind":"symbol","title":"shouldAllowUpgrade(upgradeResponse:)","abstract":[{"text":"Allow or deny the upgrade based on the upgrade HTTP response","type":"text"},{"text":" ","type":"text"},{"text":"headers containing the correct accept key.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shouldAllowUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseHead","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/shouldallowupgrade(upgraderesponse:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/shouldAllowUpgrade(upgradeResponse:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/addCustom(upgradeRequestHeaders:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/addCustom(upgradeRequestHeaders:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addCustom","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeRequestHeaders","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/addcustom(upgraderequestheaders:)","type":"topic","role":"symbol","title":"addCustom(upgradeRequestHeaders:)","abstract":[{"type":"text","text":"Add additional headers that are needed for a WebSocket upgrade request."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey(using:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey(using:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"randomRequestKey","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Generator","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"using","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"inout","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Generator","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey(using:)","type":"topic","role":"symbol","title":"randomRequestKey(using:)","abstract":[{"type":"text","text":"Generates a random WebSocket Request Key by generating 16 bytes randomly and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","abstract":[{"type":"text","text":"A "},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}],"title":"NIOWebSocketClientUpgrader","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/upgrade(context:upgradeResponse:)":{"url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/upgrade(context:upgraderesponse:)","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/upgrade(context:upgradeResponse:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseHead","preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"abstract":[{"text":"Called when the upgrade response has been flushed and it is safe to mutate the channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline. Adds channel handlers for websocket frame encoding, decoding and errors.","type":"text"}],"kind":"symbol","title":"upgrade(context:upgradeResponse:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/randomRequestKey()":{"title":"randomRequestKey()","abstract":[{"text":"Generates a random WebSocket Request Key by generating 16 bytes randomly using the ","type":"text"},{"code":"SystemRandomNumberGenerator","type":"codeVoice"},{"text":" and encoding them as a base64 string as defined in RFC6455 https:\/\/tools.ietf.org\/html\/rfc6455#section-4.1.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"randomRequestKey"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/randomRequestKey()","type":"topic","role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/randomrequestkey()"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/supportedProtocol":{"title":"supportedProtocol","abstract":[{"text":"RFC 6455 specs this as the required entry in the Upgrade header.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/supportedProtocol","type":"topic","role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/supportedprotocol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader/requiredUpgradeHeaders":{"title":"requiredUpgradeHeaders","abstract":[{"text":"None of the websocket headers are actually defined as ‘required’.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"requiredUpgradeHeaders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader\/requiredUpgradeHeaders","type":"topic","role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader\/requiredupgradeheaders"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"}}}
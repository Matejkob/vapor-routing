{"abstract":[{"text":"An inbound ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that serializes structured websocket frames into a byte stream","type":"text"},{"text":" ","type":"text"},{"text":"for sending on the network.","type":"text"}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder"},"metadata":{"externalID":"s:12NIOWebSocket03WebB12FrameEncoderC","roleHeading":"Class","modules":[{"name":"NIOWebSocket"}],"role":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketFrameEncoder"}],"symbolKind":"class","title":"WebSocketFrameEncoder","navigatorTitle":[{"kind":"identifier","text":"WebSocketFrameEncoder"}]},"variants":[{"paths":["\/documentation\/niowebsocket\/websocketframeencoder"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","schemaVersion":{"patch":0,"major":0,"minor":3},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/write(context:data:promise:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/ChannelOutboundHandler-Implementations"],"title":"Default Implementations"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketFrameEncoder"}]}],"kind":"declarations"},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This encoder has limited enforcement of compliance to RFC 6455. In particular, to guarantee"},{"type":"text","text":" "},{"type":"text","text":"that the encoder can handle arbitrary extensions, only normative MUST\/MUST NOTs that do not"},{"type":"text","text":" "},{"type":"text","text":"relate to extensions (e.g. the requirement that control frames not have lengths larger than"},{"type":"text","text":" "},{"type":"text","text":"125 bytes) are enforced by this encoder."}]},{"type":"paragraph","inlineContent":[{"text":"This encoder does not have any support for encoder extensions. If you wish to support","type":"text"},{"text":" ","type":"text"},{"text":"extensions, you should implement a message-to-message encoder that performs the appropriate","type":"text"},{"text":" ","type":"text"},{"text":"frame transformation as needed.","type":"text"}]}]}],"relationshipsSections":[{"type":"conformsTo","kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/OutboundIn":{"kind":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundIn","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder\/outboundin","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"title":"WebSocketFrameEncoder.OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder":{"navigatorTitle":[{"kind":"identifier","text":"WebSocketFrameEncoder"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"WebSocketFrameEncoder"}],"type":"topic","abstract":[{"text":"An inbound ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that serializes structured websocket frames into a byte stream","type":"text"},{"text":" ","type":"text"},{"text":"for sending on the network.","type":"text"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder","title":"WebSocketFrameEncoder","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/OutboundOut":{"title":"WebSocketFrameEncoder.OutboundOut","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder\/outboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/OutboundOut","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"OutboundOut","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/handlerRemoved(context:)":{"abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerRemoved(context:)","url":"\/documentation\/niowebsocket\/websocketframeencoder\/handlerremoved(context:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","title":"handlerRemoved(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/init()":{"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/init()","abstract":[],"role":"symbol","url":"\/documentation\/niowebsocket\/websocketframeencoder\/init()","title":"init()"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/ChannelOutboundHandler-Implementations","role":"collectionGroup","type":"topic","kind":"article","title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niowebsocket\/websocketframeencoder\/channeloutboundhandler-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/handlerAdded(context:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/handlerAdded(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"text":"Called when this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" is added to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"url":"\/documentation\/niowebsocket\/websocketframeencoder\/handleradded(context:)","title":"handlerAdded(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameEncoder/write(context:data:promise:)":{"role":"symbol","abstract":[{"type":"text","text":"Called to request a write operation. The write operation will write the messages through the"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameEncoder\/write(context:data:promise:)","type":"topic","url":"\/documentation\/niowebsocket\/websocketframeencoder\/write(context:data:promise:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"title":"write(context:data:promise:)"}}}
{"sections":[],"abstract":[{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"text":" buffers inbound fragmented ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":"’s and aggregates them into a single ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"It guarantees that a ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":" with an ","type":"text"},{"code":"opcode","type":"codeVoice"},{"text":" of ","type":"text"},{"code":".continuation","type":"codeVoice"},{"text":" is never forwarded.","type":"text"},{"text":" ","type":"text"},{"text":"Frames which are not fragmented are just forwarded without any processing.","type":"text"},{"text":" ","type":"text"},{"text":"Fragmented frames are unmasked, concatenated and forwarded as a new ","type":"text"},{"code":"WebSocketFrame","type":"codeVoice"},{"text":" which is either a ","type":"text"},{"code":".binary","type":"codeVoice"},{"text":" or ","type":"text"},{"code":".text","type":"codeVoice"},{"text":" frame.","type":"text"},{"text":" ","type":"text"},{"code":"extensionData","type":"codeVoice"},{"text":", ","type":"text"},{"code":"rsv1","type":"codeVoice"},{"text":", ","type":"text"},{"code":"rsv2","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"rsv3","type":"codeVoice"},{"text":" are lost if a frame is fragmented because they cannot be concatenated.","type":"text"}],"metadata":{"symbolKind":"class","roleHeading":"Class","externalID":"s:12NIOWebSocket0aB15FrameAggregatorC","role":"symbol","title":"NIOWebSocketFrameAggregator","navigatorTitle":[{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}],"modules":[{"name":"NIOWebSocket"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOWebSocketFrameAggregator","kind":"identifier"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"overview","text":"Overview","level":2},{"type":"aside","name":"Note","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"code":".ping","type":"codeVoice"},{"type":"text","text":", "},{"code":".pong","type":"codeVoice"},{"type":"text","text":", "},{"code":".closeConnection","type":"codeVoice"},{"type":"text","text":" frames are forwarded during frame aggregation"}]}]}]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/niowebsocketframeaggregator"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelHandler-Implementations":{"abstract":[],"kind":"article","role":"collectionGroup","type":"topic","title":"ChannelHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelHandler-Implementations","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator","title":"NIOWebSocketFrameAggregator","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketFrameAggregator"}],"abstract":[{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"type":"text","text":" buffers inbound fragmented "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":"’s and aggregates them into a single "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"It guarantees that a "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":" with an "},{"code":"opcode","type":"codeVoice"},{"type":"text","text":" of "},{"code":".continuation","type":"codeVoice"},{"type":"text","text":" is never forwarded."},{"type":"text","text":" "},{"type":"text","text":"Frames which are not fragmented are just forwarded without any processing."},{"type":"text","text":" "},{"type":"text","text":"Fragmented frames are unmasked, concatenated and forwarded as a new "},{"code":"WebSocketFrame","type":"codeVoice"},{"type":"text","text":" which is either a "},{"code":".binary","type":"codeVoice"},{"type":"text","text":" or "},{"code":".text","type":"codeVoice"},{"type":"text","text":" frame."},{"type":"text","text":" "},{"code":"extensionData","type":"codeVoice"},{"type":"text","text":", "},{"code":"rsv1","type":"codeVoice"},{"type":"text","text":", "},{"code":"rsv2","type":"codeVoice"},{"type":"text","text":" and "},{"code":"rsv3","type":"codeVoice"},{"type":"text","text":" are lost if a frame is fragmented because they cannot be concatenated."}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundOut":{"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundout","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundOut","type":"topic","abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"title":"NIOWebSocketFrameAggregator.InboundOut","navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/channelRead(context:data:)":{"title":"channelRead(context:data:)","kind":"symbol","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelread(context:data:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"channelRead"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"text":")","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/Error":{"navigatorTitle":[{"text":"Error","kind":"identifier"}],"title":"NIOWebSocketFrameAggregator.Error","abstract":[],"kind":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/error","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Error","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/Error","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","abstract":[],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/channelinboundhandler-implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/ChannelInboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"minNonFinalFragmentSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"maxAccumulatedFrameCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":", ","kind":"text"},{"text":"maxAccumulatedFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"type":"topic","role":"symbol","title":"init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/init(minNonFinalFragmentSize:maxAccumulatedFrameCount:maxAccumulatedFrameSize:)","abstract":[{"text":"Configures a ","type":"text"},{"code":"NIOWebSocketFrameAggregator","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/init(minnonfinalfragmentsize:maxaccumulatedframecount:maxaccumulatedframesize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketFrameAggregator/InboundIn":{"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"title":"NIOWebSocketFrameAggregator.InboundIn","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"kind":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/niowebsocketframeaggregator\/inboundin","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketFrameAggregator\/InboundIn"}}}
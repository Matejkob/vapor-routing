{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":")"}],"role":"symbol","symbolKind":"init","roleHeading":"Initializer","externalID":"s:12NIOWebSocket03WebB12FrameDecoderC03maxD4SizeACSi_tcfc","title":"init(maxFrameSize:)","modules":[{"name":"NIOWebSocket"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxFrameSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":" = 1 << 14)"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The maximum frame size the decoder is willing to tolerate from the"},{"type":"text","text":" "},{"type":"text","text":"remote peer. WebSockets in principle allows frame sizes up to "},{"type":"codeVoice","code":"2**64"},{"type":"text","text":" bytes, but"},{"type":"text","text":" "},{"type":"text","text":"this is an objectively unreasonable maximum value (on AMD64 systems it is not"},{"type":"text","text":" "},{"type":"text","text":"possible to even allocate a buffer large enough to handle this size), so we"},{"type":"text","text":" "},{"type":"text","text":"set a lower one. The default value is the same as the default HTTP\/2 max frame"},{"type":"text","text":" "},{"type":"text","text":"size, "},{"type":"codeVoice","code":"2**14"},{"type":"text","text":" bytes. Users may override this to any value up to "},{"type":"codeVoice","code":"UInt32.max"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Users are strongly encouraged not to increase this value unless they absolutely"},{"type":"text","text":" "},{"type":"text","text":"must, as the decoder will not produce partial frames, meaning that it will hold"},{"type":"text","text":" "},{"type":"text","text":"on to data until the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"entire"}]},{"type":"text","text":" body is received."}],"type":"paragraph"}],"name":"maxFrameSize"},{"content":[{"inlineContent":[{"type":"text","text":"Whether this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" should automatically handle"},{"type":"text","text":" "},{"type":"text","text":"protocol errors in frame serialization, or whether it should allow the pipeline"},{"type":"text","text":" "},{"type":"text","text":"to handle them."}],"type":"paragraph"}],"name":"automaticErrorHandling"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder"]]},"kind":"symbol","abstract":[{"type":"text","text":"Construct a new "},{"type":"codeVoice","code":"WebSocketFrameDecoder"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder/init(maxFrameSize:)":{"role":"symbol","kind":"symbol","abstract":[{"text":"Construct a new ","type":"text"},{"code":"WebSocketFrameDecoder","type":"codeVoice"}],"type":"topic","title":"init(maxFrameSize:)","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"maxFrameSize","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niowebsocket\/websocketframedecoder\/init(maxframesize:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder\/init(maxFrameSize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketFrameDecoder":{"navigatorTitle":[{"text":"WebSocketFrameDecoder","kind":"identifier"}],"abstract":[{"text":"An inbound ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" that deserializes websocket frames into a structured","type":"text"},{"text":" ","type":"text"},{"text":"format for further processing.","type":"text"}],"url":"\/documentation\/niowebsocket\/websocketframedecoder","title":"WebSocketFrameDecoder","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketFrameDecoder","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketFrameDecoder","kind":"identifier"}],"kind":"symbol","role":"symbol"}}}
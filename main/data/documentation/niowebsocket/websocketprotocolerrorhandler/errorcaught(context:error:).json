{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/errorcaught(context:error:)"]}],"abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"externalID":"s:12NIOWebSocket03WebB20ProtocolErrorHandlerC11errorCaught7context0G0y7NIOCore07ChannelF7ContextC_s0E0_ptF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"modules":[{"name":"NIOWebSocket"}],"roleHeading":"Instance Method","title":"errorCaught(context:error:)","symbolKind":"method"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/errorCaught(context:error:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"errorCaught"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"error"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":")"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":" which this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" belongs to."}]}],"name":"context"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"Error"},{"type":"text","text":" that was encountered."}],"type":"paragraph"}],"name":"error"}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This should call ","type":"text"},{"code":"context.fireErrorCaught","type":"codeVoice"},{"text":" to forward the operation to the next ","type":"text"},{"code":"_ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" if you want to allow the next handler to also handle the error.","type":"text"}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A simple "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that catches protocol errors emitted by the"},{"type":"text","text":" "},{"type":"codeVoice","code":"WebSocketFrameDecoder"},{"type":"text","text":" and automatically generates protocol error responses."}],"type":"topic","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler","title":"WebSocketProtocolErrorHandler","navigatorTitle":[{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/errorCaught(context:error:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":")","kind":"text"}],"title":"errorCaught(context:error:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/errorCaught(context:error:)","abstract":[{"type":"text","text":"An error was encountered earlier in the inbound "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","type":"topic","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/errorcaught(context:error:)"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]}}}
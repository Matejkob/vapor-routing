{"variants":[{"paths":["\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/unwrapinboundin(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Unwrap the provided "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" that was passed to "},{"type":"codeVoice","code":"channelRead"},{"type":"text","text":"."}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundIn"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/unwrapInboundIn(_:)"},"sections":[],"metadata":{"extendedModule":"NIOCore","role":"symbol","roleHeading":"Instance Method","externalID":"s:7NIOCore21ChannelInboundHandlerPAAE06unwrapC2Iny0cF0QzAA6NIOAnyVF::SYNTHESIZED::s:12NIOWebSocket03WebB20ProtocolErrorHandlerC","title":"unwrapInboundIn(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapInboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"InboundIn","kind":"typeIdentifier"}],"modules":[{"name":"NIOWebSocket"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket":{"role":"collection","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket","abstract":[],"type":"topic","url":"\/documentation\/niowebsocket","title":"NIOWebSocket"},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/ChannelInboundHandler-Implementations","role":"collectionGroup","type":"topic","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/channelinboundhandler-implementations","kind":"article","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler/unwrapInboundIn(_:)":{"url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler\/unwrapinboundin(_:)","abstract":[{"type":"text","text":"Unwrap the provided "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" that was passed to "},{"type":"codeVoice","code":"channelRead"},{"type":"text","text":"."}],"title":"unwrapInboundIn(_:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrapInboundIn"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"InboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler\/unwrapInboundIn(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"role":"symbol","url":"\/documentation\/niocore\/nioany","title":"NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","type":"topic","abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"type":"codeVoice","code":"Any"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" the overhead of ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":", ","type":"text"},{"type":"codeVoice","code":"FileRegion"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" just like ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" will contain them within an existential container.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/WebSocketProtocolErrorHandler":{"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/WebSocketProtocolErrorHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"A simple "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that catches protocol errors emitted by the"},{"type":"text","text":" "},{"type":"codeVoice","code":"WebSocketFrameDecoder"},{"type":"text","text":" and automatically generates protocol error responses."}],"type":"topic","url":"\/documentation\/niowebsocket\/websocketprotocolerrorhandler","title":"WebSocketProtocolErrorHandler","navigatorTitle":[{"text":"WebSocketProtocolErrorHandler","kind":"identifier"}]}}}
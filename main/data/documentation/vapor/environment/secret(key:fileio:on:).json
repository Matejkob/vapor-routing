{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"secret"},{"kind":"text","text":"("},{"kind":"externalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"fileIO"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix17NonBlockingFileIOV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO","text":"NonBlockingFileIO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"on"},{"kind":"text","text":" "},{"kind":"internalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":"?>"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The environment variable name"}],"type":"paragraph"}],"name":"key"},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"NonBlockingFileIO","type":"codeVoice"},{"type":"text","text":" handler provided by NIO"}],"type":"paragraph"}],"name":"fileIO"},{"content":[{"inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" for NIO to use for working with the file"}],"type":"paragraph"}],"name":"eventLoop"}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"Example usage:"}],"type":"paragraph"},{"syntax":null,"code":["func configure(_ app: Application) {","    \/\/ ...","","    let databasePassword = try Environment.secret(","        key: \"DATABASE_PASSWORD_FILE\",","        fileIO: app.fileio,","        on: app.eventLoopGroup.next()","    ).wait()",""],"type":"codeListing"},{"name":"Important","content":[{"inlineContent":[{"text":"Do ","type":"text"},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"text":" use ","type":"text"},{"code":".wait()","type":"codeVoice"},{"text":" if loading a secret at any time after the app has booted, such as while","type":"text"},{"text":" ","type":"text"},{"text":"handling a ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":". Chain the result as you would any other future instead.","type":"text"}],"type":"paragraph"}],"type":"aside","style":"important"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/vapor\/environment\/secret(key:fileio:on:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Reads a file’s content for a secret. The secret key is the name of the environment variable that is expected to"},{"type":"text","text":" "},{"type":"text","text":"specify the path of the file containing the secret."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment\/secret(key:fileIO:on:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"secret","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"fileIO","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NonBlockingFileIO","kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix17NonBlockingFileIOV"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?>","kind":"text"}],"extendedModule":"Vapor","modules":[{"name":"Vapor"}],"symbolKind":"method","externalID":"s:5Vapor11EnvironmentV6secret3key6fileIO2on7NIOCore15EventLoopFutureCySSSgGSS_8NIOPosix015NonBlockingFileF0VAH0iJ0_ptFZ","title":"secret(key:fileIO:on:)","role":"symbol","roleHeading":"Type Method"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment"]]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"url":"\/documentation\/niocore\/eventloop","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/Vapor/Environment":{"title":"Environment","navigatorTitle":[{"text":"Environment","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Environment","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment","abstract":[{"text":"The environment the application is running in, i.e., production, dev, etc. All ","type":"text"},{"code":"Container","type":"codeVoice"},{"text":"s will have","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"code":"Environment","type":"codeVoice"},{"text":" that can be used to dynamically register and configure services.","type":"text"}],"type":"topic","url":"\/documentation\/vapor\/environment","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NonBlockingFileIO":{"url":"\/documentation\/nioposix\/nonblockingfileio","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NonBlockingFileIO","kind":"identifier"}],"navigatorTitle":[{"text":"NonBlockingFileIO","kind":"identifier"}],"type":"topic","abstract":[{"code":"NonBlockingFileIO","type":"codeVoice"},{"text":" is a helper that allows you to read files without blocking the calling thread.","type":"text"}],"role":"symbol","kind":"symbol","title":"NonBlockingFileIO","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NonBlockingFileIO"},"doc://co.pointfree.VaporRouting/documentation/Vapor/Environment/secret(key:fileIO:on:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"secret","kind":"identifier"},{"text":"(","kind":"text"},{"text":"key","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"fileIO","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NonBlockingFileIO","kind":"typeIdentifier","preciseIdentifier":"s:8NIOPosix17NonBlockingFileIOV"},{"text":", ","kind":"text"},{"text":"on","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoop","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":"?>","kind":"text"}],"url":"\/documentation\/vapor\/environment\/secret(key:fileio:on:)","abstract":[{"text":"Reads a file’s content for a secret. The secret key is the name of the environment variable that is expected to","type":"text"},{"text":" ","type":"text"},{"text":"specify the path of the file containing the secret.","type":"text"}],"title":"secret(key:fileIO:on:)","kind":"symbol","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor\/Environment\/secret(key:fileIO:on:)"},"doc://co.pointfree.VaporRouting/documentation/Vapor":{"url":"\/documentation\/vapor","title":"Vapor","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Vapor","kind":"symbol","type":"topic","abstract":[],"role":"collection"}}}
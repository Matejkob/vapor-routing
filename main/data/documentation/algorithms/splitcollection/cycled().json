{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Collection-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"cycled","kind":"identifier"},{"text":"() -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","text":"CycledSequence","preciseIdentifier":"s:10Algorithms14CycledSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"A sequence that repeats the elements of this collection"},{"type":"text","text":" "},{"type":"text","text":"forever."}],"type":"paragraph"}],"kind":"content"},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Use the "},{"type":"codeVoice","code":"cycled()"},{"type":"text","text":" method to repeat the elements of a sequence or"},{"type":"text","text":" "},{"type":"text","text":"collection forever. You can combine "},{"code":"cycled()","type":"codeVoice"},{"type":"text","text":" with another, finite"},{"type":"text","text":" "},{"type":"text","text":"sequence to iterate over the two together."}]},{"syntax":null,"type":"codeListing","code":["for (evenOrOdd, number) in zip([\"even\", \"odd\"].cycled(), 0..<10) {","    print(\"\\(number) is \\(evenOrOdd)\")","}","\/\/ 0 is even","\/\/ 1 is odd","\/\/ 2 is even","\/\/ 3 is odd","\/\/ ...","\/\/ 9 is odd"]},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"When called on a non-empty collection, the resulting sequence"},{"type":"text","text":" "},{"type":"text","text":"is infinite. Do not directly call methods that require a finite"},{"type":"text","text":" "},{"type":"text","text":"sequence, like "},{"type":"codeVoice","code":"map"},{"type":"text","text":" or "},{"type":"codeVoice","code":"filter"},{"type":"text","text":", without first constraining the length"},{"type":"text","text":" "},{"type":"text","text":"of the cycling sequence."}]}],"name":"Important","style":"important"},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}],"name":"Complexity","style":"note"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/splitcollection\/cycled()"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/cycled()"},"abstract":[{"text":"Returns a sequence that repeats the elements of this collection forever.","type":"text"}],"kind":"symbol","metadata":{"title":"cycled()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cycled"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"CycledSequence","preciseIdentifier":"s:10Algorithms14CycledSequenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"symbolKind":"method","role":"symbol","extendedModule":"Swift","externalID":"s:Sl10AlgorithmsE6cycledAA14CycledSequenceVyxGyF::SYNTHESIZED::s:10Algorithms15SplitCollectionV","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/cycled()":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cycled"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:10Algorithms14CycledSequenceV","kind":"typeIdentifier","text":"CycledSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"text":"Returns a sequence that repeats the elements of this collection forever.","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/algorithms\/splitcollection\/cycled()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/cycled()","title":"cycled()"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/Collection-Implementations":{"abstract":[],"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Collection-Implementations","kind":"article","url":"\/documentation\/algorithms\/splitcollection\/collection-implementations","type":"topic","title":"Collection Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection":{"abstract":[{"type":"text","text":"A collection that lazily splits a base collection into subsequences"},{"type":"text","text":" "},{"type":"text","text":"separated by elements that satisfy the given "},{"code":"whereSeparator","type":"codeVoice"},{"text":" predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SplitCollection"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","kind":"symbol","url":"\/documentation\/algorithms\/splitcollection","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SplitCollection"}],"title":"SplitCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledSequence":{"role":"symbol","title":"CycledSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CycledSequence","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledSequence","kind":"symbol","type":"topic","url":"\/documentation\/algorithms\/cycledsequence","abstract":[{"text":"A collection wrapper that repeats the elements of a base collection.","type":"text"}],"navigatorTitle":[{"text":"CycledSequence","kind":"identifier"}]}}}
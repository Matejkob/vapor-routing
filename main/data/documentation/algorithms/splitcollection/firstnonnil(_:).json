{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstNonNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure that takes an element of the sequence as","type":"text"},{"text":" ","type":"text"},{"text":"its argument and returns an optional transformed value.","type":"text"}],"type":"paragraph"}],"name":"transform"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"The first non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" return value of the transformation, or","type":"text"},{"text":" ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if no transformation is successful.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"codeListing","syntax":null,"code":["let strings = [\"three\", \"3.14\", \"-5\", \"2\"]","if let firstInt = strings.firstNonNil({ Int($0) }) {","    print(firstInt)","    \/\/ -5","}"]},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the number of elements at the start of"},{"type":"text","text":" "},{"type":"text","text":"the sequence that result in "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" when applying the transformation."}],"type":"paragraph"}],"style":"note","name":"Complexity"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/firstNonNil(_:)","interfaceLanguage":"swift"},"metadata":{"modules":[{"name":"Algorithms"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"firstNonNil"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":"?"}],"symbolKind":"method","roleHeading":"Instance Method","extendedModule":"Swift","externalID":"s:ST10AlgorithmsE11firstNonNilyqd__SgAC7ElementQzKXEKlF::SYNTHESIZED::s:10Algorithms15SplitCollectionV","title":"firstNonNil(_:)"},"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/splitcollection\/firstnonnil(_:)"]}],"sections":[],"abstract":[{"text":"Returns the first non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" result obtained from applying the given","type":"text"},{"text":" ","type":"text"},{"text":"transformation to the elements of the sequence.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Sequence-Implementations"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection":{"abstract":[{"type":"text","text":"A collection that lazily splits a base collection into subsequences"},{"type":"text","text":" "},{"type":"text","text":"separated by elements that satisfy the given "},{"code":"whereSeparator","type":"codeVoice"},{"text":" predicate.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"SplitCollection"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection","kind":"symbol","url":"\/documentation\/algorithms\/splitcollection","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SplitCollection"}],"title":"SplitCollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/Sequence-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/Sequence-Implementations","type":"topic","kind":"article","url":"\/documentation\/algorithms\/splitcollection\/sequence-implementations","title":"Sequence Implementations","abstract":[],"role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/SplitCollection/firstNonNil(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/SplitCollection\/firstNonNil(_:)","type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"firstNonNil","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?) ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"url":"\/documentation\/algorithms\/splitcollection\/firstnonnil(_:)","title":"firstNonNil(_:)","abstract":[{"text":"Returns the first non-","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" result obtained from applying the given","type":"text"},{"text":" ","type":"text"},{"text":"transformation to the elements of the sequence.","type":"text"}],"role":"symbol"}}}
{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/Sequence-Implementations"]]},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":" "},{"kind":"internalParam","text":"areInIncreasingOrder"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"areInIncreasingOrder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A predicate that returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if its"},{"type":"text","text":" "},{"type":"text","text":"first argument should be ordered before its second argument; otherwise,"},{"type":"text","text":" "},{"code":"false","type":"codeVoice"},{"type":"text","text":"."}]}]}]},{"content":[{"type":"heading","text":"Return Value","anchor":"return-value","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple with the sequenceâ€™s minimum element, followed by its"},{"type":"text","text":" "},{"type":"text","text":"maximum element. If the sequence provides multiple qualifying minimum"},{"type":"text","text":" "},{"type":"text","text":"elements, the first equivalent element is returned; of multiple maximum"},{"type":"text","text":" "},{"type":"text","text":"elements, the last is returned. If the sequence has no elements, the"},{"type":"text","text":" "},{"type":"text","text":"method returns "},{"code":"nil","type":"codeVoice"},{"type":"text","text":"."}]}],"kind":"content"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"The predicate must be a ","type":"text"},{"inlineContent":[{"type":"text","text":"strict weak ordering"}],"type":"emphasis"},{"text":" over the elements. That is,","type":"text"},{"text":" ","type":"text"},{"text":"for any elements ","type":"text"},{"code":"a","type":"codeVoice"},{"text":", ","type":"text"},{"code":"b","type":"codeVoice"},{"text":", and ","type":"text"},{"code":"c","type":"codeVoice"},{"text":", the following conditions must hold:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"code":"areInIncreasingOrder(a, a)","type":"codeVoice"},{"text":" is always ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". (Irreflexivity)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"code":"areInIncreasingOrder(a, b)","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"areInIncreasingOrder(b, c)","type":"codeVoice"},{"text":" are","type":"text"},{"text":" ","type":"text"},{"text":"both ","type":"text"},{"code":"true","type":"codeVoice"},{"text":", then ","type":"text"},{"code":"areInIncreasingOrder(a, c)","type":"codeVoice"},{"text":" is also","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":". (Transitive comparability)","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Two elements are "},{"inlineContent":[{"type":"text","text":"incomparable"}],"type":"emphasis"},{"type":"text","text":" if neither is ordered before the other"},{"type":"text","text":" "},{"type":"text","text":"according to the predicate. If "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"code":"b","type":"codeVoice"},{"type":"text","text":" are incomparable, and "},{"code":"b","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"and "},{"code":"c","type":"codeVoice"},{"type":"text","text":" are incomparable, then "},{"code":"a","type":"codeVoice"},{"type":"text","text":" and "},{"code":"c","type":"codeVoice"},{"type":"text","text":" are also incomparable."},{"type":"text","text":" "},{"type":"text","text":"(Transitive incomparability)"}],"type":"paragraph"}]}],"type":"unorderedList"},{"inlineContent":[{"text":"This example shows how to use the ","type":"text"},{"code":"minAndMax(by:)","type":"codeVoice"},{"text":" method on a dictionary","type":"text"},{"text":" ","type":"text"},{"text":"to find the key-value pair with the lowest value and the pair with the","type":"text"},{"text":" ","type":"text"},{"text":"highest value.","type":"text"}],"type":"paragraph"},{"code":["let hues = [\"Heliotrope\": 296, \"Coral\": 16, \"Aquamarine\": 156]","if let extremeHues = hues.minAndMax(by: {$0.value < $1.value}) {","    print(extremeHues.min, extremeHues.max)","} else {","    print(\"There are no hues\")","}","\/\/ Prints: \"(key: \"Coral\", value: 16) (key: \"Heliotrope\", value: 296)\""],"syntax":null,"type":"codeListing"},{"name":"Precondition","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"The sequence is finite."}],"type":"paragraph"}]},{"name":"Complexity","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"O("},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"type":"text","text":"), where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/minAndMax(by:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/windowsofcountcollection\/minandmax(by:)"]}],"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}],"modules":[{"name":"Algorithms"}],"role":"symbol","externalID":"s:ST10AlgorithmsE9minAndMax2by7ElementQz0B0_AE3maxtSgSbAE_AEtKXE_tKF::SYNTHESIZED::s:10Algorithms24WindowsOfCountCollectionV","extendedModule":"Swift","title":"minAndMax(by:)"},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"Returns both the minimum and maximum elements in the sequence, using the"},{"type":"text","text":" "},{"type":"text","text":"given predicate as the comparison between elements."}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection/Sequence-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/Sequence-Implementations","kind":"article","title":"Sequence Implementations","url":"\/documentation\/algorithms\/windowsofcountcollection\/sequence-implementations","type":"topic","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection":{"kind":"symbol","title":"WindowsOfCountCollection","url":"\/documentation\/algorithms\/windowsofcountcollection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection","abstract":[{"text":"A collection wrapper that presents a sliding window over the elements of","type":"text"},{"text":" ","type":"text"},{"text":"a collection.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"WindowsOfCountCollection","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WindowsOfCountCollection","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/WindowsOfCountCollection/minAndMax(by:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/WindowsOfCountCollection\/minAndMax(by:)","title":"minAndMax(by:)","abstract":[{"type":"text","text":"Returns both the minimum and maximum elements in the sequence, using the"},{"type":"text","text":" "},{"type":"text","text":"given predicate as the comparison between elements."}],"role":"symbol","url":"\/documentation\/algorithms\/windowsofcountcollection\/minandmax(by:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"kind":"symbol"}}}
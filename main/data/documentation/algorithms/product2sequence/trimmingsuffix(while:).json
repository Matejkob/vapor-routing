{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/BidirectionalCollection-Implementations"]]},"kind":"symbol","abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the end of","type":"text"},{"text":" ","type":"text"},{"text":"the collection which satisfy the given predicate.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/trimmingSuffix(while:)","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimmingSuffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure which determines if the element should be"},{"type":"text","text":" "},{"type":"text","text":"omitted from the resulting slice."}]}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses "},{"type":"codeVoice","code":"trimmingSuffix(while:)"},{"type":"text","text":" to get a substring without the"},{"type":"text","text":" "},{"type":"text","text":"white space at the end of the string:"}]},{"code":["let myString = \"  hello, world  \"","print(myString.trimmingSuffix(while: \\.isWhitespace)) \/\/ \"  hello, world\""],"type":"codeListing","syntax":null},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of this collection.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"metadata":{"role":"symbol","extendedModule":"Swift","modules":[{"name":"Algorithms"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmingSuffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"roleHeading":"Instance Method","title":"trimmingSuffix(while:)","externalID":"s:SK10AlgorithmsE14trimmingSuffix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms16Product2SequenceV","symbolKind":"method"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/product2sequence\/trimmingsuffix(while:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/Product2Sequence/BidirectionalCollection-Implementations":{"url":"\/documentation\/algorithms\/product2sequence\/bidirectionalcollection-implementations","role":"collectionGroup","abstract":[],"type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/BidirectionalCollection-Implementations","title":"BidirectionalCollection Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Product2Sequence":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Product2Sequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence","role":"symbol","title":"Product2Sequence","url":"\/documentation\/algorithms\/product2sequence","type":"topic","abstract":[{"text":"A sequence that represents the product of two sequencesâ€™ elements.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"Product2Sequence"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/Product2Sequence/trimmingSuffix(while:)":{"title":"trimmingSuffix(while:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimmingSuffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the end of","type":"text"},{"text":" ","type":"text"},{"text":"the collection which satisfy the given predicate.","type":"text"}],"url":"\/documentation\/algorithms\/product2sequence\/trimmingsuffix(while:)","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/Product2Sequence\/trimmingSuffix(while:)","type":"topic"}}}
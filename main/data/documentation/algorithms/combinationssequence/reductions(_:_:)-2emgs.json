{"metadata":{"symbolKind":"method","role":"symbol","title":"reductions(_:_:)","extendedModule":"Swift","roleHeading":"Instance Method","externalID":"s:ST10AlgorithmsE10reductionsySayqd__Gqd___qd__qd___7ElementQztKXEtKlF::SYNTHESIZED::s:10Algorithms20CombinationsSequenceV","modules":[{"name":"Algorithms"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"abstract":[{"type":"text","text":"Returns an array containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the sequence using the given closure."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence\/reductions(_:_:)-2emgs"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence\/Sequence-Implementations"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/algorithms\/combinationssequence\/reductions(_:_:)-2emgs"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Result","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"initial","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"transform","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The value to use as the initial value."}],"type":"paragraph"}],"name":"initial"},{"content":[{"type":"paragraph","inlineContent":[{"text":"A closure that combines the previously reduced result and","type":"text"},{"text":" ","type":"text"},{"text":"the next element in the receiving sequence.","type":"text"}]}],"name":"transform"}],"kind":"parameters"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"return-value","text":"Return Value"},{"inlineContent":[{"type":"text","text":"An array of the initial value followed by the reduced elements."}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This can be seen as applying the reduce function to each element and","type":"text"},{"text":" ","type":"text"},{"text":"providing the initial value followed by these results as a sequence.","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let runningTotal = [1, 2, 3, 4].reductions(0, +)","print(runningTotal)","","\/\/ prints [0, 1, 3, 6, 10]"],"type":"codeListing"},{"inlineContent":[{"type":"text","text":"When "},{"code":"reductions(_:_:)","type":"codeVoice"},{"type":"text","text":" is called, the following steps occur:"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"initial","type":"codeVoice"},{"type":"text","text":" result is added to an array of results."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" closure is called with the ","type":"text"},{"type":"codeVoice","code":"initial"},{"text":" result and the","type":"text"},{"text":" ","type":"text"},{"text":"first element of the sequence, appending the result to the array.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the updated accumulating"},{"type":"text","text":" "},{"type":"text","text":"result and each element of the sequence, adding each result to the"},{"type":"text","text":" "},{"type":"text","text":"array."}]}]},{"content":[{"inlineContent":[{"type":"text","text":"When the sequence is exhausted, the results array is returned to the"},{"type":"text","text":" "},{"type":"text","text":"caller."}],"type":"paragraph"}]}],"type":"orderedList"},{"inlineContent":[{"text":"If the sequence has no elements, ","type":"text"},{"type":"codeVoice","code":"transform"},{"text":" is never executed and","type":"text"},{"text":" ","type":"text"},{"text":"an array containing only the ","type":"text"},{"type":"codeVoice","code":"initial"},{"text":" result is returned.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}]}],"type":"aside","name":"Complexity"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"title":"CombinationsSequence","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombinationsSequence"}],"type":"topic","url":"\/documentation\/algorithms\/combinationssequence","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence/Sequence-Implementations":{"abstract":[],"kind":"article","title":"Sequence Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence\/Sequence-Implementations","type":"topic","role":"collectionGroup","url":"\/documentation\/algorithms\/combinationssequence\/sequence-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence/reductions(_:_:)-2emgs":{"type":"topic","abstract":[{"type":"text","text":"Returns an array containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the sequence using the given closure."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence\/reductions(_:_:)-2emgs","url":"\/documentation\/algorithms\/combinationssequence\/reductions(_:_:)-2emgs","title":"reductions(_:_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"reductions","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Result"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Result"},{"kind":"text","text":", "},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> [","kind":"text"},{"text":"Result","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"role":"symbol"}}}
{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedSequence\/Sequence-Implementations"]]},"metadata":{"extendedModule":"Swift","modules":[{"name":"Algorithms"}],"symbolKind":"method","roleHeading":"Instance Method","title":"reductions(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"role":"symbol","externalID":"s:ST10AlgorithmsE10reductionsySay7ElementQzGA2D_ADtKXEKF::SYNTHESIZED::s:10Algorithms17CompactedSequenceV"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"text":"Returns an array containing the accumulated results of combining the","type":"text"},{"text":" ","type":"text"},{"text":"elements of the sequence using the given closure.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/compactedsequence\/reductions(_:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedSequence\/reductions(_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"reductions"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"transform","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that combines the previously reduced"},{"type":"text","text":" "},{"type":"text","text":"result and the next element in the receiving sequence."}]}]}]},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"inlineContent":[{"text":"An array of the reduced elements.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"This can be seen as applying the reduce function to each element and","type":"text"},{"text":" ","type":"text"},{"text":"providing the initial value followed by these results as a sequence.","type":"text"}],"type":"paragraph"},{"code":["let runningTotal = [1, 2, 3, 4].reductions(+)","print(runningTotal)","","\/\/ prints [1, 3, 6, 10]"],"type":"codeListing","syntax":null},{"inlineContent":[{"text":"When ","type":"text"},{"type":"codeVoice","code":"reductions(_:)"},{"text":" is called, the following steps occur:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" closure is called with the first and second elements"},{"type":"text","text":" "},{"type":"text","text":"of the sequence, appending the result to an array of results."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"The closure is called again repeatedly with the updated accumulating"},{"type":"text","text":" "},{"type":"text","text":"result and the next element of the sequence, adding each result to the"},{"type":"text","text":" "},{"type":"text","text":"array."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"When the sequence is exhausted, the results array is returned to the","type":"text"},{"text":" ","type":"text"},{"text":"caller.","type":"text"}]}]}],"type":"orderedList"},{"inlineContent":[{"type":"text","text":"If the sequence has no elements, "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" is never executed and"},{"type":"text","text":" "},{"type":"text","text":"an empty array is returned."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the sequence has one element, "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" is never executed and"},{"type":"text","text":" "},{"type":"text","text":"an array containing only that first element is returned."}],"type":"paragraph"},{"style":"note","type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the sequence.","type":"text"}],"type":"paragraph"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedSequence":{"type":"topic","url":"\/documentation\/algorithms\/compactedsequence","title":"CompactedSequence","abstract":[{"text":"A ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"text":" that iterates over every non-nil element from the original","type":"text"},{"text":" ","type":"text"},{"code":"Sequence","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"CompactedSequence","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CompactedSequence","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedSequence"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedSequence/reductions(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedSequence\/reductions(_:)","type":"topic","url":"\/documentation\/algorithms\/compactedsequence\/reductions(_:)","abstract":[{"type":"text","text":"Returns an array containing the accumulated results of combining the"},{"type":"text","text":" "},{"type":"text","text":"elements of the sequence using the given closure."}],"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"reductions","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"title":"reductions(_:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CompactedSequence/Sequence-Implementations":{"kind":"article","abstract":[],"role":"collectionGroup","type":"topic","url":"\/documentation\/algorithms\/compactedsequence\/sequence-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CompactedSequence\/Sequence-Implementations","title":"Sequence Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"}}}
{"metadata":{"extendedModule":"Swift","symbolKind":"method","title":"combinations(ofCount:)","modules":[{"name":"Algorithms"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGqd___tSXRd__Si5BoundRtd__lF::SYNTHESIZED::s:10Algorithms27ExclusiveReductionsSequenceV","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/Collection-Implementations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"combinations"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"R"},{"kind":"text","text":">("},{"text":"ofCount","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"kRange","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":"> ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SX","text":"RangeExpression","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Bound","kind":"typeIdentifier"},{"text":" == ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The range of numbers of elements to include in each","type":"text"},{"text":" ","type":"text"},{"text":"combination.","type":"text"}],"type":"paragraph"}],"name":"kRange"}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","text":"Discussion","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints the different combinations of 1 and 2 from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}]},{"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 1...2) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia","\/\/ cyan","\/\/ mauve","\/\/ magenta","\/\/ fuchsia, cyan","\/\/ fuchsia, mauve","\/\/ fuchsia, magenta","\/\/ cyan, mauve","\/\/ cyan, magenta","\/\/ mauve, magenta"],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"The returned collection presents combinations in a consistent order, where","type":"text"},{"text":" ","type":"text"},{"text":"the indices in each combination are in ascending lexicographical order.","type":"text"},{"text":" ","type":"text"},{"text":"That is, in the example above, the combinations in order are the elements","type":"text"},{"text":" ","type":"text"},{"text":"at ","type":"text"},{"code":"[0]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[1]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 1]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 2]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[0, 3]","type":"codeVoice"},{"text":", ","type":"text"},{"code":"[1, 2]","type":"codeVoice"},{"text":",","type":"text"},{"text":" ","type":"text"},{"code":"[1, 3]","type":"codeVoice"},{"text":", and finally ","type":"text"},{"code":"[2, 3]","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example prints "},{"type":"emphasis","inlineContent":[{"type":"text","text":"all"}]},{"type":"text","text":" the combinations (including an empty array and"},{"type":"text","text":" "},{"type":"text","text":"the original collection) from an array of numbers:"}]},{"type":"codeListing","code":["let numbers = [10, 20, 30, 40]","for combo in numbers.combinations(ofCount: 0...) {","    print(combo)","}","\/\/ []","\/\/ [10]","\/\/ [20]","\/\/ [30]","\/\/ [40]","\/\/ [10, 20]","\/\/ [10, 30]","\/\/ [10, 40]","\/\/ [20, 30]","\/\/ [20, 40]","\/\/ [30, 40]","\/\/ [10, 20, 30]","\/\/ [10, 20, 40]","\/\/ [10, 30, 40]","\/\/ [20, 30, 40]","\/\/ [10, 20, 30, 40]"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If "},{"code":"kRange","type":"codeVoice"},{"type":"text","text":" is "},{"code":"0...0","type":"codeVoice"},{"type":"text","text":", the resulting sequence has exactly one element, an"},{"type":"text","text":" "},{"type":"text","text":"empty array. The given range is limited to "},{"code":"0...base.count","type":"codeVoice"},{"type":"text","text":". If the"},{"type":"text","text":" "},{"type":"text","text":"limited range is empty, the resulting sequence has no elements."}]},{"type":"aside","name":"Complexity","style":"note","content":[{"inlineContent":[{"type":"text","text":"O(1) for random-access base collections. O("},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":") where "},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"type":"text","text":" "},{"type":"text","text":"is the number of elements in the base collection, since"},{"type":"text","text":" "},{"code":"CombinationsSequence","type":"codeVoice"},{"type":"text","text":" accesses the "},{"code":"count","type":"codeVoice"},{"type":"text","text":" of the base collection."}],"type":"paragraph"}]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/combinations(ofCount:)-4jfs0","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/exclusivereductionssequence\/combinations(ofcount:)-4jfs0"]}],"abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence/combinations(ofCount:)-4jfs0":{"kind":"symbol","type":"topic","title":"combinations(ofCount:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/combinations(ofCount:)-4jfs0","abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"url":"\/documentation\/algorithms\/exclusivereductionssequence\/combinations(ofcount:)-4jfs0","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"<","kind":"text"},{"text":"R","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"R","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier","text":"CombinationsSequence"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence/Collection-Implementations":{"title":"Collection Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence\/Collection-Implementations","kind":"article","type":"topic","abstract":[],"url":"\/documentation\/algorithms\/exclusivereductionssequence\/collection-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"title":"CombinationsSequence","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombinationsSequence"}],"type":"topic","url":"\/documentation\/algorithms\/combinationssequence","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ExclusiveReductionsSequence":{"title":"ExclusiveReductionsSequence","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ExclusiveReductionsSequence"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ExclusiveReductionsSequence","kind":"symbol","type":"topic","abstract":[{"text":"A sequence of applying a transform to the element of a sequence and the","type":"text"},{"text":" ","type":"text"},{"text":"previously transformed result.","type":"text"}],"url":"\/documentation\/algorithms\/exclusivereductionssequence","navigatorTitle":[{"kind":"identifier","text":"ExclusiveReductionsSequence"}]}}}
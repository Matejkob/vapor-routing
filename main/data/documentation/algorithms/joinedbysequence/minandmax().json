{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedBySequence","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedBySequence\/Sequence-Implementations"]]},"abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/joinedbysequence\/minandmax()"]}],"metadata":{"externalID":"s:ST10AlgorithmsSL7ElementRpzrlE9minAndMaxAC0C0_AC3maxtSgyF::SYNTHESIZED::s:10Algorithms16JoinedBySequenceV","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","role":"symbol","title":"minAndMax()","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"() -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedBySequence\/minAndMax()"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"minAndMax","kind":"identifier"},{"text":"() -> (min","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", max","kind":"text"},{"text":": ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":")?","kind":"text"}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Return Value","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple with the sequenceâ€™s minimum element, followed by its"},{"type":"text","text":" "},{"type":"text","text":"maximum element. If the sequence provides multiple qualifying minimum"},{"type":"text","text":" "},{"type":"text","text":"elements, the first equivalent element is returned; of multiple maximum"},{"type":"text","text":" "},{"type":"text","text":"elements, the last is returned. If the sequence has no elements, the"},{"type":"text","text":" "},{"type":"text","text":"method returns "},{"type":"codeVoice","code":"nil"},{"type":"text","text":"."}]}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example finds the smallest and largest values in an array of height"},{"type":"text","text":" "},{"type":"text","text":"measurements."}]},{"syntax":null,"code":["let heights = [67.5, 65.7, 64.3, 61.1, 58.5, 60.3, 64.9]","if let (lowestHeight, greatestHeight) = heights.minAndMax() {","    print(lowestHeight, greatestHeight)","} else {","    print(\"The list of heights is empty\")","}","\/\/ Prints: \"58.5 67.5\""],"type":"codeListing"},{"content":[{"inlineContent":[{"type":"text","text":"The sequence is finite."}],"type":"paragraph"}],"name":"Precondition","style":"note","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the sequence."}],"type":"paragraph"}],"name":"Complexity","style":"note","type":"aside"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/JoinedBySequence/minAndMax()":{"url":"\/documentation\/algorithms\/joinedbysequence\/minandmax()","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"title":"minAndMax()","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"minAndMax"},{"kind":"text","text":"() -> (min"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":", max"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":")?"}],"kind":"symbol","abstract":[{"text":"Returns both the minimum and maximum elements in the sequence.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedBySequence\/minAndMax()","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/JoinedBySequence/Sequence-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedBySequence\/Sequence-Implementations","title":"Sequence Implementations","url":"\/documentation\/algorithms\/joinedbysequence\/sequence-implementations","abstract":[],"role":"collectionGroup","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/JoinedBySequence":{"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"JoinedBySequence","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedBySequence","title":"JoinedBySequence","url":"\/documentation\/algorithms\/joinedbysequence","abstract":[{"text":"A sequence that presents the elements of a base sequence of sequences","type":"text"},{"text":" ","type":"text"},{"text":"concatenated using a given separator.","type":"text"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"JoinedBySequence","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"}}}
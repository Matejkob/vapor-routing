{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" is greater","type":"text"},{"text":" ","type":"text"},{"text":"than the number of elements in this sequence, all of the sequenceâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"elements are returned.","type":"text"}]}],"name":"count"}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"text":"An array of the largest ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" elements of this sequence.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"largest values:","type":"text"}],"type":"paragraph"},{"syntax":null,"code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3)","\/\/ [7, 8, 9]"],"type":"codeListing"},{"inlineContent":[{"text":"If you need to sort a sequence but only need to access its largest","type":"text"},{"text":" ","type":"text"},{"text":"elements, using this method can give you a performance boost over sorting","type":"text"},{"text":" ","type":"text"},{"text":"the entire sequence. The order of equal elements is guaranteed to be","type":"text"},{"text":" ","type":"text"},{"text":"preserved.","type":"text"}],"type":"paragraph"},{"name":"Complexity","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"type":"text","text":"nk"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"text":"n","type":"text"}]},{"type":"text","text":" is the length of the"},{"type":"text","text":" "},{"type":"text","text":"sequence and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is "},{"type":"codeVoice","code":"count"},{"type":"text","text":"."}],"type":"paragraph"}],"style":"note","type":"aside"}],"kind":"content"}],"abstract":[{"text":"Returns the largest elements of this sequence.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/chunkedbycollection\/max(count:)-vvzx"]}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/max(count:)-vvzx","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/Sequence-Implementations"]]},"sections":[],"metadata":{"role":"symbol","symbolKind":"method","externalID":"s:ST10AlgorithmsSL7ElementRpzrlE3max5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms19ChunkedByCollectionV","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"title":"max(count:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/max(count:)-vvzx":{"abstract":[{"text":"Returns the largest elements of this sequence.","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/max(count:)-vvzx","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Comparable","type":"codeVoice"},{"text":".","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"max"},{"kind":"text","text":"("},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"kind":"text","text":") -> ["},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"]"}],"url":"\/documentation\/algorithms\/chunkedbycollection\/max(count:)-vvzx","type":"topic","title":"max(count:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection":{"title":"ChunkedByCollection","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"ChunkedByCollection","kind":"identifier"}],"type":"topic","kind":"symbol","navigatorTitle":[{"text":"ChunkedByCollection","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection","url":"\/documentation\/algorithms\/chunkedbycollection","abstract":[{"text":"A collection wrapper that breaks a collection into chunks based on a","type":"text"},{"text":" ","type":"text"},{"text":"predicate.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/ChunkedByCollection/Sequence-Implementations":{"title":"Sequence Implementations","type":"topic","role":"collectionGroup","abstract":[],"url":"\/documentation\/algorithms\/chunkedbycollection\/sequence-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/ChunkedByCollection\/Sequence-Implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"}}}
{"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":" "},{"kind":"internalParam","text":"predicate"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"inlineContent":[{"text":"A closure which determines if the element should be","type":"text"},{"text":" ","type":"text"},{"text":"omitted from the resulting slice.","type":"text"}],"type":"paragraph"}],"name":"predicate"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This example uses "},{"code":"trimming(while:)","type":"codeVoice"},{"type":"text","text":" to get a substring without the white"},{"type":"text","text":" "},{"type":"text","text":"space at the beginning and end of the string:"}]},{"syntax":null,"type":"codeListing","code":["let myString = \"  hello, world  \"","print(myString.trimming(while: \\.isWhitespace)) \/\/ \"hello, world\""]},{"style":"note","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" is the length of this collection.","type":"text"}],"type":"paragraph"}],"name":"Complexity"}],"kind":"content"}],"metadata":{"extendedModule":"Swift","externalID":"s:SK10AlgorithmsE8trimming5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms25JoinedByClosureCollectionV","modules":[{"name":"Algorithms"}],"title":"trimming(while:)","role":"symbol","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"trimming"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]},"variants":[{"paths":["\/documentation\/algorithms\/joinedbyclosurecollection\/trimming(while:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedByClosureCollection\/trimming(while:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedByClosureCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedByClosureCollection\/BidirectionalCollection-Implementations"]]},"abstract":[{"type":"text","text":"Returns a "},{"code":"SubSequence","type":"codeVoice"},{"type":"text","text":" formed by discarding all elements at the start and"},{"type":"text","text":" "},{"type":"text","text":"end of the collection which satisfy the given predicate."}],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/JoinedByClosureCollection":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"JoinedByClosureCollection"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JoinedByClosureCollection"}],"abstract":[{"type":"text","text":"A collection that presents the elements of a base collection of collections"},{"type":"text","text":" "},{"type":"text","text":"concatenated using a given separator that depends on the collections right"},{"type":"text","text":" "},{"type":"text","text":"before and after it."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedByClosureCollection","title":"JoinedByClosureCollection","type":"topic","url":"\/documentation\/algorithms\/joinedbyclosurecollection"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/JoinedByClosureCollection/BidirectionalCollection-Implementations":{"kind":"article","type":"topic","role":"collectionGroup","title":"BidirectionalCollection Implementations","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedByClosureCollection\/BidirectionalCollection-Implementations","url":"\/documentation\/algorithms\/joinedbyclosurecollection\/bidirectionalcollection-implementations"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/JoinedByClosureCollection/trimming(while:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/JoinedByClosureCollection\/trimming(while:)","abstract":[{"text":"Returns a ","type":"text"},{"type":"codeVoice","code":"SubSequence"},{"text":" formed by discarding all elements at the start and","type":"text"},{"text":" ","type":"text"},{"text":"end of the collection which satisfy the given predicate.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"trimming","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"url":"\/documentation\/algorithms\/joinedbyclosurecollection\/trimming(while:)","title":"trimming(while:)","role":"symbol","type":"topic"}}}
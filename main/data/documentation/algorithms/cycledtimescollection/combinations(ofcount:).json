{"sections":[],"variants":[{"paths":["\/documentation\/algorithms\/cycledtimescollection\/combinations(ofcount:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"combinations(ofCount:)","symbolKind":"method","roleHeading":"Instance Method","externalID":"s:Sl10AlgorithmsE12combinations7ofCountAA20CombinationsSequenceVyxGSi_tF::SYNTHESIZED::s:10Algorithms21CycledTimesCollectionV","modules":[{"name":"Algorithms"}],"extendedModule":"Swift"},"abstract":[{"type":"text","text":"Returns a collection of combinations of this collection’s elements, with"},{"type":"text","text":" "},{"type":"text","text":"each combination having the specified number of elements."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/combinations(ofCount:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","text":"CombinationsSequence","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"k","content":[{"inlineContent":[{"type":"text","text":"The number of elements to include in each combination."}],"type":"paragraph"}]}]},{"content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"inlineContent":[{"type":"text","text":"This example prints the different combinations of three from an array of"},{"type":"text","text":" "},{"type":"text","text":"four colors:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["let colors = [\"fuchsia\", \"cyan\", \"mauve\", \"magenta\"]","for combo in colors.combinations(ofCount: 3) {","    print(combo.joined(separator: \", \"))","}","\/\/ fuchsia, cyan, mauve","\/\/ fuchsia, cyan, magenta","\/\/ fuchsia, mauve, magenta","\/\/ cyan, mauve, magenta"]},{"inlineContent":[{"type":"text","text":"The returned collection presents combinations in a consistent order, where"},{"type":"text","text":" "},{"type":"text","text":"the indices in each combination are in ascending lexicographical order."},{"type":"text","text":" "},{"type":"text","text":"That is, in the example above, the combinations in order are the elements"},{"type":"text","text":" "},{"text":"at ","type":"text"},{"type":"codeVoice","code":"[0, 1, 2]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"[0, 1, 3]"},{"text":", ","type":"text"},{"type":"codeVoice","code":"[0, 2, 3]"},{"text":", and finally ","type":"text"},{"type":"codeVoice","code":"[1, 2, 3]"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"If ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" is zero, the resulting sequence has exactly one element, an empty","type":"text"},{"text":" ","type":"text"},{"text":"array. If ","type":"text"},{"code":"k","type":"codeVoice"},{"text":" is greater than the number of elements in this sequence,","type":"text"},{"text":" ","type":"text"},{"text":"the resulting sequence has no elements.","type":"text"}],"type":"paragraph"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1) for random-access base collections. O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":") where ","type":"text"},{"inlineContent":[{"text":"n","type":"text"}],"type":"emphasis"},{"text":" ","type":"text"},{"text":"is the number of elements in the base collection, since","type":"text"},{"text":" ","type":"text"},{"code":"CombinationsSequence","type":"codeVoice"},{"text":" accesses the ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" of the base collection.","type":"text"}]}],"type":"aside","name":"Complexity"}],"kind":"content"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection":{"role":"symbol","title":"CycledTimesCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CycledTimesCollection","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","kind":"symbol","type":"topic","url":"\/documentation\/algorithms\/cycledtimescollection","abstract":[{"text":"A collection wrapper that repeats the elements of a base collection for a","type":"text"},{"text":" ","type":"text"},{"text":"finite number of times.","type":"text"}],"navigatorTitle":[{"text":"CycledTimesCollection","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/combinations(ofCount:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/combinations(ofCount:)","url":"\/documentation\/algorithms\/cycledtimescollection\/combinations(ofcount:)","abstract":[{"text":"Returns a collection of combinations of this collection’s elements, with","type":"text"},{"text":" ","type":"text"},{"text":"each combination having the specified number of elements.","type":"text"}],"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"combinations","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ofCount","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"CombinationsSequence","preciseIdentifier":"s:10Algorithms20CombinationsSequenceV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"combinations(ofCount:)"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CombinationsSequence":{"abstract":[{"type":"text","text":"A collection wrapper that generates combinations of a base collection."}],"title":"CombinationsSequence","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CombinationsSequence","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CombinationsSequence"}],"type":"topic","url":"\/documentation\/algorithms\/combinationssequence","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CombinationsSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/algorithms\/cycledtimescollection\/collection-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"}}}
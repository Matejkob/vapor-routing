{"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"suffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"predicate","kind":"internalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"predicate","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A closure that takes an element of the sequence as"},{"type":"text","text":" "},{"type":"text","text":"its argument and returns "},{"code":"true","type":"codeVoice"},{"type":"text","text":" if the element should be included or"},{"type":"text","text":" "},{"code":"false","type":"codeVoice"},{"type":"text","text":" if it should be excluded. Once the predicate returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" it"},{"type":"text","text":" "},{"type":"text","text":"will not be called again."}]}]}],"kind":"parameters"},{"content":[{"level":2,"text":"Discussion","anchor":"discussion","type":"heading"},{"style":"note","name":"Complexity","type":"aside","content":[{"inlineContent":[{"text":"O(","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":"), where ","type":"text"},{"inlineContent":[{"type":"text","text":"n"}],"type":"emphasis"},{"text":" is the length of the collection.","type":"text"}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/suffix(while:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/BidirectionalCollection-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/cycledtimescollection\/suffix(while:)"]}],"abstract":[{"type":"text","text":"Returns a subsequence containing the elements from the end until"},{"type":"text","text":" "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" and skipping the remaining elements."}],"metadata":{"externalID":"s:SK10AlgorithmsE6suffix5while11SubSequenceQzSb7ElementQzKXE_tKF::SYNTHESIZED::s:10Algorithms21CycledTimesCollectionV","modules":[{"name":"Algorithms"}],"extendedModule":"Swift","symbolKind":"method","role":"symbol","roleHeading":"Instance Method","title":"suffix(while:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"suffix","kind":"identifier"},{"text":"(","kind":"text"},{"text":"while","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"SubSequence","kind":"typeIdentifier"}]},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/suffix(while:)":{"kind":"symbol","url":"\/documentation\/algorithms\/cycledtimescollection\/suffix(while:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/suffix(while:)","abstract":[{"type":"text","text":"Returns a subsequence containing the elements from the end until"},{"type":"text","text":" "},{"type":"codeVoice","code":"predicate"},{"type":"text","text":" returns "},{"type":"codeVoice","code":"false"},{"type":"text","text":" and skipping the remaining elements."}],"title":"suffix(while:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"suffix"},{"kind":"text","text":"("},{"kind":"externalParam","text":"while"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"SubSequence"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/BidirectionalCollection-Implementations":{"title":"BidirectionalCollection Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/BidirectionalCollection-Implementations","url":"\/documentation\/algorithms\/cycledtimescollection\/bidirectionalcollection-implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection":{"role":"symbol","title":"CycledTimesCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CycledTimesCollection","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","kind":"symbol","type":"topic","url":"\/documentation\/algorithms\/cycledtimescollection","abstract":[{"text":"A collection wrapper that repeats the elements of a base collection for a","type":"text"},{"text":" ","type":"text"},{"text":"finite number of times.","type":"text"}],"navigatorTitle":[{"text":"CycledTimesCollection","kind":"identifier"}]}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/algorithms\/cycledtimescollection\/max(count:)-5dg86"]}],"metadata":{"title":"max(count:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"extendedModule":"Swift","modules":[{"name":"Algorithms"}],"roleHeading":"Instance Method","symbolKind":"method","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"externalID":"s:Sl10AlgorithmsSL7ElementRpzrlE3max5countSayACGSi_tF::SYNTHESIZED::s:10Algorithms21CycledTimesCollectionV","role":"symbol"},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/max(count:)-5dg86"},"abstract":[{"text":"Returns the largest elements of this collection.","type":"text"}],"kind":"symbol","schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/Collection-Implementations"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"count","content":[{"inlineContent":[{"text":"The number of elements to return. If ","type":"text"},{"code":"count","type":"codeVoice"},{"text":" is greater","type":"text"},{"text":" ","type":"text"},{"text":"than the number of elements in this collection, all of the collectionâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"elements are returned.","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"An array of the largest "},{"type":"codeVoice","code":"count"},{"type":"text","text":" elements of this collection."}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This example partially sorts an array of integers to retrieve its three","type":"text"},{"text":" ","type":"text"},{"text":"largest values:","type":"text"}]},{"type":"codeListing","code":["let numbers = [7, 1, 6, 2, 8, 3, 9]","let smallestThree = numbers.max(count: 3)","\/\/ [7, 8, 9]"],"syntax":null},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you need to sort a collection but only need to access its largest"},{"type":"text","text":" "},{"type":"text","text":"elements, using this method can give you a performance boost over sorting"},{"type":"text","text":" "},{"type":"text","text":"the entire collection. The order of equal elements is guaranteed to be"},{"type":"text","text":" "},{"type":"text","text":"preserved."}]},{"type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":" log "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" + "},{"type":"emphasis","inlineContent":[{"text":"nk","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"n"}]},{"type":"text","text":" is the length of the"},{"type":"text","text":" "},{"type":"text","text":"collection and "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is "},{"type":"codeVoice","code":"count"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"Complexity"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Algorithms":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms","kind":"symbol","url":"\/documentation\/algorithms","type":"topic","role":"collection","abstract":[],"title":"Algorithms"},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/Collection-Implementations":{"role":"collectionGroup","title":"Collection Implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/Collection-Implementations","kind":"article","type":"topic","url":"\/documentation\/algorithms\/cycledtimescollection\/collection-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection/max(count:)-5dg86":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection\/max(count:)-5dg86","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Comparable"},{"type":"text","text":"."}]},"role":"symbol","type":"topic","title":"max(count:)","url":"\/documentation\/algorithms\/cycledtimescollection\/max(count:)-5dg86","kind":"symbol","abstract":[{"type":"text","text":"Returns the largest elements of this collection."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"max","kind":"identifier"},{"text":"(","kind":"text"},{"text":"count","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> [","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"]","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Algorithms/CycledTimesCollection":{"role":"symbol","title":"CycledTimesCollection","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CycledTimesCollection","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Algorithms\/CycledTimesCollection","kind":"symbol","type":"topic","url":"\/documentation\/algorithms\/cycledtimescollection","abstract":[{"text":"A collection wrapper that repeats the elements of a base collection for a","type":"text"},{"text":" ","type":"text"},{"text":"finite number of times.","type":"text"}],"navigatorTitle":[{"text":"CycledTimesCollection","kind":"identifier"}]}}}
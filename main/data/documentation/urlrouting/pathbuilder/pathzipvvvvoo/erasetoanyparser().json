{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVOO\/eraseToAnyParser()"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"text":"Return Value","level":2,"type":"heading","anchor":"return-value"},{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"AnyParser","type":"codeVoice"},{"text":" wrapping this parser.","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"This form of ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"type erasure"}]},{"text":" preserves abstraction across API boundaries, such as different","type":"text"},{"text":" ","type":"text"},{"text":"modules.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"When you expose your composed parsers as the "},{"type":"codeVoice","code":"AnyParser"},{"type":"text","text":" type, you can change the underlying"},{"type":"text","text":" "},{"type":"text","text":"implementation over time without affecting existing clients."}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Equivalent to passing "},{"code":"self","type":"codeVoice"},{"type":"text","text":" to "},{"code":"AnyParser.init","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"Wraps this parser with a type eraser.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/erasetoanyparser()"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVOO","doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVOO\/Parser-Implementations"]]},"metadata":{"roleHeading":"Instance Method","symbolKind":"method","title":"eraseToAnyParser()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"eraseToAnyParser"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"AnyParser","preciseIdentifier":"s:7Parsing9AnyParserV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}],"extendedModule":"Parsing","externalID":"s:7Parsing6ParserPAAE010eraseToAnyB0AA0eB0Vy5InputQz6OutputQzGyF::SYNTHESIZED::s:10URLRouting11PathBuilderO0B9ZipVVVVOOV","modules":[{"name":"URLRouting"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVVVVOO":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"PathZipVVVVOO"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVOO","role":"symbol","title":"PathBuilder.PathZipVVVVOO","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo","type":"topic","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"PathZipVVVVOO"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVVVVOO/Parser-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVOO\/Parser-Implementations","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/parser-implementations","title":"Parser Implementations","abstract":[],"kind":"article","type":"topic","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder":{"url":"\/documentation\/urlrouting\/pathbuilder","title":"PathBuilder","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"PathBuilder","kind":"identifier"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"A custom parameter attribute that constructs path component parsers from closures. The"},{"type":"text","text":" "},{"type":"text","text":"constructed parser runs a number of parsers against each patch component, one after the other,"},{"type":"text","text":" "},{"type":"text","text":"and accumulates their outputs."}],"role":"symbol","navigatorTitle":[{"text":"PathBuilder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/URLRouting":{"url":"\/documentation\/urlrouting","title":"URLRouting","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/Parsing/AnyParser":{"url":"\/documentation\/parsing\/anyparser","kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AnyParser","kind":"identifier"}],"abstract":[{"type":"text","text":"A type-erased parser of "},{"type":"codeVoice","code":"Output"},{"type":"text","text":" from "},{"type":"codeVoice","code":"Input"},{"type":"text","text":"."}],"navigatorTitle":[{"text":"AnyParser","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Parsing\/AnyParser","title":"AnyParser"},"doc://co.pointfree.VaporRouting/documentation/URLRouting/PathBuilder/PathZipVVVVOO/eraseToAnyParser()":{"type":"topic","title":"eraseToAnyParser()","kind":"symbol","abstract":[{"type":"text","text":"Wraps this parser with a type eraser."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/URLRouting\/PathBuilder\/PathZipVVVVOO\/eraseToAnyParser()","url":"\/documentation\/urlrouting\/pathbuilder\/pathzipvvvvoo\/erasetoanyparser()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"eraseToAnyParser","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7Parsing9AnyParserV","kind":"typeIdentifier","text":"AnyParser"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Input"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Output"},{"kind":"text","text":">"}]}}}
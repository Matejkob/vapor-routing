{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceOrAdd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indexing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKIndexing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKIndexing","preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier"},{"text":" = .indexable)","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The header field name. For maximum compatibility this should be an","type":"text"},{"type":"text","text":" "},{"type":"text","text":"ASCII string. For future-proofing with HTTP\/2 lowercase header names are strongly"},{"type":"text","text":" "},{"type":"text","text":"recommended."}]}],"name":"name"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The header field value to add for the given name."}]}],"name":"value"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This is a supplemental method to ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" that essentially combines ","type":"text"},{"code":"remove","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"add","type":"codeVoice"},{"text":" ","type":"text"},{"text":"in a single function. It can be used to ensure that a header block is in a","type":"text"},{"text":" ","type":"text"},{"text":"well-defined form without having to check whether the value was previously there.","type":"text"},{"text":" ","type":"text"},{"text":"Like ","type":"text"},{"code":"add","type":"codeVoice"},{"text":", this method performs case-insensitive comparisons of the header field","type":"text"},{"text":" ","type":"text"},{"text":"names.","type":"text"}]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders\/replaceOrAdd(name:value:indexing:)"},"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders"]]},"abstract":[{"type":"text","text":"Add a header name\/value pair to the block, replacing any previous values for the"},{"type":"text","text":" "},{"type":"text","text":"same header name that are already in the block."}],"variants":[{"paths":["\/documentation\/niohpack\/hpackheaders\/replaceoradd(name:value:indexing:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"replaceOrAdd(name:value:indexing:)","externalID":"s:8NIOHPACK12HPACKHeadersV12replaceOrAdd4name5value8indexingySS_SSAA13HPACKIndexingOtF","modules":[{"name":"NIOHPACK"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"replaceOrAdd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"indexing"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier","text":"HPACKIndexing"},{"kind":"text","text":")"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","title":"NIOHPACK","type":"topic","url":"\/documentation\/niohpack"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKIndexing":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKIndexing"}],"type":"topic","url":"\/documentation\/niohpack\/hpackindexing","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKIndexing","title":"HPACKIndexing","abstract":[{"type":"text","text":"Defines the types of indexing and rewriting operations a decoder may take with"},{"type":"text","text":" "},{"type":"text","text":"regard to this header."}],"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HPACKIndexing"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HPACKHeaders"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKHeaders"}],"abstract":[{"type":"text","text":"Very similar to "},{"code":"NIOHTTP1.HTTPHeaders","type":"codeVoice"},{"type":"text","text":", but with extra data for storing indexing"},{"type":"text","text":" "},{"type":"text","text":"information."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","title":"HPACKHeaders","type":"topic","url":"\/documentation\/niohpack\/hpackheaders"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders/replaceOrAdd(name:value:indexing:)":{"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders\/replaceOrAdd(name:value:indexing:)","url":"\/documentation\/niohpack\/hpackheaders\/replaceoradd(name:value:indexing:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"replaceOrAdd","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"indexing","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKIndexing","preciseIdentifier":"s:8NIOHPACK13HPACKIndexingO","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Add a header name\/value pair to the block, replacing any previous values for the"},{"type":"text","text":" "},{"type":"text","text":"same header name that are already in the block."}],"title":"replaceOrAdd(name:value:indexing:)"}}}
{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}]}],"kind":"declarations"},{"content":[{"text":"Overview","level":2,"anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"This encoder functions as an accumulator: each encode operation will append"},{"type":"text","text":" "},{"type":"text","text":"bytes to a buffer maintained by the encoder, which must be cleared using"},{"type":"text","text":" "},{"type":"codeVoice","code":"reset()"},{"type":"text","text":" before the encode can be re-used. It maintains a header table for"},{"type":"text","text":" "},{"type":"text","text":"outbound header indexing, and will update the header table as described in"},{"type":"text","text":" "},{"type":"text","text":"RFC 7541, appending and evicting items as described there."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackencoder"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"roleHeading":"Structure","role":"symbol","modules":[{"name":"NIOHPACK"}],"externalID":"s:8NIOHPACK12HPACKEncoderV","title":"HPACKEncoder","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HPACKEncoder","kind":"identifier"}],"navigatorTitle":[{"text":"HPACKEncoder","kind":"identifier"}],"symbolKind":"struct"},"abstract":[{"text":"An ","type":"text"},{"code":"HPACKEncoder","type":"codeVoice"},{"text":" maintains its own dynamic header table and uses that to","type":"text"},{"text":" ","type":"text"},{"text":"encode HTTP headers to an internal byte buffer.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK"]]},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"type":"conformsTo","kind":"relationships","title":"Conforms To"}],"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/HeaderDefinition"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/allowedDynamicTableSize","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/dynamicTableSize","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/maximumDynamicTableSize","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/useHuffmanEncoding"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(header:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(headers:)-10j99","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(headers:)-4nua9","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(headers:)-9ojkj","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/appendNeverIndexed(header:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/appendNonIndexed(header:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/beginEncoding(allocator:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/encode(headers:to:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/endEncoding()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/setDynamicTableSize(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/defaultDynamicTableSize"],"title":"Type Properties"}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/append(headers:)-9ojkj":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"append(headers:)","role":"symbol","abstract":[{"text":"Appends headers with their specified indexability.","type":"text"}],"type":"topic","url":"\/documentation\/niohpack\/hpackencoder\/append(headers:)-9ojkj","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(headers:)-9ojkj"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/appendNeverIndexed(header:value:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendNeverIndexed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"header","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"appendNeverIndexed(header:value:)","role":"symbol","abstract":[{"text":"Appends a header that is ","type":"text"},{"inlineContent":[{"type":"text","text":"never"}],"type":"emphasis"},{"text":" indexed, preventing even rewriting proxies from doing so.","type":"text"}],"type":"topic","url":"\/documentation\/niohpack\/hpackencoder\/appendneverindexed(header:value:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/appendNeverIndexed(header:value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)":{"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV","text":"ByteBufferAllocator","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"useHuffmanEncoding","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"maxDynamicTableSize","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"init(allocator:useHuffmanEncoding:maxDynamicTableSize:)","role":"symbol","abstract":[{"text":"Initializer and returns a new HPACK encoder.","type":"text"}],"type":"topic","url":"\/documentation\/niohpack\/hpackencoder\/init(allocator:usehuffmanencoding:maxdynamictablesize:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/init(allocator:useHuffmanEncoding:maxDynamicTableSize:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/beginEncoding(allocator:)":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/beginencoding(allocator:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/beginEncoding(allocator:)","abstract":[{"text":"Sets up the encoder to begin encoding a new header block.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"beginEncoding","kind":"identifier"},{"text":"(","kind":"text"},{"text":"allocator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ByteBufferAllocator","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore19ByteBufferAllocatorV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"beginEncoding(allocator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/useHuffmanEncoding":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/usehuffmanencoding","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/useHuffmanEncoding","abstract":[{"text":"Whether to use Huffman encoding.","type":"text"}],"fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"useHuffmanEncoding","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"}],"title":"useHuffmanEncoding"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/endEncoding()":{"kind":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/endencoding()","abstract":[{"text":"Finishes encoding the current header block and returns the resulting buffer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"endEncoding","kind":"identifier"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"ByteBuffer","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV"}],"title":"endEncoding()","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/endEncoding()"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/HeaderDefinition":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/headerdefinition","kind":"symbol","navigatorTitle":[{"text":"HeaderDefinition","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/HeaderDefinition","abstract":[],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HeaderDefinition","kind":"identifier"}],"title":"HPACKEncoder.HeaderDefinition"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/maximumDynamicTableSize":{"type":"topic","role":"symbol","abstract":[{"type":"text","text":"The hard maximum size of the dynamic header table, set via an HTTP\/2"},{"type":"text","text":" "},{"type":"text","text":"SETTINGS frame."}],"url":"\/documentation\/niohpack\/hpackencoder\/maximumdynamictablesize","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/maximumDynamicTableSize","title":"maximumDynamicTableSize","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"maximumDynamicTableSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/setDynamicTableSize(_:)":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/setdynamictablesize(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/setDynamicTableSize(_:)","abstract":[{"text":"Sets the maximum size for the dynamic table and encodes the new value","type":"text"},{"text":" ","type":"text"},{"text":"at the start of the current packed header block to send to the peer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setDynamicTableSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"setDynamicTableSize(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/allowedDynamicTableSize":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/alloweddynamictablesize","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/allowedDynamicTableSize","abstract":[{"text":"The current maximum size to which the dynamic header table may grow.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"allowedDynamicTableSize","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"title":"allowedDynamicTableSize"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/append(headers:)-10j99":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/append(headers:)-10j99","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(headers:)-10j99","abstract":[{"text":"Appends a set of headers with their associated indexability.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"append(headers:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"navigatorTitle":[{"kind":"identifier","text":"HPACKEncoder"}],"title":"HPACKEncoder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder","url":"\/documentation\/niohpack\/hpackencoder","abstract":[{"type":"text","text":"An "},{"code":"HPACKEncoder","type":"codeVoice"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"type":"text","text":"encode HTTP headers to an internal byte buffer."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/encode(headers:to:)":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/encode(headers:to:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/encode(headers:to:)","abstract":[{"text":"A one-shot encoder that writes to a provided buffer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"encode(headers:to:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/append(headers:)-4nua9":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(headers:)-4nua9","kind":"symbol","title":"append(headers:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"S","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"S","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","abstract":[{"text":"Appends() headers in the default fashion: indexed if possible, literal+indexable if not.","type":"text"}],"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/append(headers:)-4nua9"},"doc://co.pointfree.VaporRouting/s8SendableP":{"type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","title":"Swift.Sendable"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/appendNonIndexed(header:value:)":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/appendnonindexed(header:value:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/appendNonIndexed(header:value:)","abstract":[{"text":"Appends a header that is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"text":" to be entered into the dynamic header table, but allows that","type":"text"},{"text":" ","type":"text"},{"text":"stipulation to be overriden by a proxy server\/rewriter.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"appendNonIndexed","kind":"identifier"},{"text":"(","kind":"text"},{"text":"header","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"appendNonIndexed(header:value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/defaultDynamicTableSize":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/defaultDynamicTableSize","title":"defaultDynamicTableSize","kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"defaultDynamicTableSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/niohpack\/hpackencoder\/defaultdynamictablesize","abstract":[{"type":"text","text":"The default size of the encoder’s dynamic header table."}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/dynamicTableSize":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/dynamicTableSize","title":"dynamicTableSize","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"dynamicTableSize"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}],"url":"\/documentation\/niohpack\/hpackencoder\/dynamictablesize","abstract":[{"type":"text","text":"The current size of the dynamic table."}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","title":"NIOHPACK","type":"topic","url":"\/documentation\/niohpack"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/append(header:value:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/append(header:value:)","title":"append(header:value:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"("},{"kind":"externalParam","text":"header"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"url":"\/documentation\/niohpack\/hpackencoder\/append(header:value:)","abstract":[{"type":"text","text":"Appends a header\/value pair, using indexed names\/values if possible. If no indexed pair is available,"},{"type":"text","text":" "},{"type":"text","text":"it will use an indexed header and literal value, or a literal header and value. The name\/value pair"},{"type":"text","text":" "},{"type":"text","text":"will be indexed for future use."}],"type":"topic","role":"symbol"}}}
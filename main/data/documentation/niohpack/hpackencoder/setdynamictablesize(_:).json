{"metadata":{"modules":[{"name":"NIOHPACK"}],"title":"setDynamicTableSize(_:)","externalID":"s:8NIOHPACK12HPACKEncoderV19setDynamicTableSizeyySiKF","roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setDynamicTableSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"symbolKind":"method"},"abstract":[{"type":"text","text":"Sets the maximum size for the dynamic table and encodes the new value"},{"type":"text","text":" "},{"type":"text","text":"at the start of the current packed header block to send to the peer."}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setDynamicTableSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"size","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The new maximum size for the dynamic header table."}],"type":"paragraph"}],"name":"size"}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"content":[{"type":"paragraph","inlineContent":[{"text":"If the encoder is currently in use, or if the requested size","type":"text"},{"text":" ","type":"text"},{"text":"exceeds the maximum value negotiated with the peer.","type":"text"}]}],"type":"aside","name":"Throws","style":"note"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/setDynamicTableSize(_:)"},"variants":[{"paths":["\/documentation\/niohpack\/hpackencoder\/setdynamictablesize(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/setDynamicTableSize(_:)":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/setdynamictablesize(_:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/setDynamicTableSize(_:)","abstract":[{"text":"Sets the maximum size for the dynamic table and encodes the new value","type":"text"},{"text":" ","type":"text"},{"text":"at the start of the current packed header block to send to the peer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setDynamicTableSize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"setDynamicTableSize(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"navigatorTitle":[{"kind":"identifier","text":"HPACKEncoder"}],"title":"HPACKEncoder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder","url":"\/documentation\/niohpack\/hpackencoder","abstract":[{"type":"text","text":"An "},{"code":"HPACKEncoder","type":"codeVoice"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"type":"text","text":"encode HTTP headers to an internal byte buffer."}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","title":"NIOHPACK","type":"topic","url":"\/documentation\/niohpack"}}}
{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"encode"},{"kind":"text","text":"("},{"kind":"externalParam","text":"headers"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","kind":"typeIdentifier","text":"HPACKHeaders"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":" "},{"kind":"internalParam","text":"buffer"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","kind":"typeIdentifier","text":"ByteBuffer"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"type":"heading","text":"Discussion","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In general this encoding mechanism is more efficient than the incremental one."}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohpack\/hpackencoder\/encode(headers:to:)"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/encode(headers:to:)","interfaceLanguage":"swift"},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"title":"encode(headers:to:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKHeaders","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"role":"symbol","externalID":"s:8NIOHPACK12HPACKEncoderV6encode7headers2toyAA12HPACKHeadersV_7NIOCore10ByteBufferVztKF","modules":[{"name":"NIOHPACK"}],"roleHeading":"Instance Method","symbolKind":"method"},"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder"]]},"abstract":[{"text":"A one-shot encoder that writes to a provided buffer.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder/encode(headers:to:)":{"role":"symbol","url":"\/documentation\/niohpack\/hpackencoder\/encode(headers:to:)","kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder\/encode(headers:to:)","abstract":[{"text":"A one-shot encoder that writes to a provided buffer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"encode","kind":"identifier"},{"text":"(","kind":"text"},{"text":"headers","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HPACKHeaders","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHPACK12HPACKHeadersV"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"title":"encode(headers:to:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK":{"role":"collection","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK","title":"NIOHPACK","type":"topic","url":"\/documentation\/niohpack"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKHeaders":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HPACKHeaders"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKHeaders"}],"abstract":[{"type":"text","text":"Very similar to "},{"code":"NIOHTTP1.HTTPHeaders","type":"codeVoice"},{"type":"text","text":", but with extra data for storing indexing"},{"type":"text","text":" "},{"type":"text","text":"information."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKHeaders","title":"HPACKHeaders","type":"topic","url":"\/documentation\/niohpack\/hpackheaders"},"doc://co.pointfree.VaporRouting/documentation/NIOHPACK/HPACKEncoder":{"navigatorTitle":[{"kind":"identifier","text":"HPACKEncoder"}],"title":"HPACKEncoder","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"HPACKEncoder"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHPACK\/HPACKEncoder","url":"\/documentation\/niohpack\/hpackencoder","abstract":[{"type":"text","text":"An "},{"code":"HPACKEncoder","type":"codeVoice"},{"type":"text","text":" maintains its own dynamic header table and uses that to"},{"type":"text","text":" "},{"type":"text","text":"encode HTTP headers to an internal byte buffer."}],"type":"topic"}}}
{"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler"],"kind":"relationships"}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"navigatorTitle":[{"kind":"identifier","text":"DebugOutboundEventsHandler"}],"roleHeading":"Class","modules":[{"name":"NIOExtras"}],"symbolKind":"class","title":"DebugOutboundEventsHandler","role":"symbol","externalID":"s:9NIOExtras26DebugOutboundEventsHandlerC"},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/debugoutboundeventshandler"]}],"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"type":"text","text":"overridable by providing your own closure for custom logging. See "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","isActive":true},{"type":"text","text":" for inbound events."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"]]},"schemaVersion":{"major":0,"minor":3,"patch":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/init(logger:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/bind(context:to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/close(context:mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/connect(context:to:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/flush(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/read(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/register(context:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/triggerUserOutboundEvent(context:event:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/OutboundOut"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/defaultPrint(event:in:)"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/ChannelOutboundHandler-Implementations"],"generated":true}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/read(context:)":{"type":"topic","title":"read(context:)","kind":"symbol","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/read(context:)","abstract":[{"type":"text","text":"Logs "},{"type":"codeVoice","code":"Event.read"},{"type":"text","text":" to "},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" perform a read when data is ready. The read operation will signal that we are ready to read more data.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/read(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/init(logger:)":{"title":"init(logger:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"text":"logger","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras26DebugOutboundEventsHandlerC"},{"text":".","kind":"text"},{"text":"Event","kind":"typeIdentifier","preciseIdentifier":"s:9NIOExtras26DebugOutboundEventsHandlerC5EventO"},{"text":", ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":") -> ())","kind":"text"}],"abstract":[{"type":"text","text":"Initialiser."}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/init(logger:)","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/init(logger:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/OutboundIn":{"type":"topic","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"role":"symbol","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"url":"\/documentation\/nioextras\/debugoutboundeventshandler\/outboundin","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/OutboundIn","title":"DebugOutboundEventsHandler.OutboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"url":"\/documentation\/nioextras\/debuginboundeventshandler","title":"DebugInboundEventsHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugInboundEventsHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DebugInboundEventsHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that prints all inbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"text":"overridable by providing your own closure for custom logging. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},{"text":" for outbound events.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/defaultPrint(event:in:)":{"kind":"symbol","title":"defaultPrint(event:in:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/defaultPrint(event:in:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"defaultPrint","kind":"identifier"},{"text":"(","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:9NIOExtras26DebugOutboundEventsHandlerC","text":"DebugOutboundEventsHandler","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:9NIOExtras26DebugOutboundEventsHandlerC5EventO","text":"Event","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","abstract":[{"text":"Print textual event description to stdout.","type":"text"}],"type":"topic","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/defaultprint(event:in:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"url":"\/documentation\/nioextras\/debugoutboundeventshandler","title":"DebugOutboundEventsHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","isActive":true},{"text":" for inbound events.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/flush(context:)":{"title":"flush(context:)","abstract":[{"text":"Logs ","type":"text"},{"code":"Event.flush","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" flush all pending writes. The flush operation will try to flush out all previous written messages","type":"text"},{"text":" ","type":"text"},{"text":"that are pending.","type":"text"}],"type":"topic","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/flush(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/flush(context:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","role":"collection","type":"topic","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/write(context:data:promise:)":{"title":"write(context:data:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"type":"text","text":"Logs "},{"type":"codeVoice","code":"Event.data"},{"type":"text","text":" to "},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request a write operation.","type":"text"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/write(context:data:promise:)","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/write(context:data:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/ChannelHandler-Implementations":{"title":"ChannelHandler Implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/ChannelHandler-Implementations","role":"collectionGroup","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/channelhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/OutboundOut":{"title":"DebugOutboundEventsHandler.OutboundOut","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/OutboundOut","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/outboundout"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/close(context:mode:promise:)":{"type":"topic","title":"close(context:mode:promise:)","kind":"symbol","role":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/close(context:mode:promise:)","abstract":[{"type":"text","text":"Logs "},{"type":"codeVoice","code":"Event.close"},{"type":"text","text":" to "},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" close itself down`.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/close(context:mode:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/bind(context:to:promise:)":{"url":"\/documentation\/nioextras\/debugoutboundeventshandler\/bind(context:to:promise:)","type":"topic","abstract":[{"text":"Logs ","type":"text"},{"code":"Event.bind","type":"codeVoice"},{"text":" to ","type":"text"},{"type":"codeVoice","code":"logger"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" bind to a specific "},{"type":"codeVoice","code":"SocketAddress"},{"type":"text","text":"."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"role":"symbol","title":"bind(context:to:promise:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/bind(context:to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/register(context:promise:)":{"type":"topic","kind":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/register(context:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"register","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"text":"Logs ","type":"text"},{"code":"Event.register","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" register itself for I\/O events with its ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/register(context:promise:)","role":"symbol","title":"register(context:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/Event":{"type":"topic","navigatorTitle":[{"text":"Event","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/event","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Event"}],"abstract":[{"text":"All possible outbound events which could occur.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/Event","role":"symbol","title":"DebugOutboundEventsHandler.Event"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/connect(context:to:promise:)":{"type":"topic","kind":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/connect(context:to:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"connect","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"to","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SocketAddress","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"abstract":[{"text":"Logs ","type":"text"},{"code":"Event.connect","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" connect to a given ","type":"text"},{"code":"SocketAddress","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/connect(context:to:promise:)","role":"symbol","title":"connect(context:to:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/triggerUserOutboundEvent(context:event:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/triggerUserOutboundEvent(context:event:promise:)","abstract":[{"type":"text","text":"Logs "},{"type":"codeVoice","code":"Event.triggerUserOutboundEvent"},{"type":"text","text":" to "},{"type":"codeVoice","code":"logger"},{"type":"text","text":" "},{"text":"Called when an user outbound event is triggered.","type":"text"}],"type":"topic","title":"triggerUserOutboundEvent(context:event:promise:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"triggerUserOutboundEvent"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/triggeruseroutboundevent(context:event:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/ChannelOutboundHandler-Implementations","abstract":[],"type":"topic","title":"ChannelOutboundHandler Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/channeloutboundhandler-implementations"}}}
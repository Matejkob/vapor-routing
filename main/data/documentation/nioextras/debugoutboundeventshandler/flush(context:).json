{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/flush(context:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"]]},"metadata":{"modules":[{"name":"NIOExtras"}],"externalID":"s:9NIOExtras26DebugOutboundEventsHandlerC5flush7contexty7NIOCore07ChannelE7ContextC_tF","title":"flush(context:)","symbolKind":"method","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":")","kind":"text"}],"roleHeading":"Instance Method"},"abstract":[{"type":"text","text":"Logs "},{"type":"codeVoice","code":"Event.flush"},{"type":"text","text":" to "},{"type":"codeVoice","code":"logger"},{"type":"text","text":" "},{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" flush all pending writes. The flush operation will try to flush out all previous written messages"},{"type":"text","text":" "},{"type":"text","text":"that are pending."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioextras\/debugoutboundeventshandler\/flush(context:)"]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flush"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext"},{"kind":"text","text":")"}]}]},{"parameters":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" belongs to.","type":"text"}],"type":"paragraph"}],"name":"context"}],"kind":"parameters"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"url":"\/documentation\/nioextras\/debugoutboundeventshandler","title":"DebugOutboundEventsHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","isActive":true},{"text":" for inbound events.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","role":"collection","type":"topic","title":"NIOExtras","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"url":"\/documentation\/nioextras\/debuginboundeventshandler","title":"DebugInboundEventsHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugInboundEventsHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DebugInboundEventsHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that prints all inbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"text":"overridable by providing your own closure for custom logging. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},{"text":" for outbound events.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler/flush(context:)":{"title":"flush(context:)","abstract":[{"text":"Logs ","type":"text"},{"code":"Event.flush","type":"codeVoice"},{"text":" to ","type":"text"},{"code":"logger","type":"codeVoice"},{"text":" ","type":"text"},{"text":"Called to request that the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" flush all pending writes. The flush operation will try to flush out all previous written messages","type":"text"},{"text":" ","type":"text"},{"text":"that are pending.","type":"text"}],"type":"topic","url":"\/documentation\/nioextras\/debugoutboundeventshandler\/flush(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler\/flush(context:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}]}}}
{"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerUpgradeHandler","kind":"identifier"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"overview","level":2,"text":"Overview"},{"inlineContent":[{"text":"This handler behaves a bit differently from its Netty counterpart because it does not allow upgrade","type":"text"},{"text":" ","type":"text"},{"text":"on any request but the first on a connection. This is primarily to handle clients that pipeline: itâ€™s","type":"text"},{"text":" ","type":"text"},{"text":"sufficiently difficult to ensure that the upgrade happens at a safe time while dealing with pipelined","type":"text"},{"text":" ","type":"text"},{"text":"requests that we choose to punt on it entirely and not allow it. As it happens this is mostly fine:","type":"text"},{"text":" ","type":"text"},{"text":"the odds of someone needing to upgrade midway through the lifetime of a connection are very low.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade.","type":"text"},{"text":" ","type":"text"},{"text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of","type":"text"},{"text":" ","type":"text"},{"text":"whether the upgrade succeeded or not.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"kind":"symbol","relationshipsSections":[{"title":"Conforms To","kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"]}],"metadata":{"title":"HTTPServerUpgradeHandler","role":"symbol","externalID":"s:8NIOHTTP124HTTPServerUpgradeHandlerC","navigatorTitle":[{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"roleHeading":"Class","modules":[{"name":"NIOHTTP1"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}],"symbolKind":"class"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/removeHandler(context:removalToken:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/OutboundOut"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelInboundHandler-Implementations"]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/httpserverupgradehandler"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)":{"type":"topic","abstract":[{"text":"Create a ","type":"text"},{"code":"HTTPServerUpgradeHandler","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","kind":"typeIdentifier","text":"HTTPServerProtocolUpgrader"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpEncoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC","kind":"typeIdentifier","text":"HTTPResponseEncoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extraHTTPHandlers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier","text":"RemovableChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/channelRead(context:data:)":{"title":"channelRead(context:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":")","kind":"text"}],"abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/channelRead(context:data:)","role":"symbol","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelread(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/OutboundOut":{"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/outboundout","title":"HTTPServerUpgradeHandler.OutboundOut","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/OutboundOut","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/InboundIn":{"title":"HTTPServerUpgradeHandler.InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundIn","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/inboundin","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/InboundOut":{"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/inboundout","title":"HTTPServerUpgradeHandler.InboundOut","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" in the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"role":"symbol","type":"topic","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/InboundOut","kind":"symbol"},"doc://co.pointfree.VaporRouting/s8SendableP":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","title":"Swift.Sendable","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"title":"RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler":{"url":"\/documentation\/niohttp1\/httpserverupgradehandler","title":"HTTPServerUpgradeHandler","type":"topic","navigatorTitle":[{"text":"HTTPServerUpgradeHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","kind":"symbol","role":"symbol","abstract":[{"text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade.","type":"text"},{"text":" ","type":"text"},{"text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of","type":"text"},{"text":" ","type":"text"},{"text":"whether the upgrade succeeded or not.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelHandler-Implementations","title":"ChannelHandler Implementations","kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelhandler-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/ChannelInboundHandler-Implementations":{"url":"\/documentation\/niohttp1\/httpserverupgradehandler\/channelinboundhandler-implementations","title":"ChannelInboundHandler Implementations","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/ChannelInboundHandler-Implementations","kind":"article","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/removeHandler(context:removalToken:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/removeHandler(context:removalToken:)","title":"removeHandler(context:removalToken:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeHandler"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"removalToken"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC12RemovalTokenV","text":"RemovalToken"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/removehandler(context:removaltoken:)","abstract":[{"text":"Ask the receiving ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" to remove itself from the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" as soon as possible.","type":"text"},{"text":" ","type":"text"},{"text":"The receiving ","type":"text"},{"code":"RemovableChannelHandler","type":"codeVoice"},{"text":" may elect to remove itself sometime after this method call, rather than","type":"text"},{"text":" ","type":"text"},{"text":"immediately, but if it does so it must take the necessary precautions to handle events arriving between the","type":"text"},{"text":" ","type":"text"},{"text":"invocation of this method and the call to ","type":"text"},{"code":"ChannelHandlerContext.removeHandler","type":"codeVoice"},{"text":" that triggers the actual","type":"text"},{"text":" ","type":"text"},{"text":"removal.","type":"text"}]}}}
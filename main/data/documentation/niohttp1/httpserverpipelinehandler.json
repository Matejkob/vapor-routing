{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/errorCaught(context:error:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/read(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/userInboundEventTriggered(context:event:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/RemovableChannelHandler-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/niohttp1\/httpserverpipelinehandler"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","title":"HTTPServerPipelineHandler","externalID":"s:8NIOHTTP125HTTPServerPipelineHandlerC","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerPipelineHandler"}],"modules":[{"name":"NIOHTTP1"}],"navigatorTitle":[{"kind":"identifier","text":"HTTPServerPipelineHandler"}],"roleHeading":"Class"},"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerPipelineHandler","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"inlineContent":[{"type":"text","text":"This handler ensures that HTTP server pipelines only process one request at a time."},{"type":"text","text":" "},{"type":"text","text":"This is the safest way for pipelining-unaware code to operate, as it ensures that"},{"type":"text","text":" "},{"type":"text","text":"mutation of any shared server state is not parallelised, and that responses are always"},{"type":"text","text":" "},{"type":"text","text":"sent for each request in turn. In almost all cases this is the behaviour that a"},{"type":"text","text":" "},{"type":"text","text":"pipeline will want. This is achieved without doing too much buffering by preventing"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" from reading from the socket until a complete response is processed,"},{"type":"text","text":" "},{"type":"text","text":"ensuring that a malicious client is not capable of overwhelming a server by shoving"},{"type":"text","text":" "},{"type":"text","text":"an enormous amount of data down the "},{"type":"codeVoice","code":"Channel"},{"text":" while a server is processing a","type":"text"},{"text":" ","type":"text"},{"text":"slow response.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"See "},{"isActive":true,"identifier":"https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2","type":"reference"},{"type":"text","text":" for"},{"type":"text","text":" "},{"type":"text","text":"more details on safely handling HTTP pipelining."}],"type":"paragraph"},{"inlineContent":[{"text":"In addition to handling the request buffering, this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" is aware of","type":"text"},{"text":" ","type":"text"},{"text":"TCP half-close. While there are very few HTTP clients that are capable of TCP","type":"text"},{"text":" ","type":"text"},{"text":"half-close, clients that are not HTTP specific (e.g. ","type":"text"},{"type":"codeVoice","code":"netcat"},{"text":") may trigger a TCP","type":"text"},{"text":" ","type":"text"},{"text":"half-close. Having this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" be aware of TCP half-close makes it easier","type":"text"},{"text":" ","type":"text"},{"text":"to build HTTP servers that are resilient to this kind of behaviour.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"The TCP half-close handling is done by buffering the half-close notification along","type":"text"},{"text":" ","type":"text"},{"text":"with the HTTP request parts. The half-close notification will be delivered in order","type":"text"},{"text":" ","type":"text"},{"text":"with the rest of the reads. If the half-close occurs either before a request is received","type":"text"},{"text":" ","type":"text"},{"text":"or during a request body upload, it will be delivered immediately. If a half-close is","type":"text"},{"text":" ","type":"text"},{"text":"received immediately after ","type":"text"},{"code":"HTTPServerRequestPart.end","type":"codeVoice"},{"text":", it will also be passed along","type":"text"},{"text":" ","type":"text"},{"text":"immediately, allowing this signal to be seen by the HTTP server as early as possible.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that handles HTTP pipelining by buffering inbound data until a"},{"type":"text","text":" "},{"type":"text","text":"response has been sent."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/errorCaught(context:error:)":{"title":"errorCaught(context:error:)","abstract":[{"text":"An error was encountered earlier in the inbound ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/errorCaught(context:error:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"errorCaught","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"error","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/errorcaught(context:error:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelInboundHandler-Implementations":{"title":"ChannelInboundHandler Implementations","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelInboundHandler-Implementations","role":"collectionGroup","kind":"article","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelinboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/userInboundEventTriggered(context:event:)":{"title":"userInboundEventTriggered(context:event:)","abstract":[{"text":"Called when a user inbound event has been triggered.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/userInboundEventTriggered(context:event:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"userInboundEventTriggered","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"event","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/userinboundeventtriggered(context:event:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/write(context:data:promise:)":{"title":"write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/write(context:data:promise:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"kind":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/write(context:data:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/OutboundOut":{"title":"HTTPServerPipelineHandler.OutboundOut","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/outboundout","role":"symbol","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelOutboundHandler-Implementations":{"title":"ChannelOutboundHandler Implementations","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channeloutboundhandler-implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/channelRead(context:data:)":{"title":"channelRead(context:data:)","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelread(context:data:)","role":"symbol","type":"topic","kind":"symbol","abstract":[{"text":"Called when some data has been read from the remote peer.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelRead(context:data:)"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/InboundOut":{"title":"HTTPServerPipelineHandler.InboundOut","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/inboundout","role":"symbol","navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/RemovableChannelHandler-Implementations":{"title":"RemovableChannelHandler Implementations","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/removablechannelhandler-implementations","role":"collectionGroup","type":"topic","kind":"article","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/RemovableChannelHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/InboundIn":{"role":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/inboundin","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/InboundIn","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"kind":"symbol","title":"HTTPServerPipelineHandler.InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundIn","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"InboundIn","kind":"identifier"}]},"https://tools.ietf.org/html/rfc7230#section-6.3.2":{"url":"https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2","identifier":"https:\/\/tools.ietf.org\/html\/rfc7230#section-6.3.2","title":"RFC 7320 Section 6.3.2","type":"link","titleInlineContent":[{"type":"text","text":"RFC 7320 Section 6.3.2"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/ChannelHandler-Implementations":{"role":"collectionGroup","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/ChannelHandler-Implementations","abstract":[],"kind":"article","title":"ChannelHandler Implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/channelInactive(context:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInactive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"type":"topic","role":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/channelinactive(context:)","title":"channelInactive(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/channelInactive(context:)","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has become inactive and is no longer able to send and receive data`."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"title":"RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerPipelineHandler"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPServerPipelineHandler"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler","abstract":[{"type":"text","text":"A "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that handles HTTP pipelining by buffering inbound data until a"},{"type":"text","text":" "},{"type":"text","text":"response has been sent."}],"title":"HTTPServerPipelineHandler","type":"topic","url":"\/documentation\/niohttp1\/httpserverpipelinehandler"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/handlerRemoved(context:)":{"role":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/handlerremoved(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/handlerRemoved(context:)","abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is removed from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"kind":"symbol","title":"handlerRemoved(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/read(context:)":{"role":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/read(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/read(context:)","abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" perform a read when data is ready. The read operation will signal that we are ready to read more data."}],"kind":"symbol","title":"read(context:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"read","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/OutboundIn":{"kind":"symbol","role":"symbol","abstract":[{"text":"The type of the outbound data which is wrapped in ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/outboundin","title":"HTTPServerPipelineHandler.OutboundIn","navigatorTitle":[{"text":"OutboundIn","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundIn","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/OutboundIn","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerPipelineHandler/init()":{"abstract":[],"fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"type":"topic","title":"init()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerPipelineHandler\/init()","kind":"symbol","url":"\/documentation\/niohttp1\/httpserverpipelinehandler\/init()"}}}
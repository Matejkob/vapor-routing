{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapOutboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundIn","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator\/ChannelOutboundHandler-Implementations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"symbolKind":"method","role":"symbol","externalID":"s:7NIOCore22ChannelOutboundHandlerPAAE06unwrapC2Iny0cF0QzAA6NIOAnyVF::SYNTHESIZED::s:8NIOHTTP130NIOHTTPRequestHeadersValidatorC","modules":[{"name":"NIOHTTP1"}],"roleHeading":"Instance Method","title":"unwrapOutboundIn(_:)","extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"unwrapOutboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundIn","kind":"typeIdentifier"}]},"variants":[{"paths":["\/documentation\/niohttp1\/niohttprequestheadersvalidator\/unwrapoutboundin(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator\/unwrapOutboundIn(_:)"},"sections":[],"abstract":[{"type":"text","text":"Unwrap the provided "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":" that was passed to "},{"code":"write","type":"codeVoice"},{"type":"text","text":"."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPRequestHeadersValidator":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPRequestHeadersValidator","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator","title":"NIOHTTPRequestHeadersValidator","kind":"symbol","navigatorTitle":[{"text":"NIOHTTPRequestHeadersValidator","kind":"identifier"}],"url":"\/documentation\/niohttp1\/niohttprequestheadersvalidator","role":"symbol","abstract":[{"type":"text","text":"A ChannelHandler to validate that outbound request headers are spec-compliant."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPRequestHeadersValidator/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator\/ChannelOutboundHandler-Implementations","role":"collectionGroup","title":"ChannelOutboundHandler Implementations","kind":"article","abstract":[],"type":"topic","url":"\/documentation\/niohttp1\/niohttprequestheadersvalidator\/channeloutboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPRequestHeadersValidator/unwrapOutboundIn(_:)":{"url":"\/documentation\/niohttp1\/niohttprequestheadersvalidator\/unwrapoutboundin(_:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPRequestHeadersValidator\/unwrapOutboundIn(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unwrapOutboundIn","kind":"identifier"},{"text":"(","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OutboundIn","kind":"typeIdentifier"}],"title":"unwrapOutboundIn(_:)","abstract":[{"text":"Unwrap the provided ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" that was passed to ","type":"text"},{"type":"codeVoice","code":"write"},{"text":".","type":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"role":"symbol","url":"\/documentation\/niocore\/nioany","title":"NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","type":"topic","abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" type, similar to Swiftâ€™s builtin "},{"type":"codeVoice","code":"Any"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" the overhead of ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":", ","type":"text"},{"type":"codeVoice","code":"FileRegion"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" just like ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" will contain them within an existential container.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}]}}}
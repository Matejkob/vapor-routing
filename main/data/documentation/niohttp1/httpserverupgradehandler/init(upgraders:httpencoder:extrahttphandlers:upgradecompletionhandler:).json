{"abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"HTTPServerUpgradeHandler"},{"type":"text","text":"."}],"kind":"symbol","variants":[{"paths":["\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler"]]},"metadata":{"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"text":": [","kind":"text"},{"text":"HTTPServerProtocolUpgrader","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP"},{"text":"], ","kind":"text"},{"text":"httpEncoder","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"HTTPResponseEncoder","kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC"},{"text":", ","kind":"text"},{"text":"extraHTTPHandlers","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"RemovableChannelHandler","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP"},{"text":"], ","kind":"text"},{"text":"upgradeCompletionHandler","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":") -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"externalID":"s:8NIOHTTP124HTTPServerUpgradeHandlerC9upgraders11httpEncoder17extraHTTPHandlers017upgradeCompletionD0ACSayAA0B16ProtocolUpgrader_pG_AA012HTTPResponseG0CSay7NIOCore016RemovableChannelD0_pGyAL0qD7ContextCctcfc","title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","modules":[{"name":"NIOHTTP1"}],"roleHeading":"Initializer","symbolKind":"init"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","text":"HTTPServerProtocolUpgrader"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpEncoder"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseEncoder","text":"HTTPResponseEncoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extraHTTPHandlers"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","text":"RemovableChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"upgraders","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"All "},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" objects that this pipeline will be able"},{"type":"text","text":" "},{"type":"text","text":"to use to handle HTTP upgrade."}]}]},{"name":"httpEncoder","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"HTTPResponseEncoder"},{"type":"text","text":" encoding responses from this handler and which will"},{"type":"text","text":" "},{"type":"text","text":"be removed from the pipeline once the upgrade response is sent. This is used to ensure"},{"type":"text","text":" "},{"type":"text","text":"that the pipeline will be in a clean state after upgrade."}]}]},{"name":"extraHTTPHandlers","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Any other handlers that are directly related to handling HTTP. At the very least"},{"type":"text","text":" "},{"type":"text","text":"this should include the "},{"type":"codeVoice","code":"HTTPDecoder"},{"type":"text","text":", but should also include any other handler that cannot tolerate"},{"type":"text","text":" "},{"type":"text","text":"receiving non-HTTP data."}]}]},{"name":"upgradeCompletionHandler","content":[{"inlineContent":[{"type":"text","text":"A block that will be fired when HTTP upgrade is complete."}],"type":"paragraph"}]}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler":{"url":"\/documentation\/niohttp1\/httpserverupgradehandler","title":"HTTPServerUpgradeHandler","type":"topic","navigatorTitle":[{"text":"HTTPServerUpgradeHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler","kind":"symbol","role":"symbol","abstract":[{"text":"A server-side channel handler that receives HTTP requests and optionally performs a HTTP-upgrade.","type":"text"},{"text":" ","type":"text"},{"text":"Removes itself from the channel pipeline after the first inbound request on the connection, regardless of","type":"text"},{"text":" ","type":"text"},{"text":"whether the upgrade succeeded or not.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPServerUpgradeHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerUpgradeHandler/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)":{"type":"topic","abstract":[{"text":"Create a ","type":"text"},{"code":"HTTPServerUpgradeHandler","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgraders"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:8NIOHTTP126HTTPServerProtocolUpgraderP","kind":"typeIdentifier","text":"HTTPServerProtocolUpgrader"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"httpEncoder"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8NIOHTTP119HTTPResponseEncoderC","kind":"typeIdentifier","text":"HTTPResponseEncoder"},{"kind":"text","text":", "},{"kind":"externalParam","text":"extraHTTPHandlers"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:7NIOCore23RemovableChannelHandlerP","kind":"typeIdentifier","text":"RemovableChannelHandler"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"upgradeCompletionHandler"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","url":"\/documentation\/niohttp1\/httpserverupgradehandler\/init(upgraders:httpencoder:extrahttphandlers:upgradecompletionhandler:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerUpgradeHandler\/init(upgraders:httpEncoder:extraHTTPHandlers:upgradeCompletionHandler:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"title":"RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPResponseEncoder":{"url":"\/documentation\/niohttp1\/httpresponseencoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"HTTPResponseEncoder"}],"title":"HTTPResponseEncoder","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"HTTPResponseEncoder"}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPResponseEncoder","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" that can serialize HTTP responses."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPServerProtocolUpgrader":{"kind":"symbol","url":"\/documentation\/niohttp1\/httpserverprotocolupgrader","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPServerProtocolUpgrader","type":"topic","title":"HTTPServerProtocolUpgrader","abstract":[{"type":"text","text":"An object that implements "},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"text":"a protocol on a server-side channel.","type":"text"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"HTTPServerProtocolUpgrader","kind":"identifier"}],"navigatorTitle":[{"text":"HTTPServerProtocolUpgrader","kind":"identifier"}],"role":"symbol"}}}
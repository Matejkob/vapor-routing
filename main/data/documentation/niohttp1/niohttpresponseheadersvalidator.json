{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPResponseHeadersValidator"}]}]},{"content":[{"level":2,"anchor":"overview","text":"Overview","type":"heading"},{"inlineContent":[{"type":"text","text":"The HTTP RFCs constrain the bytes that are validly present within a HTTP\/1.1 header block."},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator"},{"type":"text","text":" polices this constraint and ensures that only valid header blocks"},{"type":"text","text":" "},{"type":"text","text":"are emitted on the network. If a header block is invalid, then "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator"},{"type":"text","text":" "},{"type":"text","text":"will send a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPParserError\/invalidHeaderToken"},{"type":"text","text":"."}],"type":"paragraph"},{"inlineContent":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator"},{"type":"text","text":" will also valid that the HTTP trailers are within specification,"},{"type":"text","text":" "},{"type":"text","text":"if they are present."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpresponseheadersvalidator"]}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/init()"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/OutboundOut"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/RemovableChannelHandler-Implementations"],"generated":true}],"relationshipsSections":[{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"kind":"relationships","type":"conformsTo"}],"metadata":{"title":"NIOHTTPResponseHeadersValidator","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPResponseHeadersValidator"}],"externalID":"s:8NIOHTTP131NIOHTTPResponseHeadersValidatorC","role":"symbol","roleHeading":"Class","symbolKind":"class","modules":[{"name":"NIOHTTP1"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPResponseHeadersValidator"}]},"abstract":[{"text":"A ChannelHandler to validate that outbound response headers are spec-compliant.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/OutboundOut":{"url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/outboundout","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"title":"NIOHTTPResponseHeadersValidator.OutboundOut","navigatorTitle":[{"kind":"identifier","text":"OutboundOut"}],"abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/OutboundOut","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"title":"RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/OutboundIn":{"title":"NIOHTTPResponseHeadersValidator.OutboundIn","url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/outboundin","role":"symbol","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/OutboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/HTTPParserError/invalidHeaderToken":{"kind":"symbol","url":"\/documentation\/niohttp1\/httpparsererror\/invalidheadertoken","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"invalidHeaderToken","kind":"identifier"}],"type":"topic","title":"HTTPParserError.invalidHeaderToken","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/HTTPParserError\/invalidHeaderToken","abstract":[],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/RemovableChannelHandler-Implementations":{"role":"collectionGroup","url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/removablechannelhandler-implementations","abstract":[],"kind":"article","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/RemovableChannelHandler-Implementations","title":"RemovableChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/ChannelOutboundHandler-Implementations":{"role":"collectionGroup","type":"topic","title":"ChannelOutboundHandler Implementations","kind":"article","abstract":[],"url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/ChannelOutboundHandler-Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/ChannelHandler-Implementations":{"url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/channelhandler-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/ChannelHandler-Implementations","role":"collectionGroup","type":"topic","abstract":[],"title":"ChannelHandler Implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/init()":{"abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/init()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/init()","title":"init()","type":"topic","kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator":{"url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator","kind":"symbol","navigatorTitle":[{"text":"NIOHTTPResponseHeadersValidator","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator","role":"symbol","type":"topic","abstract":[{"type":"text","text":"A ChannelHandler to validate that outbound response headers are spec-compliant."}],"title":"NIOHTTPResponseHeadersValidator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"NIOHTTPResponseHeadersValidator","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPResponseHeadersValidator/write(context:data:promise:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPResponseHeadersValidator\/write(context:data:promise:)","url":"\/documentation\/niohttp1\/niohttpresponseheadersvalidator\/write(context:data:promise:)","title":"write(context:data:promise:)","abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}]}}}
{"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/init(maxContentLength:closeOnExpectationFailed:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/handlerAdded(context:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/OutboundOut"],"title":"Type Aliases"},{"generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/RemovableChannelHandler-Implementations"],"title":"Default Implementations"}],"abstract":[{"type":"text","text":"A "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" that handles HTTP chunked "},{"type":"codeVoice","code":"HTTPServerRequestPart"},{"text":" ","type":"text"},{"text":"messages by aggregating individual message chunks into a single","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOHTTPServerRequestFull"},{"text":".","type":"text"}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"type":"conformsTo","title":"Conforms To"}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOHTTPServerRequestAggregator","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"anchor":"overview","type":"heading","level":2,"text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This is achieved by buffering the contents of all received "},{"type":"codeVoice","code":"HTTPServerRequestPart"},{"type":"text","text":" "},{"type":"text","text":"messages until "},{"type":"codeVoice","code":"HTTPServerRequestPart.end"},{"type":"text","text":" is received, then assembling the"},{"type":"text","text":" "},{"type":"text","text":"full message and firing a channel read upstream with it. It is useful for when you do not"},{"type":"text","text":" "},{"type":"text","text":"want to deal with chunked messages and just want to receive everything at once, and"},{"type":"text","text":" "},{"type":"text","text":"are happy with the additional memory used and delay handling of the message until"},{"type":"text","text":" "},{"type":"text","text":"everything has been received."}]},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"NIOHTTPServerRequestAggregator"},{"type":"text","text":" may end up sending a "},{"type":"codeVoice","code":"HTTPResponseHead"},{"type":"text","text":":"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Response status ","type":"text"},{"code":"413 Request Entity Too Large","type":"codeVoice"},{"text":" when either the","type":"text"},{"text":" ","type":"text"},{"code":"content-length","type":"codeVoice"},{"text":" or the bytes received so far exceed ","type":"text"},{"code":"maxContentLength","type":"codeVoice"},{"text":".","type":"text"}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"code":"NIOHTTPServerRequestAggregator","type":"codeVoice"},{"type":"text","text":" may close the connection if it is impossible"},{"type":"text","text":" "},{"type":"text","text":"to recover:"}]},{"items":[{"content":[{"inlineContent":[{"text":"If ","type":"text"},{"type":"codeVoice","code":"content-length"},{"text":" is too large and ","type":"text"},{"type":"codeVoice","code":"keep-alive"},{"text":" is off.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If the bytes received exceed "},{"type":"codeVoice","code":"maxContentLength"},{"type":"text","text":" and the client didnâ€™t signal"},{"type":"text","text":" "},{"type":"codeVoice","code":"content-length"}]}]}],"type":"unorderedList"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpserverrequestaggregator"]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator"},"metadata":{"symbolKind":"class","externalID":"s:8NIOHTTP130NIOHTTPServerRequestAggregatorC","modules":[{"name":"NIOHTTP1"}],"roleHeading":"Class","title":"NIOHTTPServerRequestAggregator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/InboundIn":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundIn","type":"topic","abstract":[{"text":"The type of the inbound data which is wrapped in ","type":"text"},{"code":"NIOAny","type":"codeVoice"},{"text":".","type":"text"}],"title":"NIOHTTPServerRequestAggregator.InboundIn","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"InboundIn"}],"navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/inboundin","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/InboundOut":{"navigatorTitle":[{"text":"InboundOut","kind":"identifier"}],"title":"NIOHTTPServerRequestAggregator.InboundOut","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"InboundOut","kind":"identifier"}],"abstract":[{"text":"The type of the inbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelInboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/inboundout","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/InboundOut","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator":{"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"title":"NIOHTTPServerRequestAggregator","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPServerRequestAggregator"}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ChannelInboundHandler"},{"text":" that handles HTTP chunked ","type":"text"},{"type":"codeVoice","code":"HTTPServerRequestPart"},{"text":" ","type":"text"},{"text":"messages by aggregating individual message chunks into a single","type":"text"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOHTTPServerRequestFull"},{"type":"text","text":"."}],"url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/init(maxContentLength:closeOnExpectationFailed:)":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"maxContentLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"closeOnExpectationFailed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/init(maxContentLength:closeOnExpectationFailed:)","abstract":[],"role":"symbol","title":"init(maxContentLength:closeOnExpectationFailed:)","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/init(maxcontentlength:closeonexpectationfailed:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/RemovableChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/RemovableChannelHandler-Implementations","type":"topic","abstract":[],"title":"RemovableChannelHandler Implementations","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/removablechannelhandler-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/OutboundOut":{"type":"topic","kind":"symbol","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/outboundout","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundOut"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/OutboundOut","role":"symbol","title":"NIOHTTPServerRequestAggregator.OutboundOut","navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"abstract":[{"type":"text","text":"The type of the outbound data which will be forwarded to the next "},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/ChannelHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelHandler-Implementations","type":"topic","abstract":[],"title":"ChannelHandler Implementations","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/channelhandler-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/handlerAdded(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/handlerAdded(context:)","type":"topic","abstract":[{"text":"Called when this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" is added to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"title":"handlerAdded(context:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/handleradded(context:)","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/channelRead(context:data:)":{"title":"channelRead(context:data:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelRead"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/channelread(context:data:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/channelRead(context:data:)","kind":"symbol","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerRequestAggregator/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerRequestAggregator\/ChannelInboundHandler-Implementations","type":"topic","abstract":[],"title":"ChannelInboundHandler Implementations","url":"\/documentation\/niohttp1\/niohttpserverrequestaggregator\/channelinboundhandler-implementations","role":"collectionGroup","kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"title":"RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"}}}
{"kind":"symbol","abstract":[{"type":"text","text":"An object that implements "},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niohttp1\/niohttpclientprotocolupgrader"]}],"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader"],"type":"conformingTypes","title":"Conforming Types"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"metadata":{"modules":[{"name":"NIOHTTP1"}],"role":"symbol","title":"NIOHTTPClientProtocolUpgrader","symbolKind":"protocol","roleHeading":"Protocol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"externalID":"s:8NIOHTTP129NIOHTTPClientProtocolUpgraderP"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"platforms":["Linux"],"languages":["swift"]}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)"],"title":"Instance Methods"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/addCustom(upgradeRequestHeaders:)":{"type":"topic","abstract":[{"type":"text","text":"Additional headers to be added to the request, beyond the “Upgrade” and “Connection” headers."}],"required":true,"kind":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/addcustom(upgraderequestheaders:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/addCustom(upgradeRequestHeaders:)","title":"addCustom(upgradeRequestHeaders:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"addCustom"},{"kind":"text","text":"("},{"kind":"externalParam","text":"upgradeRequestHeaders"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","preciseIdentifier":"s:8NIOHTTP111HTTPHeadersV","text":"HTTPHeaders"},{"text":")","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOWebSocket/NIOWebSocketClientUpgrader":{"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"role":"symbol","url":"\/documentation\/niowebsocket\/niowebsocketclientupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOWebSocketClientUpgrader"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOWebSocket\/NIOWebSocketClientUpgrader","abstract":[{"type":"text","text":"A "},{"code":"HTTPClientProtocolUpgrader","type":"codeVoice"},{"text":" that knows how to do the WebSocket upgrade dance.","type":"text"}],"title":"NIOWebSocketClientUpgrader","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/shouldAllowUpgrade(upgradeResponse:)":{"role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/shouldallowupgrade(upgraderesponse:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shouldAllowUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"}],"type":"topic","title":"shouldAllowUpgrade(upgradeResponse:)","abstract":[{"text":"Gives the receiving upgrader the chance to deny the upgrade based on the upgrade HTTP response.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/shouldAllowUpgrade(upgradeResponse:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/upgrade(context:upgradeResponse:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"upgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"upgradeResponse","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP116HTTPResponseHeadV","text":"HTTPResponseHead","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"required":true,"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/upgrade(context:upgraderesponse:)","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/upgrade(context:upgradeResponse:)","abstract":[{"text":"Called when the upgrade response has been flushed. At this time it is safe to mutate the channel","type":"text"},{"text":" ","type":"text"},{"text":"pipeline to add whatever channel handlers are required.","type":"text"},{"text":" ","type":"text"},{"text":"Until the returned ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"text":" succeeds, all received data will be buffered.","type":"text"}],"title":"upgrade(context:upgradeResponse:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader":{"abstract":[{"text":"An object that implements ","type":"text"},{"type":"codeVoice","code":"NIOHTTPClientProtocolUpgrader"},{"type":"text","text":" knows how to handle HTTP upgrade to"},{"type":"text","text":" "},{"type":"text","text":"a protocol on a client-side channel."},{"type":"text","text":" "},{"type":"text","text":"It has the option of denying this upgrade based upon the server response."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader","title":"NIOHTTPClientProtocolUpgrader","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader","navigatorTitle":[{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}],"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPClientProtocolUpgrader"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1":{"url":"\/documentation\/niohttp1","title":"NIOHTTP1","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/supportedProtocol":{"abstract":[{"text":"The protocol this upgrader knows how to support.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/supportedProtocol","title":"supportedProtocol","role":"symbol","url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/supportedprotocol","required":true,"type":"topic","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"supportedProtocol"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"}]},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPClientProtocolUpgrader/requiredUpgradeHeaders":{"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"requiredUpgradeHeaders","kind":"identifier"},{"text":": [","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPClientProtocolUpgrader\/requiredUpgradeHeaders","kind":"symbol","abstract":[{"text":"All the header fields the protocol requires in the request to successfully upgrade.","type":"text"},{"text":" ","type":"text"},{"text":"These header fields will be added to the outbound request’s “Connection” header field.","type":"text"},{"text":" ","type":"text"},{"text":"It is the responsibility of the custom headers call to actually add these required headers.","type":"text"}],"title":"requiredUpgradeHeaders","required":true,"url":"\/documentation\/niohttp1\/niohttpclientprotocolupgrader\/requiredupgradeheaders","role":"symbol"}}}
{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/close(context:mode:promise:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","text":"ChannelHandlerContext","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CloseMode","text":"CloseMode","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9CloseModeO"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"ChannelHandlerContext","type":"codeVoice"},{"text":" which this ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" belongs to.","type":"text"}]}],"name":"context"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"CloseMode","type":"codeVoice"},{"text":" to apply","type":"text"}]}],"name":"mode"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" which should be notified once the operation completes, or nil if no notification should take place."}],"type":"paragraph"}],"name":"promise"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"This should call "},{"type":"codeVoice","code":"context.close"},{"type":"text","text":" to forward the operation to the next "},{"type":"codeVoice","code":"_ChannelOutboundHandler"},{"type":"text","text":" in the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"text","text":"complete the "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" to let the caller know that the operation completed."}]}],"kind":"content"}],"metadata":{"role":"symbol","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore9CloseModeO","kind":"typeIdentifier","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?)"}],"externalID":"s:20NIOTransportServices27NIOFilterEmptyWritesHandlerC5close7context4mode7promisey7NIOCore07ChannelF7ContextC_AH9CloseModeOAH16EventLoopPromiseVyytGSgtF","extendedModule":"NIOTransportServices","roleHeading":"Instance Method","title":"close(context:mode:promise:)","modules":[{"name":"NIOTransportServices"}]},"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niotransportservices\/niofilteremptywriteshandler\/close(context:mode:promise:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/_ChannelOutboundHandler-Implementations"]]},"kind":"symbol","abstract":[{"type":"text","text":"Called to request that the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" close itself down`."}],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices":{"url":"\/documentation\/niotransportservices","kind":"symbol","abstract":[],"title":"NIOTransportServices","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/eventlooppromise","abstract":[{"type":"text","text":"A promise to provide a result later."}],"title":"EventLoopPromise","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}]},"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices/NIOFilterEmptyWritesHandler/_ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/_ChannelOutboundHandler-Implementations","title":"_ChannelOutboundHandler Implementations","kind":"article","type":"topic","abstract":[],"role":"collectionGroup","url":"\/documentation\/niotransportservices\/niofilteremptywriteshandler\/_channeloutboundhandler-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices/NIOFilterEmptyWritesHandler/close(context:mode:promise:)":{"type":"topic","role":"symbol","kind":"symbol","abstract":[{"text":"Called to request that the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" close itself down`.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"title":"close(context:mode:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler\/close(context:mode:promise:)","url":"\/documentation\/niotransportservices\/niofilteremptywriteshandler\/close(context:mode:promise:)"},"doc://co.pointfree.VaporRouting/documentation/NIOTransportServices/NIOFilterEmptyWritesHandler":{"url":"\/documentation\/niotransportservices\/niofilteremptywriteshandler","kind":"symbol","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that checks for outbound writes of zero length, which are then dropped. This is"},{"type":"text","text":" "},{"type":"text","text":"due to a bug in "},{"type":"codeVoice","code":"Network Framework"},{"type":"text","text":", where zero byte TCP writes lead to stalled connections."},{"text":" ","type":"text"},{"text":"Write promises are confirmed in the correct order.","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFilterEmptyWritesHandler"}],"title":"NIOFilterEmptyWritesHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOTransportServices\/NIOFilterEmptyWritesHandler","navigatorTitle":[{"kind":"identifier","text":"NIOFilterEmptyWritesHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CloseMode":{"navigatorTitle":[{"text":"CloseMode","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CloseMode","kind":"identifier"}],"abstract":[{"text":"Specify what kind of close operation is requested.","type":"text"}],"type":"topic","role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CloseMode","title":"CloseMode","url":"\/documentation\/niocore\/closemode"}}}
{"metadata":{"extendedModule":"DequeModule","role":"symbol","modules":[{"name":"DequeModule"}],"symbolKind":"op","conformance":{"constraints":[{"type":"codeVoice","code":"Element"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Equatable"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"externalID":"s:11DequeModule0A0VAASQRzlE2eeoiySbACyxG_AEtFZ","roleHeading":"Operator","title":"==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Deque","preciseIdentifier":"s:11DequeModule0A0V","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Deque","preciseIdentifier":"s:11DequeModule0A0V","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"=="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"internalParam","text":"left"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","preciseIdentifier":"s:11DequeModule0A0V","text":"Deque"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">, "},{"kind":"internalParam","text":"right"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","preciseIdentifier":"s:11DequeModule0A0V","text":"Deque"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"codeVoice","code":"min(left.count, right.count)"},{"type":"text","text":")"}]}],"name":"Complexity","style":"note"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/==(_:_:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal. Two"},{"type":"text","text":" "},{"type":"text","text":"deques are considered equal if they contain the same elements in the same"},{"type":"text","text":" "},{"type":"text","text":"order."}],"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Equatable-Implementations"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dequemodule\/deque\/==(_:_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/==(_:_:)":{"type":"topic","title":"==(_:_:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"==","kind":"identifier"},{"text":" ","kind":"text"},{"text":"(","kind":"text"},{"text":"Deque","kind":"typeIdentifier","preciseIdentifier":"s:11DequeModule0A0V"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"Deque","kind":"typeIdentifier","preciseIdentifier":"s:11DequeModule0A0V"},{"text":"<","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/==(_:_:)","abstract":[{"type":"text","text":"Returns a Boolean value indicating whether two values are equal. Two"},{"type":"text","text":" "},{"type":"text","text":"deques are considered equal if they contain the same elements in the same"},{"type":"text","text":" "},{"type":"text","text":"order."}],"kind":"symbol","role":"symbol","url":"\/documentation\/dequemodule\/deque\/==(_:_:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Equatable","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]}},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/Equatable-Implementations":{"kind":"article","title":"Equatable Implementations","url":"\/documentation\/dequemodule\/deque\/equatable-implementations","role":"collectionGroup","abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/Equatable-Implementations"},"doc://co.pointfree.VaporRouting/documentation/DequeModule":{"kind":"symbol","type":"topic","title":"DequeModule","role":"collection","url":"\/documentation\/dequemodule","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque":{"kind":"symbol","type":"topic","title":"Deque","role":"symbol","url":"\/documentation\/dequemodule\/deque","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","navigatorTitle":[{"text":"Deque","kind":"identifier"}],"abstract":[{"text":"A collection implementing a double-ended queue. ","type":"text"},{"type":"codeVoice","code":"Deque"},{"text":" (pronounced “deck”)","type":"text"},{"text":" ","type":"text"},{"text":"implements an ordered random-access collection that supports efficient","type":"text"},{"text":" ","type":"text"},{"text":"insertions and removals from both ends.","type":"text"}]}}}
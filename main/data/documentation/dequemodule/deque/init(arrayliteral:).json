{"kind":"symbol","metadata":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}],"externalID":"s:11DequeModule0A0V12arrayLiteralACyxGxd_tcfc","roleHeading":"Initializer","symbolKind":"init","modules":[{"name":"DequeModule"}],"title":"init(arrayLiteral:)","role":"symbol","extendedModule":"DequeModule"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/dequemodule\/deque\/init(arrayliteral:)"]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations"]]},"abstract":[{"type":"text","text":"Creates a new deque from the contents of an array literal."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"...)"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"elements","content":[{"inlineContent":[{"type":"text","text":"A variadic list of elements of the new deque."}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"type":"text","text":"you use an array literal. Instead, create a new deque using an array"},{"type":"text","text":" "},{"text":"literal as its value by enclosing a comma-separated list of values in","type":"text"},{"text":" ","type":"text"},{"text":"square brackets. You can use an array literal anywhere a deque is expected","type":"text"},{"text":" ","type":"text"},{"text":"by the type context.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/ExpressibleByArrayLiteral-Implementations":{"kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations","url":"\/documentation\/dequemodule\/deque\/expressiblebyarrayliteral-implementations","type":"topic","abstract":[],"title":"ExpressibleByArrayLiteral Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque/init(arrayLiteral:)":{"role":"symbol","type":"topic","abstract":[{"text":"Creates a new deque from the contents of an array literal.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","title":"init(arrayLiteral:)","url":"\/documentation\/dequemodule\/deque\/init(arrayliteral:)","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"arrayLiteral","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"...)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/DequeModule/Deque":{"kind":"symbol","type":"topic","title":"Deque","role":"symbol","url":"\/documentation\/dequemodule\/deque","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Deque","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule\/Deque","navigatorTitle":[{"text":"Deque","kind":"identifier"}],"abstract":[{"text":"A collection implementing a double-ended queue. ","type":"text"},{"type":"codeVoice","code":"Deque"},{"text":" (pronounced “deck”)","type":"text"},{"text":" ","type":"text"},{"text":"implements an ordered random-access collection that supports efficient","type":"text"},{"text":" ","type":"text"},{"text":"insertions and removals from both ends.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/DequeModule":{"kind":"symbol","type":"topic","title":"DequeModule","role":"collection","url":"\/documentation\/dequemodule","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/DequeModule","abstract":[]}}}
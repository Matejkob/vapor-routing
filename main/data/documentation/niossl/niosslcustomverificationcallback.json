{"kind":"symbol","sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslcustomverificationcallback"]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomVerificationCallback","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A custom verification callback that allows completely overriding the certificate verification logic of BoringSSL."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomVerificationCallback"},{"kind":"text","text":" = (["},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCertificate","preciseIdentifier":"s:6NIOSSL17NIOSSLCertificateC","text":"NIOSSLCertificate"},{"kind":"text","text":"], "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLVerificationResult","preciseIdentifier":"s:6NIOSSL24NIOSSLVerificationResultO","text":"NIOSSLVerificationResult"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"This verification callback is called no more than once per connection attempt. It is invoked with two arguments:","type":"text"}]},{"type":"orderedList","items":[{"content":[{"inlineContent":[{"text":"The certificate chain presented by the peer, in the order the peer presented them (with the first certificate","type":"text"},{"text":" ","type":"text"},{"text":"being the leaf certificate presented by the peer).","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"type":"codeVoice","code":"EventLoopPromise"},{"text":" that must be completed to signal the result of the verification.","type":"text"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Please be cautious with calling out from this method. This method is always invoked on the event loop,"},{"type":"text","text":" "},{"type":"text","text":"so you must not block or wait. However, you may perform asynchronous work by leaving the event loop context:"},{"type":"text","text":" "},{"type":"text","text":"when the verification is complete you must complete the provided "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":"."}]},{"type":"paragraph","inlineContent":[{"text":"This method must take care to ensure that it does not cause any ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":" to recursively call back into","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","type":"reference","isActive":true},{"text":" that triggered it, as making re-entrant calls into BoringSSL is not supported by SwiftNIO and","type":"text"},{"text":" ","type":"text"},{"text":"leads to undefined behaviour. It is acceptable to leave the event loop context and then call into the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","type":"reference","isActive":true},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"as this will not be re-entrant.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that setting this callback will override "},{"inlineContent":[{"text":"all","type":"text"}],"type":"emphasis"},{"type":"text","text":" verification logic that BoringSSL provides."}]}],"kind":"content"}],"metadata":{"externalID":"s:6NIOSSL32NIOSSLCustomVerificationCallbacka","modules":[{"name":"NIOSSL"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomVerificationCallback"}],"symbolKind":"typealias","navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomVerificationCallback"}],"title":"NIOSSLCustomVerificationCallback","roleHeading":"Type Alias","role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomVerificationCallback":{"navigatorTitle":[{"text":"NIOSSLCustomVerificationCallback","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A custom verification callback that allows completely overriding the certificate verification logic of BoringSSL.","type":"text"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomVerificationCallback"}],"title":"NIOSSLCustomVerificationCallback","role":"symbol","url":"\/documentation\/niossl\/niosslcustomverificationcallback","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomVerificationCallback"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol","abstract":[],"url":"\/documentation\/niossl","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"navigatorTitle":[{"text":"NIOSSLHandler","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The base class for all NIOSSL handlers.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"title":"NIOSSLHandler","role":"symbol","url":"\/documentation\/niossl\/niosslhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/eventlooppromise","abstract":[{"type":"text","text":"A promise to provide a result later."}],"title":"EventLoopPromise","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCertificate":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLCertificate","kind":"identifier"}],"navigatorTitle":[{"text":"NIOSSLCertificate","kind":"identifier"}],"title":"NIOSSLCertificate","url":"\/documentation\/niossl\/niosslcertificate","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCertificate","kind":"symbol","abstract":[{"text":"A reference to a BoringSSL Certificate object (","type":"text"},{"type":"codeVoice","code":"X509 *"},{"text":").","type":"text"}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLVerificationResult":{"navigatorTitle":[{"kind":"identifier","text":"NIOSSLVerificationResult"}],"type":"topic","kind":"symbol","abstract":[{"text":"The result of an attempt to verify an X.509 certificate.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLVerificationResult"}],"title":"NIOSSLVerificationResult","role":"symbol","url":"\/documentation\/niossl\/niosslverificationresult","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLVerificationResult"}}}
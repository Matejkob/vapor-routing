{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)"},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"roleHeading":"Instance Method","modules":[{"name":"NIOSSL"}],"role":"symbol","extendedModule":"NIOSSL","externalID":"s:6NIOSSL13NIOSSLHandlerC7stopTLS7promisey7NIOCore16EventLoopPromiseVyytGSg_tF","title":"stopTLS(promise:)","symbolKind":"method"},"abstract":[{"text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself","type":"text"},{"type":"text","text":" "},{"type":"text","text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper"},{"type":"text","text":" "},{"type":"text","text":"from it."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">?)"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" that will be completed when the unwrapping has","type":"text"},{"text":" ","type":"text"},{"text":"completed.","type":"text"}]}],"name":"promise"}]},{"kind":"content","content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This will send a ","type":"text"},{"type":"codeVoice","code":"CLOSE_NOTIFY"},{"text":" and wait for the corresponding ","type":"text"},{"type":"codeVoice","code":"CLOSE_NOTIFY"},{"type":"text","text":". When that next"},{"type":"text","text":" "},{"code":"CLOSE_NOTIFY","type":"codeVoice"},{"type":"text","text":" is received, this handler will pass on all pending writes and remove itself"},{"type":"text","text":" "},{"type":"text","text":"from the channel pipeline. If the shutdown times out then an error will fire down the"},{"type":"text","text":" "},{"type":"text","text":"pipeline, this handler will remove itself from the pipeline, but the channel will not be"},{"type":"text","text":" "},{"type":"text","text":"automatically closed."}]},{"type":"paragraph","inlineContent":[{"text":"This function ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"is not thread-safe"}]},{"text":": you ","type":"text"},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"text":" call it from the correct event","type":"text"},{"text":" ","type":"text"},{"text":"loop thread.","type":"text"}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslhandler\/stoptls(promise:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)","abstract":[{"text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself","type":"text"},{"text":" ","type":"text"},{"text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper","type":"text"},{"text":" ","type":"text"},{"text":"from it.","type":"text"}],"title":"stopTLS(promise:)","role":"symbol","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"navigatorTitle":[{"text":"NIOSSLHandler","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The base class for all NIOSSL handlers.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"title":"NIOSSLHandler","role":"symbol","url":"\/documentation\/niossl\/niosslhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/eventlooppromise","abstract":[{"type":"text","text":"A promise to provide a result later."}],"title":"EventLoopPromise","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol","abstract":[],"url":"\/documentation\/niossl","type":"topic","role":"collection"}}}
{"relationshipsSections":[{"title":"Inherited By","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLServerHandler"],"type":"inheritedBy","kind":"relationships"},{"title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler"],"type":"conformsTo","kind":"relationships"}],"metadata":{"role":"symbol","title":"NIOSSLHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"externalID":"s:6NIOSSL13NIOSSLHandlerC","roleHeading":"Class","navigatorTitle":[{"kind":"identifier","text":"NIOSSLHandler"}],"modules":[{"name":"NIOSSL"}],"symbolKind":"class"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/tlsVersion"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelActive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelInactive(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelRead(context:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelReadComplete(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/close(context:mode:promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/flush(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerAdded(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerRemoved(context:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/write(context:data:promise:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundOut","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundIn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundOut"]},{"generated":true,"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelInboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelOutboundHandler-Implementations","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/RemovableChannelHandler-Implementations"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"text":"The base class for all NIOSSL handlers.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLHandler","kind":"identifier"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"text":"Overview","anchor":"overview","level":2,"type":"heading"},{"type":"paragraph","inlineContent":[{"text":"This class cannot actually be instantiated by users directly: instead, users must select","type":"text"},{"text":" ","type":"text"},{"text":"which mode they would like their handler to operate in, client or server.","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This class exists to deal with the reality that for almost the entirety of the lifetime"},{"type":"text","text":" "},{"type":"text","text":"of a TLS connection there is no meaningful distinction between a server and a client."},{"type":"text","text":" "},{"type":"text","text":"For this reason almost the entirety of the implementation for the channel and server"},{"type":"text","text":" "},{"type":"text","text":"handlers in NIOSSL is shared, in the form of this parent class."}]}],"kind":"content"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslhandler"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/stopTLS(promise:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"stopTLS","kind":"identifier"},{"text":"(","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/stopTLS(promise:)","url":"\/documentation\/niossl\/niosslhandler\/stoptls(promise:)","abstract":[{"text":"Called to instruct this handler to perform an orderly TLS shutdown and then remove itself","type":"text"},{"text":" ","type":"text"},{"text":"from the pipeline. This will leave the connection established, but remove the TLS wrapper","type":"text"},{"text":" ","type":"text"},{"text":"from it.","type":"text"}],"title":"stopTLS(promise:)","role":"symbol","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/RemovableChannelHandler-Implementations":{"title":"RemovableChannelHandler Implementations","url":"\/documentation\/niossl\/niosslhandler\/removablechannelhandler-implementations","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/RemovableChannelHandler-Implementations","abstract":[],"type":"topic","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/InboundOut":{"abstract":[{"type":"text","text":"The type of the inbound data which will be forwarded to the next "},{"code":"ChannelInboundHandler","type":"codeVoice"},{"type":"text","text":" in the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"InboundOut"}],"url":"\/documentation\/niossl\/niosslhandler\/inboundout","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundOut","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundOut"}],"type":"topic","title":"NIOSSLHandler.InboundOut"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/ChannelInboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelInboundHandler-Implementations","kind":"article","url":"\/documentation\/niossl\/niosslhandler\/channelinboundhandler-implementations","type":"topic","title":"ChannelInboundHandler Implementations","role":"collectionGroup","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/OutboundIn":{"type":"topic","url":"\/documentation\/niossl\/niosslhandler\/outboundin","navigatorTitle":[{"kind":"identifier","text":"OutboundIn"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundIn","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"OutboundIn"}],"title":"NIOSSLHandler.OutboundIn","abstract":[{"type":"text","text":"The type of the outbound data which is wrapped in "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/tlsVersion":{"role":"symbol","abstract":[{"text":"Variable that can be queried during the connection lifecycle to grab the ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/TLSVersion","isActive":true},{"text":" used on this connection.","type":"text"}],"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"tlsVersion","kind":"identifier"},{"text":": ","kind":"text"},{"text":"TLSVersion","kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL10TLSVersionO"},{"text":"?","kind":"text"}],"kind":"symbol","title":"tlsVersion","type":"topic","url":"\/documentation\/niossl\/niosslhandler\/tlsversion","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/tlsVersion"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler":{"navigatorTitle":[{"text":"NIOSSLHandler","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"The base class for all NIOSSL handlers.","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLHandler"}],"title":"NIOSSLHandler","role":"symbol","url":"\/documentation\/niossl\/niosslhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol","abstract":[],"url":"\/documentation\/niossl","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelReadComplete(context:)":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelReadComplete"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"url":"\/documentation\/niossl\/niosslhandler\/channelreadcomplete(context:)","role":"symbol","abstract":[{"type":"text","text":"Called when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" has completed its current read loop, either because no more data is available to read from the transport at this time, or because the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" needs to yield to the event loop to process other I\/O events for other "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s."},{"type":"text","text":" "},{"type":"text","text":"If "},{"code":"ChannelOptions.autoRead","type":"codeVoice"},{"type":"text","text":" is "},{"code":"false","type":"codeVoice"},{"type":"text","text":" no further read attempt will be made until "},{"code":"ChannelHandlerContext.read","type":"codeVoice"},{"type":"text","text":" or "},{"code":"Channel.read","type":"codeVoice"},{"type":"text","text":" is explicitly called."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelReadComplete(context:)","title":"channelReadComplete(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLClientHandler":{"navigatorTitle":[{"text":"NIOSSLClientHandler","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A channel handler that wraps a channel in TLS using NIOSSL.","type":"text"},{"text":" ","type":"text"},{"text":"This handler can be used in channels that are acting as the client","type":"text"},{"text":" ","type":"text"},{"text":"in the TLS dialog. For server connections, use the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLServerHandler","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLClientHandler","kind":"identifier"}],"title":"NIOSSLClientHandler","role":"symbol","url":"\/documentation\/niossl\/niosslclienthandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/handlerRemoved(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerRemoved(context:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handlerRemoved","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"type":"topic","title":"handlerRemoved(context:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/handlerremoved(context:)","abstract":[{"text":"Called when this ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":" is removed from the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/write(context:data:promise:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/write(context:data:promise:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/write(context:data:promise:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"kind":"text","text":">?)"}],"abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"title":"write(context:data:promise:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/flush(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/flush(context:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flush","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"type":"topic","title":"flush(context:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/flush(context:)","abstract":[{"text":"Called to request that the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" flush all pending writes. The flush operation will try to flush out all previous written messages","type":"text"},{"text":" ","type":"text"},{"text":"that are pending.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles outbound I\/O events or intercept an outbound I\/O operation for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundHandler","type":"topic","role":"symbol","title":"ChannelOutboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channeloutboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelRead(context:data:)":{"kind":"symbol","url":"\/documentation\/niossl\/niosslhandler\/channelread(context:data:)","type":"topic","role":"symbol","title":"channelRead(context:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelRead","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelRead(context:data:)","abstract":[{"type":"text","text":"Called when some data has been read from the remote peer."}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/handlerAdded(context:)":{"url":"\/documentation\/niossl\/niosslhandler\/handleradded(context:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/handlerAdded(context:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handlerAdded"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Called when this "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" is added to the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":"."}],"title":"handlerAdded(context:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelInactive(context:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelInactive(context:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInactive","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"type":"topic","title":"channelInactive(context:)","role":"symbol","url":"\/documentation\/niossl\/niosslhandler\/channelinactive(context:)","abstract":[{"text":"Called when the ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" has become inactive and is no longer able to send and receive data`.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/channelActive(context:)":{"role":"symbol","title":"channelActive(context:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelActive"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/channelActive(context:)","abstract":[{"type":"text","text":"Called when the "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" has become active, and is able to send and receive data."}],"kind":"symbol","url":"\/documentation\/niossl\/niosslhandler\/channelactive(context:)"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/TLSVersion":{"navigatorTitle":[{"kind":"identifier","text":"TLSVersion"}],"type":"topic","kind":"symbol","abstract":[{"text":"Known and supported TLS versions.","type":"text"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"TLSVersion"}],"title":"TLSVersion","role":"symbol","url":"\/documentation\/niossl\/tlsversion","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/TLSVersion"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/OutboundOut":{"navigatorTitle":[{"text":"OutboundOut","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/OutboundOut","role":"symbol","abstract":[{"text":"The type of the outbound data which will be forwarded to the next ","type":"text"},{"code":"ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niossl\/niosslhandler\/outboundout","title":"NIOSSLHandler.OutboundOut","kind":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OutboundOut","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/ChannelOutboundHandler-Implementations":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/ChannelOutboundHandler-Implementations","kind":"article","type":"topic","title":"ChannelOutboundHandler Implementations","role":"collectionGroup","url":"\/documentation\/niossl\/niosslhandler\/channeloutboundhandler-implementations","abstract":[]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundHandler":{"abstract":[{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" which handles inbound I\/O events for a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundHandler","type":"topic","role":"symbol","title":"ChannelInboundHandler","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInboundHandler"}],"kind":"symbol","url":"\/documentation\/niocore\/channelinboundhandler","navigatorTitle":[{"kind":"identifier","text":"ChannelInboundHandler"}]},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/close(context:mode:promise:)":{"url":"\/documentation\/niossl\/niosslhandler\/close(context:mode:promise:)","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/close(context:mode:promise:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"close"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9CloseModeO","text":"CloseMode"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"title":"close(context:mode:promise:)","abstract":[{"type":"text","text":"Called to request that the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" close itself down`."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/RemovableChannelHandler":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RemovableChannelHandler","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"RemovableChannelHandler","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/RemovableChannelHandler","abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" that can be dynamically removed from a "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" whilst"},{"type":"text","text":" "},{"type":"text","text":"the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is operating normally."},{"type":"text","text":" "},{"type":"text","text":"A "},{"type":"codeVoice","code":"RemovableChannelHandler"},{"type":"text","text":" is required to remove itself from the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" (using"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.removeHandler"},{"type":"text","text":") as soon as possible."}],"title":"RemovableChannelHandler","url":"\/documentation\/niocore\/removablechannelhandler","kind":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLHandler/InboundIn":{"type":"topic","title":"NIOSSLHandler.InboundIn","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"InboundIn"}],"url":"\/documentation\/niossl\/niosslhandler\/inboundin","abstract":[{"type":"text","text":"The type of the inbound data which is wrapped in "},{"code":"NIOAny","type":"codeVoice"},{"type":"text","text":"."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"InboundIn"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLHandler\/InboundIn"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLServerHandler":{"navigatorTitle":[{"text":"NIOSSLServerHandler","kind":"identifier"}],"type":"topic","kind":"symbol","abstract":[{"text":"A channel handler that wraps a channel in TLS using NIOSSL. This","type":"text"},{"text":" ","type":"text"},{"text":"handler can be used in channels that are acting as the server in","type":"text"},{"text":" ","type":"text"},{"text":"the TLS dialog. For client connections, use the ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLClientHandler","isActive":true,"type":"reference"},{"text":".","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLServerHandler","kind":"identifier"}],"title":"NIOSSLServerHandler","role":"symbol","url":"\/documentation\/niossl\/niosslserverhandler","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLServerHandler"}}}
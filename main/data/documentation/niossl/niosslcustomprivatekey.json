{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","interfaceLanguage":"swift"},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"],"title":"Inherits From","kind":"relationships"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"roleHeading":"Protocol","role":"symbol","title":"NIOSSLCustomPrivateKey","symbolKind":"protocol","modules":[{"name":"NIOSSL"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"externalID":"s:6NIOSSL22NIOSSLCustomPrivateKeyP"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/signatureAlgorithms"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)"],"title":"Instance Methods"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niossl\/niosslcustomprivatekey"]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOSSLCustomPrivateKey","kind":"identifier"},{"text":" : ","kind":"text"},{"text":"NIOPreconcurrencySendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore25NIOPreconcurrencySendableP"}]}]},{"content":[{"anchor":"overview","level":2,"text":"Overview","type":"heading"},{"inlineContent":[{"text":"In a number of circumstances it is advantageous to store a TLS private key in some form of high-security storage,","type":"text"},{"text":" ","type":"text"},{"text":"such as a smart card. In these cases it is not possible to represent the TLS private key directly as a sequence","type":"text"},{"text":" ","type":"text"},{"text":"of bytes that BoringSSL will understand.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"text":"This protocol allows a type to implement callbacks that perform the specific operation required by the TLS handshake.","type":"text"},{"text":" ","type":"text"},{"text":"Implementers are required to specify what signature algorithms they support, and then must implement ","type":"text"},{"inlineContent":[{"type":"text","text":"only one"}],"type":"strong"},{"text":" of","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)"},{"text":" and ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)"},{"text":" ","type":"text"},{"text":"functions. For elliptic curve keys, implementers should implement ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"For RSA keys, implementers should implement ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)"},{"text":" and, if supporting","type":"text"},{"text":" ","type":"text"},{"text":"RSA key exchange in TLS versions before 1.3, you should also implement ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"If the same "},{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey"},{"type":"text","text":" implementation is used by multiple channels at once, then no synchronization"},{"type":"text","text":" "},{"type":"text","text":"is imposed by SwiftNIO. The calls to the protocol requirements will be made on event loop threads, so if further"},{"type":"text","text":" "},{"type":"text","text":"synchronization is required it is up to the implementer to provide it. Note that it is unacceptable to block in"},{"type":"text","text":" "},{"type":"text","text":"these functions, and so potentially blocking operations must delegate to another thread."}],"type":"paragraph"}],"kind":"content"}],"abstract":[{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","isActive":true},{"text":" defines the interface of a custom, non-BoringSSL private key.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOSSL":{"title":"NIOSSL","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL","kind":"symbol","abstract":[],"url":"\/documentation\/niossl","type":"topic","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","role":"symbol","title":"NIOPreconcurrencySendable","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"type":"topic","url":"\/documentation\/niocore\/niopreconcurrencysendable"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/sign(channel:algorithm:data:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/sign(channel:algorithm:data:)","title":"sign(channel:algorithm:data:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"sign","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"channel"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"algorithm"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL18SignatureAlgorithmV","text":"SignatureAlgorithm"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer"},{"kind":"text","text":">"}],"required":true,"role":"symbol","abstract":[{"text":"Called to perform a signing operation.","type":"text"}],"url":"\/documentation\/niossl\/niosslcustomprivatekey\/sign(channel:algorithm:data:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/signatureAlgorithms":{"kind":"symbol","url":"\/documentation\/niossl\/niosslcustomprivatekey\/signaturealgorithms","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"signatureAlgorithms","kind":"identifier"},{"text":": [","kind":"text"},{"text":"SignatureAlgorithm","kind":"typeIdentifier","preciseIdentifier":"s:6NIOSSL18SignatureAlgorithmV"},{"text":"]","kind":"text"}],"required":true,"type":"topic","title":"signatureAlgorithms","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/signatureAlgorithms","abstract":[{"type":"text","text":"The signature algorithms supported by this key."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey":{"navigatorTitle":[{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"kind":"symbol","url":"\/documentation\/niossl\/niosslcustomprivatekey","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSSLCustomPrivateKey"}],"type":"topic","title":"NIOSSLCustomPrivateKey","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey","abstract":[{"type":"reference","isActive":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey"},{"type":"text","text":" defines the interface of a custom, non-BoringSSL private key."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOSSL/NIOSSLCustomPrivateKey/decrypt(channel:data:)":{"type":"topic","url":"\/documentation\/niossl\/niosslcustomprivatekey\/decrypt(channel:data:)","required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOSSL\/NIOSSLCustomPrivateKey\/decrypt(channel:data:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"decrypt","kind":"identifier"},{"text":"(","kind":"text"},{"text":"channel","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7NIOCore10ByteBufferV","text":"ByteBuffer","kind":"typeIdentifier"},{"text":">","kind":"text"}],"title":"decrypt(channel:data:)","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Called to perform a decryption operation."}]}}}
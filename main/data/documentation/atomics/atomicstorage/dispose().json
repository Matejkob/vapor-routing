{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","type":"heading","text":"Discussion"},{"inlineContent":[{"text":"This call prevents resource leaks when destroying the storage","type":"text"},{"text":" ","type":"text"},{"text":"representation of certain ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":" types. (In particular, ones that","type":"text"},{"text":" ","type":"text"},{"text":"model strong references.)","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"Note: This is not an atomic operation. Logically, it implements a custom"},{"type":"text","text":" "},{"type":"text","text":"destructor for the underlying non-copiable value."}],"type":"paragraph"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/dispose()","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"]]},"variants":[{"paths":["\/documentation\/atomics\/atomicstorage\/dispose()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"type":"text","text":" "},{"type":"text","text":"logical value it represents. This invalidates this atomic storage; you"},{"type":"text","text":" "},{"type":"text","text":"must not perform any operations on it after this call (except for"},{"type":"text","text":" "},{"type":"text","text":"deinitialization)."}],"metadata":{"roleHeading":"Instance Method","title":"dispose()","symbolKind":"method","required":true,"modules":[{"name":"Atomics"}],"externalID":"s:7Atomics13AtomicStorageP7dispose5ValueQzyF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol"},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage":{"url":"\/documentation\/atomics\/atomicstorage","title":"AtomicStorage","navigatorTitle":[{"text":"AtomicStorage","kind":"identifier"}],"abstract":[{"text":"The storage representation for an atomic value, providing pointer-based","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"atomic operations. This is a low-level implementation detail of atomic"},{"type":"text","text":" "},{"type":"text","text":"types; instead of directly handling conforming types, it is usually better"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"type":"codeVoice","code":"UnsafeAtomic"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics â€“ these provide more","type":"text"},{"text":" ","type":"text"},{"text":"convenient and safer interfaces while also ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStorage","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage/dispose()":{"title":"dispose()","url":"\/documentation\/atomics\/atomicstorage\/dispose()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage\/dispose()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"required":true,"abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"type":"text","text":" "},{"type":"text","text":"logical value it represents. This invalidates this atomic storage; you"},{"type":"text","text":" "},{"type":"text","text":"must not perform any operations on it after this call (except for"},{"type":"text","text":" "},{"type":"text","text":"deinitialization)."}],"kind":"symbol","type":"topic"}}}
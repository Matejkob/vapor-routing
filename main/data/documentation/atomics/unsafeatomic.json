{"kind":"symbol","metadata":{"symbolKind":"struct","roleHeading":"Structure","role":"symbol","modules":[{"name":"Atomics"}],"navigatorTitle":[{"text":"UnsafeAtomic","kind":"identifier"}],"title":"UnsafeAtomic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"}],"externalID":"s:7Atomics12UnsafeAtomicV"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@frozen"},{"kind":"text","text":" "},{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"UnsafeAtomic"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics11AtomicValueP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicValue","text":"AtomicValue"}],"platforms":["Linux"],"languages":["swift"]}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"type":"text","text":" "},{"type":"text","text":"management of the underlying storage representation."}],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomic"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic","interfaceLanguage":"swift"},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/init(at:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/destroy()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/Storage"]},{"title":"Type Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/create(_:)"]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"type":"conformsTo"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/bitwiseAndThenLoad(with:ordering:)":{"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/bitwiseandthenload(with:ordering:)","title":"bitwiseAndThenLoad(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseAndThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseAndThenLoad(with:ordering:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)":{"kind":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/weakcompareexchange(expected:desired:successordering:failureordering:)","type":"topic","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"weakCompareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicLoadOrdering","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"role":"symbol","title":"weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/weakCompareExchange(expected:desired:successOrdering:failureOrdering:)","abstract":[{"text":"Perform an atomic weak compare and exchange operation on the current","type":"text"},{"text":" ","type":"text"},{"text":"value, applying the specified success\/failure memory orderings. This","type":"text"},{"text":" ","type":"text"},{"text":"compare-exchange variant is allowed to spuriously fail; it is designed to","type":"text"},{"text":" ","type":"text"},{"text":"be called in a loop until it indicates a successful exchange has happened.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicValue":{"url":"\/documentation\/atomics\/atomicvalue","title":"AtomicValue","type":"topic","navigatorTitle":[{"text":"AtomicValue","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicValue","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A type that supports atomic operations through a separate atomic storage"},{"type":"text","text":" "},{"type":"text","text":"representation."}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicValue","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/create(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/create(_:)","title":"create(_:)","kind":"symbol","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"UnsafeAtomic"},{"type":"text","text":" value with the supplied initial value by"},{"type":"text","text":" "},{"type":"text","text":"dynamically allocating storage for it."}],"role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/create(_:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"create"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV","kind":"typeIdentifier","text":"UnsafeAtomic"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/load(ordering:)":{"type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/load(ordering:)","kind":"symbol","title":"load(ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"role":"symbol","abstract":[{"type":"text","text":"Atomically loads and returns the current value, applying the specified"},{"type":"text","text":" "},{"type":"text","text":"memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/load(ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenLogicalAnd(with:ordering:)":{"type":"topic","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" is "},{"code":"Bool","type":"codeVoice"},{"type":"text","text":"."}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"title":"loadThenLogicalAnd(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicaland(with:ordering:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenLogicalAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol","abstract":[{"type":"text","text":"Perform an atomic logical AND operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalAnd(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/logicalOrThenLoad(with:ordering:)":{"title":"logicalOrThenLoad(with:ordering:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalOrThenLoad(with:ordering:)","type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/logicalorthenload(with:ordering:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalOrThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}]}},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenWrappingDecrement(by:ordering:)":{"type":"topic","title":"loadThenWrappingDecrement(by:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingDecrement(by:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenWrappingDecrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"abstract":[{"text":"Perform an atomic wrapping subtract operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingdecrement(by:ordering:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic":{"navigatorTitle":[{"text":"UnsafeAtomic","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomic","type":"topic","abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"type":"text","text":" "},{"type":"text","text":"management of the underlying storage representation."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic","url":"\/documentation\/atomics\/unsafeatomic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenLogicalOr(with:ordering:)":{"title":"loadThenLogicalOr(with:ordering:)","abstract":[{"type":"text","text":"Perform an atomic logical OR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalor(with:ordering:)","type":"topic","role":"symbol","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalOr(with:ordering:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenLogicalOr"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenLogicalXor(with:ordering:)":{"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" is ","type":"text"},{"code":"Bool","type":"codeVoice"},{"text":".","type":"text"}]},"abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenLogicalXor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","kind":"symbol","role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenlogicalxor(with:ordering:)","title":"loadThenLogicalXor(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenLogicalXor(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/logicalXorThenLoad(with:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalXorThenLoad(with:ordering:)","role":"symbol","type":"topic","title":"logicalXorThenLoad(with:ordering:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalXorThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Perform an atomic logical XOR operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/logicalxorthenload(with:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/init(at:)":{"kind":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"(","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:7Atomics12UnsafeAtomicV","kind":"typeIdentifier","text":"UnsafeAtomic"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Storage"},{"kind":"text","text":">)"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/init(at:)","url":"\/documentation\/atomics\/unsafeatomic\/init(at:)","title":"init(at:)","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Initialize an unsafe atomic value that uses the supplied memory location"},{"type":"text","text":" "},{"type":"text","text":"for storage. The storage location must already be initialized to"},{"type":"text","text":" "},{"type":"text","text":"represent a valid atomic value."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:ordering:)":{"type":"topic","abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","kind":"symbol","title":"compareExchange(expected:desired:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/exchange(_:ordering:)":{"title":"exchange(_:ordering:)","kind":"symbol","type":"topic","url":"\/documentation\/atomics\/unsafeatomic\/exchange(_:ordering:)","abstract":[{"text":"Atomically sets the current value to ","type":"text"},{"code":"desired","type":"codeVoice"},{"text":" and returns the original","type":"text"},{"text":" ","type":"text"},{"text":"value, applying the specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"exchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/exchange(_:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenWrappingIncrement(by:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/loadthenwrappingincrement(by:ordering:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenWrappingIncrement(by:ordering:)","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenWrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"type":"topic","abstract":[{"type":"text","text":"Perform an atomic wrapping add operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"title":"loadThenWrappingIncrement(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/logicalAndThenLoad(with:ordering:)":{"role":"symbol","type":"topic","kind":"symbol","title":"logicalAndThenLoad(with:ordering:)","abstract":[{"text":"Perform an atomic logical AND operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" is "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/logicalandthenload(with:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/logicalAndThenLoad(with:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"logicalAndThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/bitwiseOrThenLoad(with:ordering:)":{"role":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise OR operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol","type":"topic","title":"bitwiseOrThenLoad(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseOrThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseOrThenLoad(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/bitwiseorthenload(with:ordering:)","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/bitwiseXorThenLoad(with:ordering:)":{"role":"symbol","type":"topic","abstract":[{"text":"Perform an atomic bitwise XOR operation and return the new value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"kind":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/bitwiseXorThenLoad(with:ordering:)","title":"bitwiseXorThenLoad(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/bitwisexorthenload(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bitwiseXorThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingDecrementThenLoad(by:ordering:)":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Perform an atomic wrapping subtract operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"title":"wrappingDecrementThenLoad(by:ordering:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingDecrementThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"text":".","type":"text"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrementthenload(by:ordering:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrementThenLoad(by:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingIncrementThenLoad(by:ordering:)":{"role":"symbol","title":"wrappingIncrementThenLoad(by:ordering:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wrappingIncrementThenLoad"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrementThenLoad(by:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrementthenload(by:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping add operation and return the new value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]}},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:successOrdering:failureOrdering:)":{"title":"compareExchange(expected:desired:successOrdering:failureOrdering:)","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified success\/failure memory orderings.","type":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:successOrdering:failureOrdering:)","url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:successordering:failureordering:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"compareExchange","kind":"identifier"},{"text":"(","kind":"text"},{"text":"expected","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"successOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":", "},{"kind":"externalParam","text":"failureOrdering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics18AtomicLoadOrderingV","text":"AtomicLoadOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingDecrement(by:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/wrappingdecrement(by:ordering:)","type":"topic","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"wrappingDecrement(by:ordering:)","abstract":[{"text":"Perform an atomic wrapping decrement operation applying the","type":"text"},{"text":" ","type":"text"},{"text":"specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingDecrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingDecrement(by:ordering:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/wrappingIncrement(by:ordering:)":{"url":"\/documentation\/atomics\/unsafeatomic\/wrappingincrement(by:ordering:)","type":"topic","role":"symbol","conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"wrappingIncrement(by:ordering:)","abstract":[{"text":"Perform an atomic wrapping increment operation applying the","type":"text"},{"text":" ","type":"text"},{"text":"specified memory ordering.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"wrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"text":"by","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/wrappingIncrement(by:ordering:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/store(_:ordering:)":{"abstract":[{"type":"text","text":"Atomically sets the current value to "},{"code":"desired","type":"codeVoice"},{"text":", applying the specified","type":"text"},{"text":" ","type":"text"},{"text":"memory ordering.","type":"text"}],"title":"store(_:ordering:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"store","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicStoreOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics19AtomicStoreOrderingV"},{"text":")","kind":"text"}],"url":"\/documentation\/atomics\/unsafeatomic\/store(_:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":".","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/store(_:ordering:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenBitwiseXor(with:ordering:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"loadThenBitwiseXor","kind":"identifier"},{"text":"(","kind":"text"},{"text":"with","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwisexor(with:ordering:)","title":"loadThenBitwiseXor(with:ordering:)","abstract":[{"text":"Perform an atomic bitwise XOR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}],"conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseXor(with:ordering:)","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/Storage":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/Storage","title":"UnsafeAtomic.Storage","url":"\/documentation\/atomics\/unsafeatomic\/storage","navigatorTitle":[{"kind":"identifier","text":"Storage"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Storage"}],"type":"topic","role":"symbol","abstract":[],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenBitwiseAnd(with:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseAnd(with:ordering:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"title":"loadThenBitwiseAnd(with:ordering:)","url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseand(with:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"type":"topic","role":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation and return the original value, applying"},{"type":"text","text":" "},{"type":"text","text":"the specified memory ordering."}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/loadThenBitwiseOr(with:ordering:)":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/loadThenBitwiseOr(with:ordering:)","conformance":{"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"AtomicInteger","type":"codeVoice"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"loadThenBitwiseOr"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"}],"title":"loadThenBitwiseOr(with:ordering:)","role":"symbol","url":"\/documentation\/atomics\/unsafeatomic\/loadthenbitwiseor(with:ordering:)","type":"topic","abstract":[{"text":"Perform an atomic bitwise OR operation and return the original value, applying","type":"text"},{"text":" ","type":"text"},{"text":"the specified memory ordering.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/destroy()":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"destroy","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/destroy()","title":"destroy()","abstract":[{"type":"text","text":"Disposes of the current value of the storage location corresponding to"},{"type":"text","text":" "},{"type":"text","text":"this unsafe atomic value, then deinitializes and deallocates the storage."}],"url":"\/documentation\/atomics\/unsafeatomic\/destroy()"}}}
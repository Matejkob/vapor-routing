{"schemaVersion":{"minor":3,"patch":0,"major":0},"abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]}]},{"parameters":[{"name":"expected","content":[{"inlineContent":[{"type":"text","text":"The expected current value."}],"type":"paragraph"}]},{"name":"desired","content":[{"inlineContent":[{"type":"text","text":"The desired new value."}],"type":"paragraph"}]},{"name":"ordering","content":[{"inlineContent":[{"text":"The memory ordering to apply on this operation.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"type":"heading","text":"Return Value","level":2,"anchor":"return-value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"A tuple "},{"type":"codeVoice","code":"(exchanged, original)"},{"type":"text","text":", where "},{"type":"codeVoice","code":"exchanged"},{"type":"text","text":" is true if"},{"type":"text","text":" "},{"type":"text","text":"the exchange was successful, and "},{"type":"codeVoice","code":"original"},{"type":"text","text":" is the original value."}]}],"kind":"content"},{"content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"inlineContent":[{"type":"text","text":"This operation performs the following algorithm as a single atomic"},{"type":"text","text":" "},{"type":"text","text":"transaction:"}],"type":"paragraph"},{"syntax":null,"type":"codeListing","code":["atomic(self) { currentValue in","  let original = currentValue","  guard original == expected else { return (false, original) }","  currentValue = desired","  return (true, original)","}"]},{"inlineContent":[{"text":"This method implements a “strong” compare and exchange operation","type":"text"},{"text":" ","type":"text"},{"text":"that does not permit spurious failures.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","interfaceLanguage":"swift"},"metadata":{"extendedModule":"Atomics","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Value","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"AtomicValue","type":"codeVoice"},{"text":".","type":"text"}]},"title":"compareExchange(expected:desired:ordering:)","symbolKind":"method","modules":[{"name":"Atomics"}],"externalID":"s:7Atomics12UnsafeAtomicV15compareExchange8expected7desired8orderingSb9exchanged_x8originaltx_xnAA0C14UpdateOrderingVtF","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}]},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic":{"navigatorTitle":[{"text":"UnsafeAtomic","kind":"identifier"}],"kind":"symbol","title":"UnsafeAtomic","type":"topic","abstract":[{"type":"text","text":"An unsafe reference type holding an atomic value, requiring manual memory"},{"type":"text","text":" "},{"type":"text","text":"management of the underlying storage representation."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic","url":"\/documentation\/atomics\/unsafeatomic","role":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomic","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomic/compareExchange(expected:desired:ordering:)":{"type":"topic","abstract":[{"text":"Perform an atomic compare and exchange operation on the current value,","type":"text"},{"text":" ","type":"text"},{"text":"applying the specified memory ordering.","type":"text"}],"url":"\/documentation\/atomics\/unsafeatomic\/compareexchange(expected:desired:ordering:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"compareExchange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"expected"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"desired"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> (exchanged"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":", original"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"conformance":{"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"AtomicValue"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}]},"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomic\/compareExchange(expected:desired:ordering:)","kind":"symbol","title":"compareExchange(expected:desired:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicUpdateOrdering":{"abstract":[{"type":"text","text":"Specifies the memory ordering semantics of an atomic read-modify-write"},{"type":"text","text":" "},{"type":"text","text":"operation."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicUpdateOrdering"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicUpdateOrdering","navigatorTitle":[{"kind":"identifier","text":"AtomicUpdateOrdering"}],"url":"\/documentation\/atomics\/atomicupdateordering","title":"AtomicUpdateOrdering","type":"topic"}}}
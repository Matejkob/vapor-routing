{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/managedatomiclazyreference"]}],"abstract":[{"text":"A reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"text":"strong reference, with automatic memory management.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"title":"ManagedAtomicLazyReference","externalID":"s:7Atomics26ManagedAtomicLazyReferenceC","navigatorTitle":[{"kind":"identifier","text":"ManagedAtomicLazyReference"}],"role":"symbol","symbolKind":"class","roleHeading":"Class","modules":[{"name":"Atomics"}]},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/init()"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)"],"title":"Instance Methods"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/Value"],"title":"Type Aliases"}],"sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ManagedAtomicLazyReference"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Instance"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":" : AnyObject"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","anchor":"overview","type":"heading"},{"inlineContent":[{"type":"text","text":"These values can be set (initialized) exactly once, but read many"},{"type":"text","text":" "},{"type":"text","text":"times."}],"type":"paragraph"}],"kind":"content"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomicLazyReference/init()":{"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"kind":"symbol","role":"symbol","type":"topic","title":"init()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/init()","abstract":[{"type":"text","text":"Initializes a new managed atomic lazy reference with a nil value."}],"url":"\/documentation\/atomics\/managedatomiclazyreference\/init()"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomicLazyReference/Value":{"kind":"symbol","title":"ManagedAtomicLazyReference.Value","navigatorTitle":[{"text":"Value","kind":"identifier"}],"url":"\/documentation\/atomics\/managedatomiclazyreference\/value","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/Value","role":"symbol","abstract":[{"type":"text","text":"The value logically stored in an atomic lazy reference value."}],"type":"topic","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomicLazyReference/storeIfNilThenLoad(_:)":{"kind":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"storeIfNilThenLoad","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Instance","kind":"typeIdentifier"}],"abstract":[{"type":"text","text":"Atomically initializes this reference if its current value is nil, then"},{"text":" ","type":"text"},{"text":"returns the initialized value. If this reference is already initialized,","type":"text"},{"text":" ","type":"text"},{"text":"then ","type":"text"},{"code":"storeIfNilThenLoad(_:)","type":"codeVoice"},{"text":" discards its supplied argument and returns","type":"text"},{"text":" ","type":"text"},{"text":"the current value without updating it.","type":"text"}],"url":"\/documentation\/atomics\/managedatomiclazyreference\/storeifnilthenload(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/storeIfNilThenLoad(_:)","role":"symbol","title":"storeIfNilThenLoad(_:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomicLazyReference":{"kind":"symbol","title":"ManagedAtomicLazyReference","navigatorTitle":[{"text":"ManagedAtomicLazyReference","kind":"identifier"}],"url":"\/documentation\/atomics\/managedatomiclazyreference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference","role":"symbol","abstract":[{"type":"text","text":"A reference type holding a lazily initializable atomic"},{"type":"text","text":" "},{"type":"text","text":"strong reference, with automatic memory management."}],"type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ManagedAtomicLazyReference","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/ManagedAtomicLazyReference/load()":{"url":"\/documentation\/atomics\/managedatomiclazyreference\/load()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/ManagedAtomicLazyReference\/load()","title":"load()","abstract":[{"text":"Atomically loads and returns the current value of this reference.","type":"text"}],"type":"topic","kind":"symbol"}}}
{"abstract":[{"text":"Prepare this atomic storage value for deinitialization, extracting the","type":"text"},{"text":" ","type":"text"},{"text":"logical value it represents. This invalidates this atomic storage; you","type":"text"},{"text":" ","type":"text"},{"text":"must not perform any operations on it after this call (except for","type":"text"},{"text":" ","type":"text"},{"text":"deinitialization).","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage"]]},"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference"},{"text":"<","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":">.","kind":"text"},{"text":"Value","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value"}],"languages":["swift"],"platforms":["Linux"]}]},{"content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"This call prevents resource leaks when destroying the storage","type":"text"},{"text":" ","type":"text"},{"text":"representation of certain ","type":"text"},{"type":"codeVoice","code":"AtomicValue"},{"text":" types. (In particular, ones","type":"text"},{"text":" ","type":"text"},{"text":"that model strong references.)","type":"text"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Note: This is not an atomic operation. Logically, it implements a"},{"type":"text","text":" "},{"type":"text","text":"custom destructor for the underlying non-copiable value."}]}],"kind":"content"}],"kind":"symbol","metadata":{"role":"symbol","externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV7StorageV7disposexSgyF","modules":[{"name":"Atomics"}],"title":"dispose()","roleHeading":"Instance Method","symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"dispose"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UnsafeAtomicLazyReference","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Value","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference":{"abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"text":"strong reference, requiring manual memory management of the","type":"text"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","title":"UnsafeAtomicLazyReference","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Storage":{"abstract":[{"type":"text","text":"The storage representation for an atomic lazy reference value."}],"role":"symbol","navigatorTitle":[{"text":"Storage","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Storage","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage","title":"UnsafeAtomicLazyReference.Storage","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Value":{"abstract":[{"text":"The value logically stored in an atomic lazy reference value.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Value","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/value","title":"UnsafeAtomicLazyReference.Value","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/Storage/dispose()":{"abstract":[{"type":"text","text":"Prepare this atomic storage value for deinitialization, extracting the"},{"type":"text","text":" "},{"text":"logical value it represents. This invalidates this atomic storage; you","type":"text"},{"text":" ","type":"text"},{"text":"must not perform any operations on it after this call (except for","type":"text"},{"text":" ","type":"text"},{"text":"deinitialization).","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"dispose","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV","text":"UnsafeAtomicLazyReference"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":">."},{"kind":"typeIdentifier","preciseIdentifier":"s:7Atomics25UnsafeAtomicLazyReferenceV5Valuea","text":"Value"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/Storage\/dispose()","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/storage\/dispose()","title":"dispose()","type":"topic","kind":"symbol"}}}
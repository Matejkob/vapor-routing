{"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Instance","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"The load operation is performed with the memory ordering"},{"type":"text","text":" "},{"code":"AtomicLoadOrdering.acquiring","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"variants":[{"paths":["\/documentation\/atomics\/unsafeatomiclazyreference\/load()"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"load"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":"?"}],"modules":[{"name":"Atomics"}],"role":"symbol","externalID":"s:7Atomics25UnsafeAtomicLazyReferenceV4loadxSgyF","extendedModule":"Atomics","title":"load()","roleHeading":"Instance Method"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","interfaceLanguage":"swift"},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference"]]},"kind":"symbol","abstract":[{"text":"Atomically loads and returns the current value of this reference.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference/load()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference\/load()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"load","kind":"identifier"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Instance"},{"kind":"text","text":"?"}],"title":"load()","type":"topic","url":"\/documentation\/atomics\/unsafeatomiclazyreference\/load()","role":"symbol","abstract":[{"text":"Atomically loads and returns the current value of this reference.","type":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/UnsafeAtomicLazyReference":{"abstract":[{"text":"An unsafe reference type holding a lazily initializable atomic","type":"text"},{"text":" ","type":"text"},{"text":"strong reference, requiring manual memory management of the","type":"text"},{"text":" ","type":"text"},{"text":"underlying storage representation.","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"UnsafeAtomicLazyReference","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/UnsafeAtomicLazyReference","url":"\/documentation\/atomics\/unsafeatomiclazyreference","title":"UnsafeAtomicLazyReference","type":"topic","kind":"symbol"}}}
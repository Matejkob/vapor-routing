{"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)"],"title":"Type Methods"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"]]},"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage","preciseIdentifier":"s:7Atomics13AtomicStorageP","kind":"typeIdentifier","text":"AtomicStorage"}]}],"kind":"declarations"},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"text":"This is a low-level implementation detail of atomic types; instead","type":"text"},{"text":" ","type":"text"},{"text":"of directly handling conforming types, it is usually better to use","type":"text"},{"text":" ","type":"text"},{"text":"the ","type":"text"},{"code":"UnsafeAtomic","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics â€“ these provide a","type":"text"},{"text":" ","type":"text"},{"text":"more reliable interface while ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"],"title":"Inherits From","type":"inheritsFrom","kind":"relationships"}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"symbolKind":"protocol","roleHeading":"Protocol","externalID":"s:7Atomics20AtomicIntegerStorageP","title":"AtomicIntegerStorage","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"}],"navigatorTitle":[{"kind":"identifier","text":"AtomicIntegerStorage"}],"role":"symbol","modules":[{"name":"Atomics"}]},"abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/atomics\/atomicintegerstorage"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseOr(with:at:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseOr(with:at:ordering:)","required":true,"url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseor(with:at:ordering:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenBitwiseOr"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutablePointer","preciseIdentifier":"s:Sp"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"AtomicUpdateOrdering","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"kind":"symbol","role":"symbol","title":"atomicLoadThenBitwiseOr(with:at:ordering:)","abstract":[{"text":"Perform an atomic bitwise OR operation on the value referenced by","type":"text"},{"text":" ","type":"text"},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}]},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingDecrement(by:at:ordering:)":{"kind":"symbol","title":"atomicLoadThenWrappingDecrement(by:at:ordering:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenWrappingDecrement"},{"kind":"text","text":"("},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingdecrement(by:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping decrement operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingDecrement(by:at:ordering:)","required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics":{"abstract":[],"url":"\/documentation\/atomics","title":"Atomics","role":"collection","type":"topic","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage","kind":"symbol","abstract":[{"type":"text","text":"The storage representation for an atomic integer value, providing"},{"type":"text","text":" "},{"type":"text","text":"pointer-based atomic operations."}],"url":"\/documentation\/atomics\/atomicintegerstorage","navigatorTitle":[{"kind":"identifier","text":"AtomicIntegerStorage"}],"title":"AtomicIntegerStorage","type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"AtomicIntegerStorage"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenWrappingIncrement(by:at:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenWrappingIncrement(by:at:ordering:)","title":"atomicLoadThenWrappingIncrement(by:at:ordering:)","url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenwrappingincrement(by:at:ordering:)","abstract":[{"type":"text","text":"Perform an atomic wrapping increment operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"atomicLoadThenWrappingIncrement","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"by"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sp","text":"UnsafeMutablePointer"},{"text":"<","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"ordering","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"AtomicUpdateOrdering","kind":"typeIdentifier","preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV"},{"text":") -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"role":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseAnd(with:at:ordering:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseAnd(with:at:ordering:)","kind":"symbol","abstract":[{"type":"text","text":"Perform an atomic bitwise AND operation on the value referenced by"},{"type":"text","text":" "},{"code":"pointer","type":"codeVoice"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwiseand(with:at:ordering:)","required":true,"title":"atomicLoadThenBitwiseAnd(with:at:ordering:)","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenBitwiseAnd"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicIntegerStorage/atomicLoadThenBitwiseXor(with:at:ordering:)":{"abstract":[{"type":"text","text":"Perform an atomic bitwise XOR operation on the value referenced by"},{"type":"text","text":" "},{"type":"codeVoice","code":"pointer"},{"type":"text","text":" and return the original value, applying the specified memory"},{"type":"text","text":" "},{"type":"text","text":"ordering."}],"url":"\/documentation\/atomics\/atomicintegerstorage\/atomicloadthenbitwisexor(with:at:ordering:)","role":"symbol","type":"topic","kind":"symbol","title":"atomicLoadThenBitwiseXor(with:at:ordering:)","required":true,"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"atomicLoadThenBitwiseXor"},{"kind":"text","text":"("},{"kind":"externalParam","text":"with"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"at"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sp","kind":"typeIdentifier","text":"UnsafeMutablePointer"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"ordering"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7Atomics20AtomicUpdateOrderingV","kind":"typeIdentifier","text":"AtomicUpdateOrdering"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Value"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicIntegerStorage\/atomicLoadThenBitwiseXor(with:at:ordering:)"},"doc://co.pointfree.VaporRouting/documentation/Atomics/AtomicStorage":{"url":"\/documentation\/atomics\/atomicstorage","title":"AtomicStorage","navigatorTitle":[{"text":"AtomicStorage","kind":"identifier"}],"abstract":[{"text":"The storage representation for an atomic value, providing pointer-based","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"atomic operations. This is a low-level implementation detail of atomic"},{"type":"text","text":" "},{"type":"text","text":"types; instead of directly handling conforming types, it is usually better"},{"type":"text","text":" "},{"type":"text","text":"to use the "},{"type":"codeVoice","code":"UnsafeAtomic"},{"text":" or ","type":"text"},{"code":"ManagedAtomic","type":"codeVoice"},{"text":" generics â€“ these provide more","type":"text"},{"text":" ","type":"text"},{"text":"convenient and safer interfaces while also ensuring that the storage is","type":"text"},{"text":" ","type":"text"},{"text":"correctly constructed and destroyed.","type":"text"}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"AtomicStorage","kind":"identifier"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/Atomics\/AtomicStorage"}}}
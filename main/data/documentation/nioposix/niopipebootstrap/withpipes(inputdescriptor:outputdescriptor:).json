{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"metadata":{"roleHeading":"Instance Method","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:8NIOPosix16NIOPipeBootstrapC9withPipes15inputDescriptor06outputG07NIOCore15EventLoopFutureCyAG7Channel_pGs5Int32V_AMtF","title":"withPipes(inputDescriptor:outputDescriptor:)","modules":[{"name":"NIOPosix"}],"symbolKind":"method"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withPipes"},{"kind":"text","text":"("},{"kind":"externalParam","text":"inputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":", "},{"kind":"externalParam","text":"outputDescriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4CInta","text":"CInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"text":"Channel","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"text":">","kind":"text"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"text":"The ","type":"text"},{"inlineContent":[{"type":"text","text":"Unix file descriptor"}],"type":"emphasis"},{"text":" for the input (ie. the read side).","type":"text"}],"type":"paragraph"}],"name":"inputDescriptor"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"emphasis","inlineContent":[{"type":"text","text":"Unix file descriptor"}]},{"type":"text","text":" for the output (ie. the write side)."}],"type":"paragraph"}],"name":"outputDescriptor"}]},{"content":[{"anchor":"return-value","text":"Return Value","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"an ","type":"text"},{"code":"EventLoopFuture<Channel>","type":"codeVoice"},{"text":" to deliver the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"text":"Discussion","type":"heading","anchor":"discussion"},{"type":"paragraph","inlineContent":[{"text":"The input and output file descriptors must be distinct. If you have a single file descriptor, consider using","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ClientBootstrap.withConnectedSocket(descriptor:)"},{"text":" if itâ€™s a socket or","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOPipeBootstrap.withInputOutputDescriptor"},{"text":" if it is not a socket.","type":"text"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"If this method returns a succeeded future, SwiftNIO will close "},{"type":"codeVoice","code":"inputDescriptor"},{"type":"text","text":" and "},{"type":"codeVoice","code":"outputDescriptor"},{"type":"text","text":" "},{"type":"text","text":"when the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" becomes inactive. You "},{"inlineContent":[{"type":"text","text":"must not"}],"type":"emphasis"},{"type":"text","text":" do any further operations "},{"type":"codeVoice","code":"inputDescriptor"},{"type":"text","text":" or"},{"type":"text","text":" "},{"type":"codeVoice","code":"outputDescriptor"},{"type":"text","text":", including "},{"type":"codeVoice","code":"close"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If this method returns a failed future, you still own the file descriptors and are responsible for"},{"type":"text","text":" "},{"type":"text","text":"closing them."}]}],"name":"Note","type":"aside","style":"note"}],"kind":"content"}],"sections":[],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap"]]},"abstract":[{"type":"text","text":"Create the "},{"code":"PipeChannel","type":"codeVoice"},{"type":"text","text":" with the provided input and output file descriptors."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withPipes(inputDescriptor:outputDescriptor:)":{"role":"symbol","title":"withPipes(inputDescriptor:outputDescriptor:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","kind":"symbol","type":"topic","abstract":[{"text":"Create the ","type":"text"},{"type":"codeVoice","code":"PipeChannel"},{"text":" with the provided input and output file descriptors.","type":"text"}],"url":"\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap":{"abstract":[{"type":"text","text":"A "},{"code":"NIOPipeBootstrap","type":"codeVoice"},{"type":"text","text":" is an easy way to bootstrap a "},{"code":"PipeChannel","type":"codeVoice"},{"type":"text","text":" which uses two (uni-directional) UNIX pipes"},{"type":"text","text":" "},{"type":"text","text":"and makes a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" out of them."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap","url":"\/documentation\/nioposix\/niopipebootstrap","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPipeBootstrap","kind":"identifier"}],"kind":"symbol","title":"NIOPipeBootstrap","navigatorTitle":[{"text":"NIOPipeBootstrap","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel"}}}
{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)"]}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"protocolHandlers","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"handlers","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" () -> [","kind":"text"},{"text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler"},{"text":"]) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"text":"Discussion","type":"heading","level":2,"anchor":"discussion"},{"inlineContent":[{"text":"Per bootstrap, you can only set the ","type":"text"},{"type":"codeVoice","code":"protocolHandlers"},{"text":" once. Typically, ","type":"text"},{"type":"codeVoice","code":"protocolHandlers"},{"text":" are used for the TLS","type":"text"},{"text":" ","type":"text"},{"text":"implementation. Most notably, ","type":"text"},{"type":"codeVoice","code":"NIOClientTCPBootstrap"},{"text":", NIO’s “universal bootstrap” abstraction, uses","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"protocolHandlers"},{"text":" to add the required ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s for many TLS implementations.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","interfaceLanguage":"swift"},"metadata":{"role":"symbol","externalID":"s:8NIOPosix15ClientBootstrapC16protocolHandlersyACXDSay7NIOCore14ChannelHandler_pGycF","modules":[{"name":"NIOPosix"}],"title":"protocolHandlers(_:)","symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"protocolHandlers","kind":"identifier"},{"text":"(() -> [","kind":"text"},{"text":"ChannelHandler","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","kind":"typeIdentifier"},{"text":"]) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Self"}],"roleHeading":"Instance Method"},"abstract":[{"text":"Sets the protocol handlers that will be added to the front of the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" right after the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"channelInitializer"},{"text":" has been called.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"kind":"symbol","sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandler":{"abstract":[{"type":"text","text":"You should "},{"type":"emphasis","inlineContent":[{"text":"never","type":"text"}]},{"type":"text","text":" implement this protocol directly. Please implement one of its sub-protocols."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandler","type":"topic","role":"symbol","title":"ChannelHandler","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelHandler","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/niocore\/channelhandler","navigatorTitle":[{"text":"ChannelHandler","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap/protocolHandlers(_:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"protocolHandlers"},{"kind":"text","text":"(() -> ["},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14ChannelHandlerP","text":"ChannelHandler"},{"kind":"text","text":"]) -> "},{"kind":"typeIdentifier","text":"Self"}],"title":"protocolHandlers(_:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap\/protocolHandlers(_:)","abstract":[{"type":"text","text":"Sets the protocol handlers that will be added to the front of the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" right after the"},{"type":"text","text":" "},{"type":"codeVoice","code":"channelInitializer"},{"type":"text","text":" has been called."}],"kind":"symbol","url":"\/documentation\/nioposix\/clientbootstrap\/protocolhandlers(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ClientBootstrap":{"role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"ClientBootstrap","type":"codeVoice"},{"text":" is an easy way to bootstrap a ","type":"text"},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" when creating network clients."}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ClientBootstrap"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ClientBootstrap"}],"title":"ClientBootstrap","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ClientBootstrap","url":"\/documentation\/nioposix\/clientbootstrap","kind":"symbol"}}}
{"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool"]]},"abstract":[{"text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise.","type":"text"},{"text":" ","type":"text"},{"text":"The closure will be run on the thread pool so can do blocking work.","type":"text"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"externalID":"s:8NIOPosix13NIOThreadPoolC11runIfActive9eventLoop_7NIOCore05EventH6FutureCyxGAF0jH0_p_xyKctlF","title":"runIfActive(eventLoop:_:)","role":"symbol","symbolKind":"method","extendedModule":"NIOPosix","modules":[{"name":"NIOPosix"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runIfActive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"roleHeading":"Instance Method"},"variants":[{"paths":["\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"runIfActive"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","text":"EventLoop"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"body"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"eventLoop","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" the returned "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" will fire on."}]}]},{"name":"body","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The closure which performs some blocking work to be done on the thread pool."}]}]}],"kind":"parameters"},{"content":[{"type":"heading","level":2,"anchor":"return-value","text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" of "},{"type":"codeVoice","code":"promise"},{"type":"text","text":" fulfilled with the result (or error) of the passed closure."}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"url":"\/documentation\/niocore\/eventloop","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/runIfActive(eventLoop:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","url":"\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)","role":"symbol","abstract":[{"text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise.","type":"text"},{"text":" ","type":"text"},{"text":"The closure will be run on the thread pool so can do blocking work.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runIfActive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","title":"runIfActive(eventLoop:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool":{"abstract":[{"type":"text","text":"A thread pool that should be used if some (kernel thread) blocking work"},{"type":"text","text":" "},{"type":"text","text":"needs to be performed for which no non-blocking API exists."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOThreadPool"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}],"title":"NIOThreadPool","url":"\/documentation\/nioposix\/niothreadpool"}}}
{"abstract":[{"type":"text","text":"A thread pool that should be used if some (kernel thread) blocking work"},{"type":"text","text":" "},{"type":"text","text":"needs to be performed for which no non-blocking API exists."}],"schemaVersion":{"minor":3,"patch":0,"major":0},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"]}],"kind":"symbol","metadata":{"roleHeading":"Class","role":"symbol","externalID":"s:8NIOPosix13NIOThreadPoolC","symbolKind":"class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}],"title":"NIOThreadPool","navigatorTitle":[{"kind":"identifier","text":"NIOThreadPool"}],"modules":[{"name":"NIOPosix"}]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/init(numberOfThreads:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(queue:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/start()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/submit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/syncShutdownGracefully()"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItem"]},{"title":"Enumerations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItemState"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/niothreadpool"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"inlineContent":[{"type":"text","text":"When using NIO it is crucial not to block any of the "},{"code":"EventLoop","type":"codeVoice"},{"type":"text","text":"s as that"},{"type":"text","text":" "},{"type":"text","text":"leads to slow downs or stalls of arbitrary other work. Unfortunately though"},{"type":"text","text":" "},{"type":"text","text":"there are tasks that applications need to achieve for which no non-blocking"},{"type":"text","text":" "},{"type":"text","text":"APIs exist. In those cases "},{"code":"NIOThreadPool","type":"codeVoice"},{"type":"text","text":" can be used but should be"},{"type":"text","text":" "},{"type":"text","text":"treated as a last resort."}],"type":"paragraph"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The prime example for missing non-blocking APIs is file IO on UNIX."},{"type":"text","text":" "},{"type":"text","text":"The OS does not provide a usable and truly non-blocking API but with"},{"type":"text","text":" "},{"type":"codeVoice","code":"NonBlockingFileIO"},{"type":"text","text":" NIO provides a high-level API for file IO that should"},{"type":"text","text":" "},{"type":"text","text":"be preferred to running blocking file IO system calls directly on"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOThreadPool"},{"type":"text","text":". Under the covers "},{"type":"codeVoice","code":"NonBlockingFileIO"},{"type":"text","text":" will use"},{"type":"text","text":" "},{"type":"codeVoice","code":"NIOThreadPool"},{"type":"text","text":" on all currently supported platforms though."}]}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool":{"abstract":[{"type":"text","text":"A thread pool that should be used if some (kernel thread) blocking work"},{"type":"text","text":" "},{"type":"text","text":"needs to be performed for which no non-blocking API exists."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOThreadPool"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOThreadPool"}],"title":"NIOThreadPool","url":"\/documentation\/nioposix\/niothreadpool"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/shutdownGracefully(_:)":{"url":"\/documentation\/nioposix\/niothreadpool\/shutdowngracefully(_:)","title":"shutdownGracefully(_:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}],"abstract":[],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/WorkItem":{"kind":"symbol","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"WorkItem"}],"url":"\/documentation\/nioposix\/niothreadpool\/workitem","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItem","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkItem"}],"title":"NIOThreadPool.WorkItem","abstract":[{"text":"The work that should be done by the ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/WorkItemState":{"kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"WorkItemState"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/WorkItemState","url":"\/documentation\/nioposix\/niothreadpool\/workitemstate","navigatorTitle":[{"kind":"identifier","text":"WorkItemState"}],"title":"NIOThreadPool.WorkItemState","role":"symbol","abstract":[{"text":"The state of the ","type":"text"},{"type":"codeVoice","code":"WorkItem"},{"text":".","type":"text"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/shutdownGracefully(queue:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", (","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":"?) -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/shutdownGracefully(queue:_:)","url":"\/documentation\/nioposix\/niothreadpool\/shutdowngracefully(queue:_:)","title":"shutdownGracefully(queue:_:)","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Gracefully shutdown this "},{"type":"codeVoice","code":"NIOThreadPool"},{"type":"text","text":". All tasks will be run before shutdown will take place."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/submit(_:)":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC","text":"NIOThreadPool","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8NIOPosix13NIOThreadPoolC8WorkItema","text":"WorkItem","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/nioposix\/niothreadpool\/submit(_:)","title":"submit(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/submit(_:)","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Submit a "},{"type":"codeVoice","code":"WorkItem"},{"text":" to process.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/init(numberOfThreads:)":{"title":"init(numberOfThreads:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/init(numberOfThreads:)","abstract":[{"text":"Initialize a ","type":"text"},{"code":"NIOThreadPool","type":"codeVoice"},{"text":" thread pool with ","type":"text"},{"code":"numberOfThreads","type":"codeVoice"},{"text":" threads.","type":"text"}],"fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"numberOfThreads","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/nioposix\/niothreadpool\/init(numberofthreads:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/runIfActive(eventLoop:_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/runIfActive(eventLoop:_:)","url":"\/documentation\/nioposix\/niothreadpool\/runifactive(eventloop:_:)","role":"symbol","abstract":[{"text":"Runs the submitted closure if the thread pool is still active, otherwise fails the promise.","type":"text"},{"text":" ","type":"text"},{"text":"The closure will be run on the thread pool so can do blocking work.","type":"text"}],"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runIfActive","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"kind":"text","text":">("},{"kind":"externalParam","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoop","preciseIdentifier":"s:7NIOCore9EventLoopP"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","title":"runIfActive(eventLoop:_:)"},"doc://co.pointfree.VaporRouting/s8SendableP":{"title":"Swift.Sendable","type":"unresolvable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/syncShutdownGracefully()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/syncShutdownGracefully()","url":"\/documentation\/nioposix\/niothreadpool\/syncshutdowngracefully()","title":"syncShutdownGracefully()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"syncShutdownGracefully"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"}],"kind":"symbol","abstract":[],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOThreadPool/start()":{"type":"topic","title":"start()","url":"\/documentation\/nioposix\/niothreadpool\/start()","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOThreadPool\/start()","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"()"}],"abstract":[{"text":"Start the ","type":"text"},{"type":"codeVoice","code":"NIOThreadPool"},{"type":"text","text":" if not already started."}]}}}
{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap","interfaceLanguage":"swift"},"sections":[],"kind":"symbol","topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(group:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(validatingGroup:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelInitializer(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelOption(_:value:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withInputOutputDescriptor(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)"]}],"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"text":" is an easy way to bootstrap a ","type":"text"},{"type":"codeVoice","code":"PipeChannel"},{"text":" which uses two (uni-directional) UNIX pipes","type":"text"},{"text":" ","type":"text"},{"text":"and makes a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" out of them.","type":"text"}],"variants":[{"paths":["\/documentation\/nioposix\/niopipebootstrap"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPipeBootstrap"}]}]},{"content":[{"level":2,"text":"Overview","type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"text":"Example bootstrapping a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" using ","type":"text"},{"code":"stdin","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"stdout","type":"codeVoice"},{"text":":","type":"text"}]},{"code":["let channel = try NIOPipeBootstrap(group: group)","                  .channelInitializer { channel in","                      channel.pipeline.addHandler(MyChannelHandler())","                  }","                  .withPipes(inputDescriptor: STDIN_FILENO, outputDescriptor: STDOUT_FILENO)"],"syntax":null,"type":"codeListing"}],"kind":"content"}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"NIOPipeBootstrap"}],"modules":[{"name":"NIOPosix"}],"role":"symbol","symbolKind":"class","title":"NIOPipeBootstrap","roleHeading":"Class","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPipeBootstrap"}],"externalID":"s:8NIOPosix16NIOPipeBootstrapC"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap":{"abstract":[{"type":"text","text":"A "},{"code":"NIOPipeBootstrap","type":"codeVoice"},{"type":"text","text":" is an easy way to bootstrap a "},{"code":"PipeChannel","type":"codeVoice"},{"type":"text","text":" which uses two (uni-directional) UNIX pipes"},{"type":"text","text":" "},{"type":"text","text":"and makes a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" out of them."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap","url":"\/documentation\/nioposix\/niopipebootstrap","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOPipeBootstrap","kind":"identifier"}],"kind":"symbol","title":"NIOPipeBootstrap","navigatorTitle":[{"text":"NIOPipeBootstrap","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/channelOption(_:value:)":{"role":"symbol","title":"channelOption(_:value:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelOption(_:value:)","kind":"symbol","type":"topic","abstract":[{"text":"Specifies a ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"text":" to be applied to the ","type":"text"},{"type":"codeVoice","code":"PipeChannel"},{"text":".","type":"text"}],"url":"\/documentation\/nioposix\/niopipebootstrap\/channeloption(_:value:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Self"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withPipes(inputDescriptor:outputDescriptor:)":{"role":"symbol","title":"withPipes(inputDescriptor:outputDescriptor:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withPipes(inputDescriptor:outputDescriptor:)","kind":"symbol","type":"topic","abstract":[{"text":"Create the ","type":"text"},{"type":"codeVoice","code":"PipeChannel"},{"text":" with the provided input and output file descriptors.","type":"text"}],"url":"\/documentation\/nioposix\/niopipebootstrap\/withpipes(inputdescriptor:outputdescriptor:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"withPipes","kind":"identifier"},{"text":"(","kind":"text"},{"text":"inputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"outputDescriptor","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/init(group:)":{"role":"symbol","kind":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"group","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","title":"init(group:)","abstract":[{"type":"text","text":"Create a "},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"type":"text","text":" on the "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" "},{"type":"codeVoice","code":"group"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(group:)","url":"\/documentation\/nioposix\/niopipebootstrap\/init(group:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/init(validatingGroup:)":{"title":"init(validatingGroup:)","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/init(validatingGroup:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"kind":"externalParam","text":"validatingGroup"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"EventLoopGroup","preciseIdentifier":"s:7NIOCore14EventLoopGroupP"},{"text":")","kind":"text"}],"abstract":[{"text":"Create a ","type":"text"},{"type":"codeVoice","code":"NIOPipeBootstrap"},{"text":" on the ","type":"text"},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" ","type":"text"},{"type":"codeVoice","code":"group"},{"text":", validating that ","type":"text"},{"type":"codeVoice","code":"group"},{"text":" is compatible.","type":"text"}],"url":"\/documentation\/nioposix\/niopipebootstrap\/init(validatinggroup:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/channelInitializer(_:)":{"title":"channelInitializer(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Self","kind":"typeIdentifier"}],"role":"symbol","abstract":[{"text":"Initialize the connected ","type":"text"},{"type":"codeVoice","code":"PipeChannel"},{"text":" with ","type":"text"},{"type":"codeVoice","code":"initializer"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelHandler"},{"text":"s to the ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/channelInitializer(_:)","url":"\/documentation\/nioposix\/niopipebootstrap\/channelinitializer(_:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/NIOPipeBootstrap/withInputOutputDescriptor(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/NIOPipeBootstrap\/withInputOutputDescriptor(_:)","title":"withInputOutputDescriptor(_:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withInputOutputDescriptor"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP"},{"kind":"text","text":">"}],"url":"\/documentation\/nioposix\/niopipebootstrap\/withinputoutputdescriptor(_:)","kind":"symbol","abstract":[{"type":"text","text":"Create the "},{"type":"codeVoice","code":"PipeChannel"},{"type":"text","text":" with the provided file descriptor which is used for both input & output."}],"role":"symbol"}}}
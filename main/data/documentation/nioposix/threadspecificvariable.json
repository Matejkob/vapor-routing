{"abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"ThreadSpecificVariable"},{"text":" is a variable that can be read and set like a normal variable except that it holds","type":"text"},{"text":" ","type":"text"},{"text":"different variables per thread.","type":"text"}],"kind":"symbol","sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"relationshipsSections":[{"kind":"relationships","identifiers":["doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"title":"Conforms To","type":"conformsTo"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadSpecificVariable"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":" : AnyObject"}],"languages":["swift"]}]},{"kind":"content","content":[{"text":"Overview","level":2,"type":"heading","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"codeVoice","code":"ThreadSpecificVariable"},{"text":" is thread-safe so it can be used with multiple threads at the same time but the value","type":"text"},{"text":" ","type":"text"},{"type":"text","text":"returned by "},{"type":"codeVoice","code":"currentValue"},{"type":"text","text":" is defined per thread."}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/threadspecificvariable"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable"},"metadata":{"title":"ThreadSpecificVariable","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ThreadSpecificVariable"}],"roleHeading":"Class","modules":[{"name":"NIOPosix"}],"externalID":"s:8NIOPosix22ThreadSpecificVariableC","symbolKind":"class","navigatorTitle":[{"kind":"identifier","text":"ThreadSpecificVariable"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix"]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable\/init()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable\/init(value:)"],"title":"Initializers"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable\/currentValue"],"title":"Instance Properties"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ThreadSpecificVariable":{"role":"symbol","navigatorTitle":[{"text":"ThreadSpecificVariable","kind":"identifier"}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ThreadSpecificVariable","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"ThreadSpecificVariable","type":"codeVoice"},{"text":" is a variable that can be read and set like a normal variable except that it holds","type":"text"},{"text":" ","type":"text"},{"text":"different variables per thread.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable","title":"ThreadSpecificVariable","type":"topic","url":"\/documentation\/nioposix\/threadspecificvariable"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ThreadSpecificVariable/init()":{"url":"\/documentation\/nioposix\/threadspecificvariable\/init()","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable\/init()","title":"init()","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Initialize a new ","type":"text"},{"code":"ThreadSpecificVariable","type":"codeVoice"},{"text":" without a current value (","type":"text"},{"code":"currentValue == nil","type":"codeVoice"},{"text":").","type":"text"}],"kind":"symbol","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ThreadSpecificVariable/init(value:)":{"role":"symbol","fragments":[{"text":"convenience","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":")"}],"abstract":[{"text":"Initialize a new ","type":"text"},{"code":"ThreadSpecificVariable","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"value","type":"codeVoice"},{"text":" for the calling thread. After calling this, the calling","type":"text"},{"text":" ","type":"text"},{"text":"thread will see ","type":"text"},{"code":"currentValue == value","type":"codeVoice"},{"text":" but on all other threads ","type":"text"},{"code":"currentValue","type":"codeVoice"},{"text":" will be ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" until changed.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable\/init(value:)","title":"init(value:)","type":"topic","url":"\/documentation\/nioposix\/threadspecificvariable\/init(value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/ThreadSpecificVariable/currentValue":{"abstract":[{"type":"text","text":"The value for the current thread."}],"kind":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"currentValue","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","url":"\/documentation\/nioposix\/threadspecificvariable\/currentvalue","title":"currentValue","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/ThreadSpecificVariable\/currentValue","type":"topic"},"doc://co.pointfree.VaporRouting/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable"}}}
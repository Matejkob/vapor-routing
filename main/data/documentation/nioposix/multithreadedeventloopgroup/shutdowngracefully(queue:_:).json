{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioposix\/multithreadedeventloopgroup\/shutdowngracefully(queue:_:)"]}],"abstract":[{"type":"text","text":"Shut this "},{"type":"codeVoice","code":"MultiThreadedEventLoopGroup"},{"type":"text","text":" down which causes the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s and their associated threads to be"},{"type":"text","text":" "},{"type":"text","text":"shut down and release their resources."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)","interfaceLanguage":"swift"},"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup"]]},"metadata":{"externalID":"s:8NIOPosix27MultiThreadedEventLoopGroupC18shutdownGracefully5queue_y8Dispatch0J5QueueC_ys5Error_pSgctF","modules":[{"name":"NIOPosix"}],"role":"symbol","title":"shutdownGracefully(queue:_:)","symbolKind":"method","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"shutdownGracefully","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", (","kind":"text"},{"text":"Error","kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP"},{"text":"?) -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":")","kind":"text"}]},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"DispatchQueue"},{"text":" to run ","type":"text"},{"type":"codeVoice","code":"handler"},{"text":" on when the shutdown operation completes.","type":"text"}]}],"name":"queue"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The handler which is called after the shutdown operation completes. The parameter will be ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" ","type":"text"},{"text":"on success and contain the ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":" otherwise.","type":"text"}]}],"name":"handler"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Even though calling ","type":"text"},{"code":"shutdownGracefully","type":"codeVoice"},{"text":" more than once should be avoided, it is safe to do so and execution","type":"text"},{"text":" ","type":"text"},{"text":"of the ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" is guaranteed.","type":"text"}]}],"kind":"content"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOPosix":{"title":"NIOPosix","url":"\/documentation\/nioposix","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix","abstract":[],"type":"topic","kind":"symbol","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" which will create multiple "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s, each tied to its own "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup","role":"symbol","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}],"title":"MultiThreadedEventLoopGroup","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MultiThreadedEventLoopGroup"}]},"doc://co.pointfree.VaporRouting/documentation/NIOPosix/MultiThreadedEventLoopGroup/shutdownGracefully(queue:_:)":{"type":"topic","url":"\/documentation\/nioposix\/multithreadedeventloopgroup\/shutdowngracefully(queue:_:)","role":"symbol","title":"shutdownGracefully(queue:_:)","abstract":[{"type":"text","text":"Shut this "},{"code":"MultiThreadedEventLoopGroup","type":"codeVoice"},{"type":"text","text":" down which causes the "},{"code":"EventLoop","type":"codeVoice"},{"text":"s and their associated threads to be","type":"text"},{"text":" ","type":"text"},{"text":"shut down and release their resources.","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"shutdownGracefully"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queue"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOPosix\/MultiThreadedEventLoopGroup\/shutdownGracefully(queue:_:)"}}}
{"abstract":[{"text":"Updates the value stored in the dictionary for the given key, or inserts a","type":"text"},{"text":" ","type":"text"},{"text":"new key-value pair at the specified index if the key does not exist.","type":"text"}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)"},"variants":[{"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"key","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"index","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The new value to add to the dictionary.","type":"text"}]}],"name":"value"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The key to associate with "},{"type":"codeVoice","code":"value"},{"type":"text","text":". If "},{"type":"codeVoice","code":"key"},{"type":"text","text":" already exists in"},{"type":"text","text":" "},{"type":"text","text":"the dictionary, "},{"type":"codeVoice","code":"value"},{"type":"text","text":" replaces the existing associated value. If"},{"type":"text","text":" "},{"type":"codeVoice","code":"key"},{"type":"text","text":" isn’t already a key of the dictionary, the "},{"type":"codeVoice","code":"(key, value)"},{"type":"text","text":" pair"},{"type":"text","text":" "},{"type":"text","text":"is inserted."}]}],"name":"key"},{"content":[{"inlineContent":[{"text":"The index at which to insert the key, if it doesn’t already","type":"text"},{"text":" ","type":"text"},{"text":"exist.","type":"text"}],"type":"paragraph"}],"name":"index"}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"A pair ","type":"text"},{"code":"(old, index)","type":"codeVoice"},{"text":", where ","type":"text"},{"code":"old","type":"codeVoice"},{"text":" is the value that was","type":"text"},{"text":" ","type":"text"},{"text":"replaced, or ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":" if a new key-value pair was added, and ","type":"text"},{"code":"index","type":"codeVoice"},{"text":" ","type":"text"},{"text":"is the index corresponding to the updated (or inserted) value.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this method instead of key-based subscripting when you need to insert","type":"text"},{"text":" ","type":"text"},{"text":"new keys at a particular index. You can use the return value to","type":"text"},{"text":" ","type":"text"},{"text":"determine whether or not the new value supplanted the value of an existing","type":"text"},{"text":" ","type":"text"},{"text":"key.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If the value of an existing key is updated,","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"updateValue(_:forKey:insertingAt:)"},{"text":" returns the original value and its","type":"text"},{"text":" ","type":"text"},{"text":"index.","type":"text"}]},{"type":"codeListing","code":["var hues: OrderedDictionary = [","    \"Heliotrope\": 296,","    \"Coral\": 16,","    \"Aquamarine\": 156]","let newIndex = hues.startIndex","let (old, index) =","    hues.updateValue(18, forKey: \"Coral\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","}","\/\/ Prints \"The value '16' at offset 1 was replaced.\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If the given key is not present in the dictionary, this method inserts the","type":"text"},{"text":" ","type":"text"},{"text":"key-value pair at the specified index and returns ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]},{"type":"codeListing","code":["let (old, index) =","    hues.updateValue(330, forKey: \"Cerise\", insertingAt: newIndex)","if let old = old {","    print(\"The value '\\(old)' at offset \\(index.offset) was replaced.\")","} else {","    print(\"A new value was inserted at offset \\(index.offset).\")","}","\/\/ Prints \"A new value was inserted at offset 0.\")"],"syntax":null},{"content":[{"type":"paragraph","inlineContent":[{"text":"O(","type":"text"},{"type":"codeVoice","code":"count"},{"text":")","type":"text"}]}],"type":"aside","name":"Complexity","style":"note"}]}],"metadata":{"conformance":{"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}]},"externalID":"s:18OrderedCollections0A10DictionaryV11updateValue_6forKey11insertingAtq_Sg14originalMember_Si5indextq__xSitF","extendedModule":"OrderedCollections","modules":[{"name":"OrderedCollections"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"updateValue(_:forKey:insertingAt:)"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"title":"OrderedCollections","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/orderedcollections"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(_:forKey:insertingAt:)":{"title":"updateValue(_:forKey:insertingAt:)","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:insertingAt:)","role":"symbol","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"insertingAt","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:insertingat:)","type":"topic","abstract":[{"text":"Updates the value stored in the dictionary for the given key, or inserts a","type":"text"},{"text":" ","type":"text"},{"text":"new key-value pair at the specified index if the key does not exist.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"text":"An ordered collection of key-value pairs.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"title":"OrderedDictionary","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol"}}}
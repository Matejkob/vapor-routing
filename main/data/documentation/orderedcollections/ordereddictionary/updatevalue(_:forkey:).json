{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:)"]}],"abstract":[{"text":"Updates the value stored in the dictionary for the given key, or appends a","type":"text"},{"text":" ","type":"text"},{"text":"new key-value pair if the key does not exist.","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary"]]},"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":" "},{"kind":"internalParam","text":"key"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The new value to add to the dictionary."}]}],"name":"value"},{"content":[{"inlineContent":[{"text":"The key to associate with ","type":"text"},{"type":"codeVoice","code":"value"},{"text":". If ","type":"text"},{"type":"codeVoice","code":"key"},{"text":" already exists in","type":"text"},{"text":" ","type":"text"},{"text":"the dictionary, ","type":"text"},{"type":"codeVoice","code":"value"},{"type":"text","text":" replaces the existing associated value. If"},{"type":"text","text":" "},{"code":"key","type":"codeVoice"},{"type":"text","text":" isnâ€™t already a key of the dictionary, the "},{"code":"(key, value)","type":"codeVoice"},{"type":"text","text":" pair"},{"type":"text","text":" "},{"type":"text","text":"is added."}],"type":"paragraph"}],"name":"key"}]},{"kind":"content","content":[{"type":"heading","anchor":"return-value","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The value that was replaced, or "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if a new key-value pair"},{"type":"text","text":" "},{"type":"text","text":"was added."}]}]},{"kind":"content","content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"paragraph","inlineContent":[{"text":"Use this method instead of key-based subscripting when you need to know","type":"text"},{"text":" ","type":"text"},{"text":"whether the new value supplants the value of an existing key. If the","type":"text"},{"text":" ","type":"text"},{"text":"value of an existing key is updated, ","type":"text"},{"code":"updateValue(_:forKey:)","type":"codeVoice"},{"text":" returns","type":"text"},{"text":" ","type":"text"},{"text":"the original value.","type":"text"}]},{"type":"codeListing","code":["var hues: OrderedDictionary = [","    \"Heliotrope\": 296,","    \"Coral\": 16,","    \"Aquamarine\": 156]","","if let oldValue = hues.updateValue(18, forKey: \"Coral\") {","    print(\"The old value of \\(oldValue) was replaced with a new one.\")","}","\/\/ Prints \"The old value of 16 was replaced with a new one.\""],"syntax":null},{"type":"paragraph","inlineContent":[{"text":"If the given key is not present in the dictionary, this method appends the","type":"text"},{"text":" ","type":"text"},{"text":"key-value pair and returns ","type":"text"},{"code":"nil","type":"codeVoice"},{"text":".","type":"text"}]},{"type":"codeListing","code":["if let oldValue = hues.updateValue(330, forKey: \"Cerise\") {","    print(\"The old value of \\(oldValue) was replaced with a new one.\")","} else {","    print(\"No value was found in the dictionary for that key.\")","}","\/\/ Prints \"No value was found in the dictionary for that key.\""],"syntax":null},{"type":"aside","name":"Complexity","content":[{"inlineContent":[{"text":"expected complexity is amortized O(1), if ","type":"text"},{"code":"Key","type":"codeVoice"},{"text":" implements","type":"text"},{"text":" ","type":"text"},{"text":"high-quality hashing.","type":"text"}],"type":"paragraph"}],"style":"note"}]}],"metadata":{"roleHeading":"Instance Method","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Key","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"role":"symbol","title":"updateValue(_:forKey:)","externalID":"s:18OrderedCollections0A10DictionaryV11updateValue_6forKeyq_Sgq__xtF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateValue","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"forKey","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Key","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"symbolKind":"method","extendedModule":"OrderedCollections","modules":[{"name":"OrderedCollections"}]},"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary/updateValue(_:forKey:)":{"type":"topic","conformance":{"constraints":[{"type":"codeVoice","code":"Key"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"Hashable"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"abstract":[{"text":"Updates the value stored in the dictionary for the given key, or appends a","type":"text"},{"text":" ","type":"text"},{"text":"new key-value pair if the key does not exist.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary\/updateValue(_:forKey:)","role":"symbol","kind":"symbol","url":"\/documentation\/orderedcollections\/ordereddictionary\/updatevalue(_:forkey:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"updateValue"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":", "},{"kind":"externalParam","text":"forKey"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Key"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"?"}],"title":"updateValue(_:forKey:)"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedDictionary":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedDictionary","url":"\/documentation\/orderedcollections\/ordereddictionary","abstract":[{"text":"An ordered collection of key-value pairs.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedDictionary","kind":"identifier"}],"title":"OrderedDictionary","navigatorTitle":[{"text":"OrderedDictionary","kind":"identifier"}],"type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"title":"OrderedCollections","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/orderedcollections"}}}
{"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateOrInsert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"item","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"index","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"item","content":[{"type":"paragraph","inlineContent":[{"text":"The value to append or replace.","type":"text"}]}]},{"name":"index","content":[{"inlineContent":[{"type":"text","text":"The index at which to insert the new member if "},{"code":"item","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"isn’t already in the set."}],"type":"paragraph"}]}]},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"type":"text","text":"The original element that was replaced by this operation, or"},{"type":"text","text":" "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" if the value was newly inserted into the collection."}],"type":"paragraph"}]},{"kind":"content","content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"This is useful when equal elements can be distinguished by identity"},{"type":"text","text":" "},{"type":"text","text":"comparison or some other means."}],"type":"paragraph"},{"style":"note","name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"The operation is expected to perform amortized O(1) copy,","type":"text"},{"text":" ","type":"text"},{"text":"hash, and compare operations on the ","type":"text"},{"type":"codeVoice","code":"Element"},{"text":" type, if it implements","type":"text"},{"text":" ","type":"text"},{"text":"high-quality hashing.","type":"text"}]}]}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/updateOrInsert(_:at:)","interfaceLanguage":"swift"},"variants":[{"paths":["\/documentation\/orderedcollections\/orderedset\/updateorinsert(_:at:)"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"text":"Adds the given element into the set unconditionally, either inserting it","type":"text"},{"text":" ","type":"text"},{"text":"at the specified index, or replacing an existing value if it’s already","type":"text"},{"text":" ","type":"text"},{"text":"present.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet"]]},"metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateOrInsert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"title":"updateOrInsert(_:at:)","role":"symbol","roleHeading":"Instance Method","externalID":"s:18OrderedCollections0A3SetV14updateOrInsert_2atxSg14originalMember_Si5indextx_SitF","symbolKind":"method","extendedModule":"OrderedCollections","conformance":{"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}],"availabilityPrefix":[{"text":"Available when","type":"text"}]},"modules":[{"name":"OrderedCollections"}]},"references":{"doc://co.pointfree.VaporRouting/documentation/OrderedCollections":{"title":"OrderedCollections","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections","abstract":[],"role":"collection","kind":"symbol","url":"\/documentation\/orderedcollections"},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedSet/updateOrInsert(_:at:)":{"url":"\/documentation\/orderedcollections\/orderedset\/updateorinsert(_:at:)","kind":"symbol","title":"updateOrInsert(_:at:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet\/updateOrInsert(_:at:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"updateOrInsert","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"at","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":") -> (originalMember","kind":"text"},{"text":": ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?, index","kind":"text"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"abstract":[{"text":"Adds the given element into the set unconditionally, either inserting it","type":"text"},{"text":" ","type":"text"},{"text":"at the specified index, or replacing an existing value if it’s already","type":"text"},{"text":" ","type":"text"},{"text":"present.","type":"text"}],"type":"topic","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"code":"Element","type":"codeVoice"},{"text":" conforms to ","type":"text"},{"code":"Hashable","type":"codeVoice"},{"text":".","type":"text"}]}},"doc://co.pointfree.VaporRouting/documentation/OrderedCollections/OrderedSet":{"title":"OrderedSet","type":"topic","navigatorTitle":[{"text":"OrderedSet","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/OrderedCollections\/OrderedSet","abstract":[{"text":"An ordered collection of unique elements.","type":"text"}],"role":"symbol","kind":"symbol","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OrderedSet","kind":"identifier"}],"url":"\/documentation\/orderedcollections\/orderedset"}}}
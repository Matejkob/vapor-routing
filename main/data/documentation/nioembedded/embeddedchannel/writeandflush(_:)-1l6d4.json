{"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations"]]},"abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/writeandflush(_:)-1l6d4"]}],"metadata":{"symbolKind":"method","externalID":"s:7NIOCore7ChannelPAAE13writeAndFlushyyqd__YaKlF::SYNTHESIZED::s:11NIOEmbedded15EmbeddedChannelC","modules":[{"name":"NIOEmbedded"}],"platforms":[{"introducedAt":"15.0","beta":false,"unavailable":false,"deprecated":false,"name":"iOS"},{"introducedAt":"12.0","beta":false,"unavailable":false,"deprecated":false,"name":"macOS"},{"introducedAt":"15.0","beta":false,"unavailable":false,"deprecated":false,"name":"tvOS"},{"introducedAt":"8.0","beta":false,"unavailable":false,"deprecated":false,"name":"watchOS"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"title":"writeAndFlush(_:)","roleHeading":"Instance Method","extendedModule":"NIOCore"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeAndFlush(_:)-1l6d4","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeAndFlush"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"text":" ","kind":"text"},{"text":"any","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"the data to write"}]}]},{"name":"promise","content":[{"inlineContent":[{"type":"text","text":"the "},{"code":"EventLoopPromise","type":"codeVoice"},{"type":"text","text":" that will be notified once the "},{"code":"write","type":"codeVoice"},{"type":"text","text":" operation completes,"},{"type":"text","text":" "},{"type":"text","text":"or "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" if not interested in the outcome of the operation."}],"type":"paragraph"}]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/Channel-Implementations":{"abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/Channel-Implementations","url":"\/documentation\/nioembedded\/embeddedchannel\/channel-implementations","kind":"article","type":"topic","title":"Channel Implementations","role":"collectionGroup"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/writeAndFlush(_:)-1l6d4":{"role":"symbol","abstract":[{"text":"Shortcut for calling ","type":"text"},{"code":"write","type":"codeVoice"},{"text":" and ","type":"text"},{"code":"flush","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","title":"writeAndFlush(_:)","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"writeAndFlush","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"async","kind":"keyword"},{"text":" ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/nioembedded\/embeddedchannel\/writeandflush(_:)-1l6d4","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/writeAndFlush(_:)-1l6d4"}}}
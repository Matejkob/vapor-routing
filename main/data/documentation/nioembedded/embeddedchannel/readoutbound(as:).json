{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"text":".Type = T.self) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"platforms":["Linux"],"languages":["swift"]}]},{"content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Data hits the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer when data was written using "},{"type":"codeVoice","code":"write"},{"type":"text","text":", then "},{"type":"codeVoice","code":"flush"},{"type":"text","text":"ed, and"},{"type":"text","text":" "},{"type":"text","text":"then travelled the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way too the front. For data to hit the outbound buffer, the very"},{"type":"text","text":" "},{"type":"text","text":"first "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":" must have written and flushed it either explicitly (by calling"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandlerContext.write"},{"type":"text","text":" and "},{"type":"codeVoice","code":"flush"},{"type":"text","text":") or implicitly by not implementing "},{"type":"codeVoice","code":"write"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"flush"},{"type":"text","text":"."}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Outbound events travel the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" ","type":"text"},{"inlineContent":[{"text":"back to front","type":"text"}],"type":"emphasis"},{"text":".","type":"text"}]}],"name":"Note","style":"note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":""},{"type":"codeVoice","code":"EmbeddedChannel.writeOutbound"},{"type":"text","text":" will "},{"type":"codeVoice","code":"write"},{"type":"text","text":" data through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":", starting with last"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"."}]}],"name":"Note","style":"note","type":"aside"}],"kind":"content"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer. If the"},{"type":"text","text":" "},{"type":"text","text":"first element was of a different type than requested, "},{"type":"codeVoice","code":"EmbeddedChannel.WrongTypeError"},{"type":"text","text":" will be thrown, if there"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"text":">(","kind":"text"},{"text":"as","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"role":"symbol","externalID":"s:11NIOEmbedded15EmbeddedChannelC12readOutbound2asxSgxm_tKlF","roleHeading":"Instance Method","title":"readOutbound(as:)","symbolKind":"method","modules":[{"name":"NIOEmbedded"}]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/readOutbound(as:)":{"title":"readOutbound(as:)","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/readoutbound(as:)","type":"topic","abstract":[{"type":"text","text":"If available, this method reads one element of type "},{"type":"codeVoice","code":"T"},{"type":"text","text":" out of the "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s outbound buffer. If the"},{"type":"text","text":" "},{"text":"first element was of a different type than requested, ","type":"text"},{"code":"EmbeddedChannel.WrongTypeError","type":"codeVoice"},{"text":" will be thrown, if there","type":"text"},{"type":"text","text":" "},{"type":"text","text":"are no elements in the outbound buffer, "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" will be returned."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"readOutbound"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"as"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/readOutbound(as:)","role":"symbol"}}}
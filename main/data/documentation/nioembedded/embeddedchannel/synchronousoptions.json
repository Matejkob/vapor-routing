{"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"topicSections":[{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/getOption(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/setOption(_:value:)"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronousOptions","kind":"identifier"}],"platforms":["Linux"]}]}],"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions"},"metadata":{"extendedModule":"NIOEmbedded","roleHeading":"Structure","modules":[{"name":"NIOEmbedded"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SynchronousOptions","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"SynchronousOptions"}],"symbolKind":"struct","title":"EmbeddedChannel.SynchronousOptions","externalID":"s:11NIOEmbedded15EmbeddedChannelC18SynchronousOptionsV","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions"]}],"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOSynchronousChannelOptions":{"type":"topic","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOSynchronousChannelOptions","abstract":[],"title":"NIOSynchronousChannelOptions","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOSynchronousChannelOptions"}],"kind":"symbol","url":"\/documentation\/niocore\/niosynchronouschanneloptions"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SynchronousOptions"}],"navigatorTitle":[{"kind":"identifier","text":"SynchronousOptions"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions","abstract":[],"url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions","type":"topic","kind":"symbol","role":"symbol","title":"EmbeddedChannel.SynchronousOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions/setOption(_:value:)":{"title":"setOption(_:value:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/setOption(_:value:)","role":"symbol","abstract":[{"type":"text","text":"Set "},{"type":"codeVoice","code":"option"},{"type":"text","text":" to "},{"type":"codeVoice","code":"value"},{"text":" on this ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setOption"},{"text":"<","kind":"text"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"value","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions\/setoption(_:value:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/SynchronousOptions/getOption(_:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getOption"},{"kind":"text","text":"<"},{"text":"Option","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Option","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Value","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/SynchronousOptions\/getOption(_:)","abstract":[{"text":"Get the value of ","type":"text"},{"code":"option","type":"codeVoice"},{"type":"text","text":" for this "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/synchronousoptions\/getoption(_:)","type":"topic","kind":"symbol","role":"symbol","title":"getOption(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]}}}
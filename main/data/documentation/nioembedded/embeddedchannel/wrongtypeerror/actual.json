{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actual","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError"]]},"kind":"symbol","metadata":{"modules":[{"name":"NIOEmbedded"}],"symbolKind":"property","roleHeading":"Instance Property","externalID":"s:11NIOEmbedded15EmbeddedChannelC14WrongTypeErrorV6actualypXpvp","fragments":[{"kind":"keyword","text":"let"},{"kind":"text","text":" "},{"kind":"identifier","text":"actual"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":".Type"}],"role":"symbol","title":"actual"},"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror\/actual"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError\/actual","interfaceLanguage":"swift"},"sections":[],"abstract":[{"text":"The type of the actual first element.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError":{"url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WrongTypeError"}],"abstract":[{"code":"WrongTypeError","type":"codeVoice"},{"type":"text","text":" is throws if you use "},{"code":"readInbound","type":"codeVoice"},{"type":"text","text":" or "},{"code":"readOutbound","type":"codeVoice"},{"text":" and request a certain type but the first","type":"text"},{"text":" ","type":"text"},{"text":"item in the respective buffer is of a different type.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"WrongTypeError"}],"title":"EmbeddedChannel.WrongTypeError","type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/WrongTypeError/actual":{"kind":"symbol","abstract":[{"text":"The type of the actual first element.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/WrongTypeError\/actual","type":"topic","title":"actual","role":"symbol","url":"\/documentation\/nioembedded\/embeddedchannel\/wrongtypeerror\/actual","fragments":[{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"actual","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":".Type","kind":"text"}]}}}
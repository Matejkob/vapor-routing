{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"bind","kind":"identifier"},{"text":"(","kind":"text"},{"text":"to","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"address","kind":"internalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","text":"SocketAddress","preciseIdentifier":"s:7NIOCore13SocketAddressO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","text":"EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">?)","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"The address to fake-bind to."}],"type":"paragraph"}],"name":"address"},{"content":[{"inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" which will be fulfilled when the fake-bind operation has been done."}],"type":"paragraph"}],"name":"promise"}]}],"sections":[],"variants":[{"paths":["\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"kind":"symbol","abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"bind","type":"codeVoice"},{"text":" event through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". If the event hits the ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" which"},{"type":"text","text":" "},{"type":"text","text":"happens when it travels the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":"’s "},{"type":"codeVoice","code":"localAddress"},{"type":"text","text":"."}],"metadata":{"symbolKind":"method","title":"bind(to:promise:)","roleHeading":"Instance Method","externalID":"s:11NIOEmbedded15EmbeddedChannelC4bind2to7promisey7NIOCore13SocketAddressO_AG16EventLoopPromiseVyytGSgtF","modules":[{"name":"NIOEmbedded"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketAddress":{"url":"\/documentation\/niocore\/socketaddress","title":"SocketAddress","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketAddress","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketAddress"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Represent a socket address to which we may want to connect or bind."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"SocketAddress"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded":{"abstract":[],"title":"NIOEmbedded","url":"\/documentation\/nioembedded","kind":"symbol","type":"topic","role":"collection","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded"},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel/bind(to:promise:)":{"title":"bind(to:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel\/bind(to:promise:)","type":"topic","kind":"symbol","abstract":[{"text":"Fires the (outbound) ","type":"text"},{"code":"bind","type":"codeVoice"},{"type":"text","text":" event through the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":". If the event hits the "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":" which"},{"type":"text","text":" "},{"type":"text","text":"happens when it travels the "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" all the way to the front, this will also set the"},{"type":"text","text":" "},{"code":"EmbeddedChannel","type":"codeVoice"},{"type":"text","text":"’s "},{"code":"localAddress","type":"codeVoice"},{"type":"text","text":"."}],"url":"\/documentation\/nioembedded\/embeddedchannel\/bind(to:promise:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bind"},{"kind":"text","text":"("},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13SocketAddressO","text":"SocketAddress"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedChannel":{"role":"symbol","title":"EmbeddedChannel","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EmbeddedChannel"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedChannel","kind":"symbol","type":"topic","url":"\/documentation\/nioembedded\/embeddedchannel","abstract":[{"type":"codeVoice","code":"EmbeddedChannel"},{"type":"text","text":" is a "},{"type":"codeVoice","code":"Channel"},{"text":" implementation that does neither any","type":"text"},{"text":" ","type":"text"},{"text":"actual IO nor has a proper eventing mechanism. The prime use-case for","type":"text"},{"text":" ","type":"text"},{"code":"EmbeddedChannel","type":"codeVoice"},{"text":" is in unit tests when you want to feed the inbound events","type":"text"},{"text":" ","type":"text"},{"text":"and check the outbound events manually.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"EmbeddedChannel"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/eventlooppromise","abstract":[{"type":"text","text":"A promise to provide a result later."}],"title":"EventLoopPromise","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}]}}}
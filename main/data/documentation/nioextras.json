{"hierarchy":{"paths":[[]]},"topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper"],"title":"Classes"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasError"],"title":"Protocols"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBitLength"],"title":"Structures"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrependerError","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasErrors","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOJSONRPCFraming","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBasedFrameDecoderError"],"title":"Enumerations"}],"sections":[],"metadata":{"role":"collection","externalID":"NIOExtras","roleHeading":"Framework","title":"NIOExtras","symbolKind":"module","modules":[{"name":"NIOExtras"}]},"kind":"symbol","variants":[{"paths":["\/documentation\/nioextras"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras"},"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOLengthFieldBasedFrameDecoderError":{"kind":"symbol","role":"symbol","type":"topic","url":"\/documentation\/nioextras\/niolengthfieldbasedframedecodererror","title":"NIOLengthFieldBasedFrameDecoderError","navigatorTitle":[{"kind":"identifier","text":"NIOLengthFieldBasedFrameDecoderError"}],"abstract":[],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOLengthFieldBasedFrameDecoderError"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBasedFrameDecoderError"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/RequestResponseHandler":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"RequestResponseHandler"}],"role":"symbol","abstract":[{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","isActive":true,"type":"reference"},{"text":" receives a ","type":"text"},{"code":"Request","type":"codeVoice"},{"text":" alongside an ","type":"text"},{"code":"EventLoopPromise<Response>","type":"codeVoice"},{"text":" from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"‘s","type":"text"},{"text":" ","type":"text"},{"text":"outbound side. It will fulfill the promise with the ","type":"text"},{"code":"Response","type":"codeVoice"},{"text":" once it’s received from the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"’s inbound","type":"text"},{"text":" ","type":"text"},{"text":"side.","type":"text"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"RequestResponseHandler"}],"title":"RequestResponseHandler","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/RequestResponseHandler","url":"\/documentation\/nioextras\/requestresponsehandler"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LineBasedFrameDecoder":{"abstract":[{"text":"A decoder that splits incoming ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":"s around line end","type":"text"},{"text":" ","type":"text"},{"text":"character(s) (","type":"text"},{"code":"'\\n'","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"'\\r\\n'","type":"codeVoice"},{"text":").","type":"text"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LineBasedFrameDecoder"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LineBasedFrameDecoder","title":"LineBasedFrameDecoder","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LineBasedFrameDecoder"}],"url":"\/documentation\/nioextras\/linebasedframedecoder"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/ServerQuiescingHelper":{"navigatorTitle":[{"text":"ServerQuiescingHelper","kind":"identifier"}],"url":"\/documentation\/nioextras\/serverquiescinghelper","title":"ServerQuiescingHelper","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ServerQuiescingHelper","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"text":"Helper that can be used to orchestrate the quiescing of a server ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" and all the child ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s that are","type":"text"},{"text":" ","type":"text"},{"text":"open at a given point in time.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/ServerQuiescingHelper"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOWritePCAPHandler":{"title":"NIOWritePCAPHandler","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOWritePCAPHandler"}],"role":"symbol","abstract":[{"text":"A ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" that can write a "},{"type":"reference","identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap","isActive":true},{"type":"text","text":" containing the send\/received"},{"type":"text","text":" "},{"type":"text","text":"data as synthesized TCP packet captures."}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","url":"\/documentation\/nioextras\/niowritepcaphandler","navigatorTitle":[{"kind":"identifier","text":"NIOWritePCAPHandler"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/FixedLengthFrameDecoder":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"FixedLengthFrameDecoder"}],"kind":"symbol","abstract":[{"type":"text","text":"A decoder that splits the received "},{"code":"ByteBuffer","type":"codeVoice"},{"text":" by a fixed number","type":"text"},{"text":" ","type":"text"},{"text":"of bytes. For example, if you received the following four fragmented packets:","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/FixedLengthFrameDecoder","role":"symbol","type":"topic","url":"\/documentation\/nioextras\/fixedlengthframedecoder","title":"FixedLengthFrameDecoder","navigatorTitle":[{"text":"FixedLengthFrameDecoder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldBasedFrameDecoder":{"url":"\/documentation\/nioextras\/lengthfieldbasedframedecoder","title":"LengthFieldBasedFrameDecoder","type":"topic","navigatorTitle":[{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldBasedFrameDecoder","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"A decoder that splits the received "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" by the number of bytes specified in a fixed length header"},{"type":"text","text":" "},{"type":"text","text":"contained within the buffer."}],"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LengthFieldBasedFrameDecoder","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugOutboundEventsHandler":{"url":"\/documentation\/nioextras\/debugoutboundeventshandler","title":"DebugOutboundEventsHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DebugOutboundEventsHandler","kind":"identifier"}],"abstract":[{"type":"text","text":"ChannelOutboundHandler that prints all outbound events that pass through the pipeline by default,"},{"text":" ","type":"text"},{"text":"overridable by providing your own closure for custom logging. See ","type":"text"},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","isActive":true},{"text":" for inbound events.","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOJSONRPCFraming":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOJSONRPCFraming","kind":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOJSONRPCFraming"}],"navigatorTitle":[{"kind":"identifier","text":"NIOJSONRPCFraming"}],"abstract":[{"type":"text","text":"Namespace to contain JSON framing implementation."}],"type":"topic","url":"\/documentation\/nioextras\/niojsonrpcframing","title":"NIOJSONRPCFraming"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOExtrasErrors":{"kind":"symbol","role":"symbol","navigatorTitle":[{"text":"NIOExtrasErrors","kind":"identifier"}],"url":"\/documentation\/nioextras\/nioextraserrors","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOExtrasErrors"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasErrors","abstract":[{"text":"Errors that are raised in NIOExtras.","type":"text"}],"type":"topic","title":"NIOExtrasErrors"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/DebugInboundEventsHandler":{"url":"\/documentation\/nioextras\/debuginboundeventshandler","title":"DebugInboundEventsHandler","type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugInboundEventsHandler","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DebugInboundEventsHandler","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"DebugInboundEventsHandler","kind":"identifier"}],"abstract":[{"type":"codeVoice","code":"ChannelInboundHandler"},{"type":"text","text":" that prints all inbound events that pass through the pipeline by default,"},{"type":"text","text":" "},{"text":"overridable by providing your own closure for custom logging. See ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/DebugOutboundEventsHandler"},{"text":" for outbound events.","type":"text"}]},"https://en.wikipedia.org/wiki/Pcap":{"type":"link","title":".pcap file","url":"https:\/\/en.wikipedia.org\/wiki\/Pcap","titleInlineContent":[{"code":".pcap","type":"codeVoice"},{"text":" file","type":"text"}],"identifier":"https:\/\/en.wikipedia.org\/wiki\/Pcap"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOExtrasError":{"type":"topic","title":"NIOExtrasError","url":"\/documentation\/nioextras\/nioextraserror","kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOExtrasError"}],"abstract":[{"text":"Base type for errors from NIOExtras","type":"text"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOExtrasError"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOExtrasError"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOLengthFieldBitLength":{"url":"\/documentation\/nioextras\/niolengthfieldbitlength","abstract":[{"type":"text","text":"A struct to describe the length of a piece of data in bits"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"NIOLengthFieldBitLength"}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOLengthFieldBitLength"}],"role":"symbol","title":"NIOLengthFieldBitLength","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOLengthFieldBitLength"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldPrepender":{"role":"symbol","abstract":[{"type":"text","text":"An encoder that takes a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" message and prepends the number of bytes in the message."},{"type":"text","text":" "},{"text":"The length field is always the same fixed length specified on construction.","type":"text"},{"text":" ","type":"text"},{"text":"These bytes contain a binary specification of the message size.","type":"text"}],"kind":"symbol","url":"\/documentation\/nioextras\/lengthfieldprepender","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","navigatorTitle":[{"kind":"identifier","text":"LengthFieldPrepender"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LengthFieldPrepender"}],"title":"LengthFieldPrepender"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer/addFragment(_:)":{"abstract":[{"text":"Record a fragment into the buffer, making space if required.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"addFragment","kind":"identifier"},{"text":"(","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"role":"symbol","title":"addFragment(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/addFragment(_:)","type":"topic","url":"\/documentation\/nioextras\/niopcapringbuffer\/addfragment(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer":{"role":"symbol","url":"\/documentation\/nioextras\/niopcapringbuffer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPCAPRingBuffer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer","abstract":[{"type":"text","text":"Storage for the most recent set of packets captured subject to constraints."},{"type":"text","text":" "},{"text":"Use ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/addFragment(_:)","isActive":true,"type":"reference"},{"text":" as the sink to a ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOWritePCAPHandler","isActive":true,"type":"reference"},{"text":" and call ","type":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/emitPCAP()","isActive":true,"type":"reference"},{"text":" ","type":"text"},{"text":"when you wish to get the recorded data.","type":"text"}],"title":"NIOPCAPRingBuffer","type":"topic","kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"NIOPCAPRingBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/LengthFieldPrependerError":{"role":"symbol","abstract":[{"type":"text","text":"Error types from "},{"type":"reference","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrepender","isActive":true}],"kind":"symbol","url":"\/documentation\/nioextras\/lengthfieldprependererror","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/LengthFieldPrependerError","navigatorTitle":[{"kind":"identifier","text":"LengthFieldPrependerError"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"LengthFieldPrependerError"}],"title":"LengthFieldPrependerError"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras/NIOPCAPRingBuffer/emitPCAP()":{"abstract":[{"text":"Emit the captured data to a consuming function; then clear the captured data.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"emitPCAP","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"CircularBuffer","preciseIdentifier":"s:7NIOCore14CircularBufferV","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"ByteBuffer","preciseIdentifier":"s:7NIOCore10ByteBufferV","kind":"typeIdentifier"},{"text":">","kind":"text"}],"role":"symbol","title":"emitPCAP()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras\/NIOPCAPRingBuffer\/emitPCAP()","type":"topic","url":"\/documentation\/nioextras\/niopcapringbuffer\/emitpcap()"},"doc://co.pointfree.VaporRouting/documentation/NIOExtras":{"url":"\/documentation\/nioextras","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOExtras","kind":"symbol","role":"collection","type":"topic","title":"NIOExtras","abstract":[]}}}
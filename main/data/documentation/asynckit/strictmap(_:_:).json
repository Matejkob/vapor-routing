{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/strictmap(_:_:)"]}],"kind":"symbol","sections":[],"abstract":[{"type":"text","text":"Given one or more optionals as inputs, checks whether each input is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":". If "},{"inlineContent":[{"text":"any","type":"text"}],"type":"emphasis"},{"type":"text","text":" input is "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", "},{"code":"nil","type":"codeVoice"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"immediately returned as an overall results. If all of the inputs have values, the "},{"code":"transform","type":"codeVoice"},{"type":"text","text":" callback is invoked"},{"type":"text","text":" "},{"type":"text","text":"with all of the unwrapped values as parameters."}],"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Res"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"?, ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}],"role":"symbol","symbolKind":"func","roleHeading":"Function","externalID":"s:8AsyncKit9strictMapyq_SgxSg_q_xKXEtKr0_lF","modules":[{"name":"AsyncKit"}],"title":"strictMap(_:_:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"strictMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"A"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"Res"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"a"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": ("},{"kind":"typeIdentifier","text":"A"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":") "},{"kind":"keyword","text":"rethrows"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Res"},{"kind":"text","text":"?"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"discussion","text":"Discussion"},{"name":"Note","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"This “baseline”, single-item version of the function is trivially re-expressible using the ","type":"text"},{"type":"codeVoice","code":"??"},{"text":" operator or","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Optional.map(_:)"},{"text":", but this is not the case for any of the other overloads.","type":"text"}]}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/strictMap(_:_:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"url":"\/documentation\/asynckit","type":"topic","title":"AsyncKit","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/strictMap(_:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"strictMap","kind":"identifier"},{"text":"<","kind":"text"},{"text":"A","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"Res","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":"?, (","kind":"text"},{"text":"A","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Res","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"rethrows","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Res","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"type":"topic","title":"strictMap(_:_:)","abstract":[{"text":"Given one or more optionals as inputs, checks whether each input is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". If ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"any"}]},{"text":" input is ","type":"text"},{"type":"codeVoice","code":"nil"},{"type":"text","text":", "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" is"},{"type":"text","text":" "},{"type":"text","text":"immediately returned as an overall results. If all of the inputs have values, the "},{"type":"codeVoice","code":"transform"},{"type":"text","text":" callback is invoked"},{"type":"text","text":" "},{"type":"text","text":"with all of the unwrapped values as parameters."}],"kind":"symbol","role":"symbol","url":"\/documentation\/asynckit\/strictmap(_:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/strictMap(_:_:)"}}}
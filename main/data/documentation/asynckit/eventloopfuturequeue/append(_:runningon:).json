{"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","interfaceLanguage":"swift"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"]]},"abstract":[{"text":"An overload for ","type":"text"},{"code":"append(generator:runningOn:)","type":"codeVoice"},{"text":" that takes in an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" as an auto closure to provide a better 1-liner API.","type":"text"}],"kind":"symbol","metadata":{"symbolKind":"method","roleHeading":"Instance Method","role":"symbol","modules":[{"name":"AsyncKit"}],"externalID":"s:8AsyncKit20EventLoopFutureQueueC6append_9runningOn7NIOCore0cdE0CyxGAIyXA_AC17ContinueConditionOtlF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"append"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"runningOn"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","text":"EventLoopFutureQueue"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","text":"ContinueCondition"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"title":"append(_:runningOn:)"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"generator","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@autoclosure ","kind":"attribute"},{"text":"@escaping","kind":"keyword"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"runningOn","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"next","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","text":"EventLoopFutureQueue","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue"},{"text":".","kind":"text"},{"preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","text":"ContinueCondition","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition"},{"text":" = .complete) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The statement that will produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"This will automatically get wrapped in a closure."}]}],"name":"generator"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The condition that the previous future(s) must meet on their completion for the appended future to be run."},{"type":"text","text":" "},{"type":"text","text":"The default value is "},{"type":"codeVoice","code":".complete"},{"type":"text","text":"."}]}],"name":"next"}]},{"kind":"content","content":[{"anchor":"return-value","type":"heading","level":2,"text":"Return Value"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The future passed into the "},{"type":"codeVoice","code":"generator"},{"type":"text","text":" parameter."}]}]},{"kind":"content","content":[{"level":2,"type":"heading","text":"Discussion","anchor":"discussion"},{"type":"codeListing","syntax":null,"code":["let model: EventLoopFuture<Model> = queue.append(Model.query(on: database).first())"]}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/AsyncKit":{"url":"\/documentation\/asynckit","type":"topic","title":"AsyncKit","abstract":[],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit","role":"collection"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventLoopFutureQueue","kind":"identifier"}],"navigatorTitle":[{"text":"EventLoopFutureQueue","kind":"identifier"}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue","title":"EventLoopFutureQueue","abstract":[{"type":"text","text":"Allows you to queue closures that produce an "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":", so each future only gets run if the previous ones complete, succeed, or fail."}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/ContinueCondition":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/ContinueCondition","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ContinueCondition","kind":"identifier"}],"navigatorTitle":[{"text":"ContinueCondition","kind":"identifier"}],"role":"symbol","url":"\/documentation\/asynckit\/eventloopfuturequeue\/continuecondition","title":"EventLoopFutureQueue.ContinueCondition","abstract":[{"type":"text","text":"Under what conditions an appended closure should be run."}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/AsyncKit/EventLoopFutureQueue/append(_:runningOn:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/AsyncKit\/EventLoopFutureQueue\/append(_:runningOn:)","role":"symbol","type":"topic","url":"\/documentation\/asynckit\/eventloopfuturequeue\/append(_:runningon:)","title":"append(_:runningOn:)","abstract":[{"text":"An overload for ","type":"text"},{"code":"append(generator:runningOn:)","type":"codeVoice"},{"text":" that takes in an ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" as an auto closure to provide a better 1-liner API.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"append","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"runningOn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopFutureQueue","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"ContinueCondition","preciseIdentifier":"s:8AsyncKit20EventLoopFutureQueueC17ContinueConditionO","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]}}}
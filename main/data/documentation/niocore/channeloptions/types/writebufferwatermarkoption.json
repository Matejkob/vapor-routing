{"kind":"symbol","metadata":{"navigatorTitle":[{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"modules":[{"name":"NIOCore"}],"title":"ChannelOptions.Types.WriteBufferWaterMarkOption","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"WriteBufferWaterMarkOption"}],"role":"symbol","roleHeading":"Structure","externalID":"s:7NIOCore14ChannelOptionsV5TypesO26WriteBufferWaterMarkOptionV","symbolKind":"struct"},"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"code":"WriteBufferWaterMarkOption","type":"codeVoice"},{"text":" allows users to configure when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" should be marked as writable or not. Once the amount of bytes queued in a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s outbound buffer is larger than ","type":"text"},{"code":"WriteBufferWaterMark.high","type":"codeVoice"},{"text":" the channel will be marked as non-writable and so","type":"text"},{"text":" ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" will return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued","type":"text"},{"text":" ","type":"text"},{"text":"falls below ","type":"text"},{"code":"WriteBufferWaterMark.low","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will become writable again. Once this happens ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" will return","type":"text"},{"text":" ","type":"text"},{"code":"true","type":"codeVoice"},{"text":" again. These writability changes are also propagated through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" and so can be intercepted via ","type":"text"},{"code":"ChannelInboundHandler.channelWritabilityChanged","type":"codeVoice"},{"text":".","type":"text"}],"relationshipsSections":[{"title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","doc:\/\/co.pointfree.VaporRouting\/SQ","doc:\/\/co.pointfree.VaporRouting\/s8SendableP"],"kind":"relationships"}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteBufferWaterMarkOption","kind":"identifier"}]}],"kind":"declarations"}],"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/init()"]},{"title":"Type Aliases","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Value"]},{"title":"Default Implementations","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Equatable-Implementations"],"generated":true}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types"]]},"variants":[{"paths":["\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption"},"sections":[],"references":{"doc://co.pointfree.VaporRouting/s8SendableP":{"title":"Swift.Sendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/s8SendableP","type":"unresolvable"},"doc://co.pointfree.VaporRouting/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/co.pointfree.VaporRouting\/SQ","type":"unresolvable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types":{"role":"symbol","abstract":[],"kind":"symbol","url":"\/documentation\/niocore\/channeloptions\/types","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types","navigatorTitle":[{"kind":"identifier","text":"Types"}],"fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"Types"}],"title":"ChannelOptions.Types"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","role":"symbol","title":"NIOPreconcurrencySendable","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"type":"topic","url":"\/documentation\/niocore\/niopreconcurrencysendable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOptions"}],"role":"symbol","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides "},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":"s to be used with a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"Bootstrap"},{"type":"text","text":" or "},{"type":"codeVoice","code":"ServerBootstrap"},{"type":"text","text":"."}],"navigatorTitle":[{"kind":"identifier","text":"ChannelOptions"}],"url":"\/documentation\/niocore\/channeloptions","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions","title":"ChannelOptions"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption/Value":{"abstract":[{"text":"The type of the ","type":"text"},{"type":"codeVoice","code":"ChannelOption"},{"text":"â€™s value.","type":"text"}],"role":"symbol","type":"topic","kind":"symbol","navigatorTitle":[{"text":"Value","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Value","kind":"identifier"}],"title":"ChannelOptions.Types.WriteBufferWaterMarkOption.Value","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Value","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption\/value"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption/Equatable-Implementations":{"kind":"article","abstract":[],"title":"Equatable Implementations","role":"collectionGroup","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/Equatable-Implementations","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption\/equatable-implementations","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOption":{"url":"\/documentation\/niocore\/channeloption","kind":"symbol","type":"topic","title":"ChannelOption","navigatorTitle":[{"kind":"identifier","text":"ChannelOption"}],"role":"symbol","abstract":[{"text":"A configuration option that can be set on a ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" to configure different behaviour."}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOption"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption":{"abstract":[{"code":"WriteBufferWaterMarkOption","type":"codeVoice"},{"text":" allows users to configure when a ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" should be marked as writable or not. Once the amount of bytes queued in a","type":"text"},{"text":" ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s outbound buffer is larger than ","type":"text"},{"code":"WriteBufferWaterMark.high","type":"codeVoice"},{"text":" the channel will be marked as non-writable and so","type":"text"},{"text":" ","type":"text"},{"code":"Channel.isWritable","type":"codeVoice"},{"text":" will return ","type":"text"},{"code":"false","type":"codeVoice"},{"text":". Once we were able to write some data out of the outbound buffer and the amount of bytes queued","type":"text"},{"text":" ","type":"text"},{"text":"falls below ","type":"text"},{"code":"WriteBufferWaterMark.low","type":"codeVoice"},{"text":" the ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will become writable again. Once this happens ","type":"text"},{"code":"Channel.writable","type":"codeVoice"},{"text":" will return","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"true"},{"type":"text","text":" again. These writability changes are also propagated through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" and so can be intercepted via "},{"type":"codeVoice","code":"ChannelInboundHandler.channelWritabilityChanged"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","title":"ChannelOptions.Types.WriteBufferWaterMarkOption","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WriteBufferWaterMarkOption","kind":"identifier"}],"role":"symbol","navigatorTitle":[{"text":"WriteBufferWaterMarkOption","kind":"identifier"}],"url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOptions/Types/WriteBufferWaterMarkOption/init()":{"kind":"symbol","abstract":[],"fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"title":"init()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOptions\/Types\/WriteBufferWaterMarkOption\/init()","url":"\/documentation\/niocore\/channeloptions\/types\/writebufferwatermarkoption\/init()","type":"topic"}}}
{"kind":"symbol","sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"relationshipsSections":[{"type":"inheritsFrom","kind":"relationships","title":"Inherits From","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"]},{"type":"conformingTypes","kind":"relationships","title":"Conforming Types","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop"]}],"metadata":{"navigatorTitle":[{"kind":"identifier","text":"EventLoop"}],"externalID":"s:7NIOCore9EventLoopP","role":"symbol","title":"EventLoop","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"}],"modules":[{"name":"NIOCore"}],"roleHeading":"Protocol","symbolKind":"protocol"},"topicSections":[{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(withResultOf:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop"},"abstract":[{"type":"text","text":"An EventLoop processes IO \/ tasks in an endless loop for "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":"s until it’s closed."}],"variants":[{"paths":["\/documentation\/niocore\/eventloop"],"traits":[{"interfaceLanguage":"swift"}]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoop"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore14EventLoopGroupP","text":"EventLoopGroup"}]}]},{"kind":"content","content":[{"type":"heading","level":2,"anchor":"overview","text":"Overview"},{"inlineContent":[{"text":"Usually multiple ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s share the same ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" for processing IO \/ tasks and so share the same processing ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"For a better understanding of how such an ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" works internally the following pseudo code may be helpful:","type":"text"}],"type":"paragraph"},{"type":"codeListing","syntax":null,"code":["while eventLoop.isOpen {","    \/\/\/ Block until there is something to process for 1...n Channels","    let readyChannels = blockUntilIoOrTasksAreReady()","    \/\/\/ Loop through all the Channels","    for channel in readyChannels {","        \/\/\/ Process IO and \/ or tasks for the Channel.","        \/\/\/ This may include things like:","        \/\/\/    - accept new connection","        \/\/\/    - connect to a remote host","        \/\/\/    - read from socket","        \/\/\/    - write to socket","        \/\/\/    - tasks that were submitted via EventLoop methods","        \/\/\/ and others.","        processIoAndTasks(channel)","    }","}"]},{"inlineContent":[{"type":"text","text":"Because an "},{"type":"codeVoice","code":"EventLoop"},{"text":" may be shared between multiple ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":"s it’s important to ","type":"text"},{"inlineContent":[{"text":"NOT","type":"text"}],"type":"emphasis"},{"text":" block while processing IO \/ tasks. This also includes long running computations which will have the same","type":"text"},{"text":" ","type":"text"},{"text":"effect as blocking in this case.","type":"text"}],"type":"paragraph"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makePromise(of:file:line:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makePromise","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makePromise(of:file:line:)","role":"symbol","title":"makePromise(of:file:line:)","abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopPromise"},{"type":"text","text":" that will be notified using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}],"type":"topic","url":"\/documentation\/niocore\/eventloop\/makepromise(of:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","role":"symbol","title":"NIOPreconcurrencySendable","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"type":"topic","url":"\/documentation\/niocore\/niopreconcurrencysendable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-6gsl5":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"flatten"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">(["},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">]) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<["},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":"]>"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-6gsl5","role":"symbol","title":"flatten(_:)","abstract":[{"type":"text","text":"Returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that succeeds only when all the provided futures succeed."},{"type":"text","text":" "},{"type":"text","text":"The new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" contains an array of results, maintaining same ordering as the futures."}],"type":"topic","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-6gsl5"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:)","type":"topic","kind":"symbol","role":"symbol","title":"makeFailedFuture(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeFailedFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:)","abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is already marked as failed. Notifications will be done using this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" as execution "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededVoidFuture()-4okco":{"kind":"symbol","title":"makeSucceededVoidFuture()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"defaultImplementations":1,"type":"topic","abstract":[{"type":"text","text":"Return a succeeded "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" future."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","required":true,"url":"\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-4okco","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopGroup":{"kind":"symbol","title":"EventLoopGroup","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopGroup"}],"navigatorTitle":[{"kind":"identifier","text":"EventLoopGroup"}],"type":"topic","abstract":[{"type":"text","text":"Provides an endless stream of "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"s to use."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopGroup","url":"\/documentation\/niocore\/eventloopgroup","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertNotInEventLoop(file:line:)":{"kind":"symbol","title":"assertNotInEventLoop(file:line:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"assertNotInEventLoop"},{"kind":"text","text":"("},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"StaticString","preciseIdentifier":"s:s12StaticStringV"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":")"}],"type":"topic","abstract":[{"type":"text","text":"Asserts that the current thread is "},{"type":"emphasis","inlineContent":[{"type":"text","text":"not"}]},{"type":"text","text":" the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of"},{"type":"text","text":" "},{"type":"codeVoice","code":"preconditionFailure(_:file:line:)"},{"type":"text","text":". Never has any effect in release mode."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertNotInEventLoop(file:line:)","url":"\/documentation\/niocore\/eventloop\/assertnotineventloop(file:line:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/inEventLoop":{"type":"topic","abstract":[{"type":"text","text":"Returns "},{"type":"codeVoice","code":"true"},{"type":"text","text":" if the current "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":" is the same as the "},{"type":"codeVoice","code":"NIOThread"},{"type":"text","text":" that is tied to this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":". "},{"type":"codeVoice","code":"false"},{"type":"text","text":" otherwise."}],"role":"symbol","title":"inEventLoop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/inEventLoop","kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"inEventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"required":true,"url":"\/documentation\/niocore\/eventloop\/ineventloop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeCompletedFuture(_:)":{"type":"topic","abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is marked as succeeded or failed with the value held by "},{"type":"codeVoice","code":"result"},{"type":"text","text":"."}],"role":"symbol","title":"makeCompletedFuture(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeCompletedFuture"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Success"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/makecompletedfuture(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"url":"\/documentation\/niocore\/eventloop","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until it’s closed.","type":"text"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(in:_:)":{"type":"topic","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" after the given amount of time."}],"role":"symbol","title":"scheduleTask(in:_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(in:_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"in"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"TimeAmount","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Scheduled","preciseIdentifier":"s:7NIOCore9ScheduledV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"required":true,"url":"\/documentation\/niocore\/eventloop\/scheduletask(in:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleTask(deadline:_:)":{"kind":"symbol","type":"topic","title":"scheduleTask(deadline:_:)","role":"symbol","url":"\/documentation\/niocore\/eventloop\/scheduletask(deadline:_:)","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" at the given time."}],"required":true,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleTask(deadline:_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"deadline","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","text":"NIODeadline","kind":"typeIdentifier"},{"text":", () ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionInEventLoop(file:line:)-7ukrq":{"type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preconditionInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/eventloop\/preconditionineventloop(file:line:)-7ukrq","kind":"symbol","required":true,"title":"preconditionInEventLoop(file:line:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionInEventLoop(file:line:)-7ukrq","role":"symbol","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"defaultImplementations":1},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatSubmit(_:)":{"abstract":[{"text":"Submit ","type":"text"},{"type":"codeVoice","code":"task"},{"text":" to be run on this ","type":"text"},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatSubmit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatSubmit(_:)","url":"\/documentation\/niocore\/eventloop\/flatsubmit(_:)","title":"flatSubmit(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatten(_:)-7tski":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatten","kind":"identifier"},{"text":"([","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">]) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatten(_:)-7tski","url":"\/documentation\/niocore\/eventloop\/flatten(_:)-7tski","kind":"symbol","title":"flatten(_:)","abstract":[{"type":"text","text":"Returns a new "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that succeeds only when all the provided futures succeed,"},{"text":" ","type":"text"},{"text":"ignoring the resolved values.","type":"text"}],"role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/execute(_:)":{"type":"topic","kind":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"execute","kind":"identifier"},{"text":"(() -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"url":"\/documentation\/niocore\/eventloop\/execute(_:)","abstract":[{"type":"text","text":"Submit a given task to be executed by the "},{"type":"codeVoice","code":"EventLoop"}],"title":"execute(_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/execute(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/preconditionNotInEventLoop(file:line:)-4nrf2":{"defaultImplementations":1,"type":"topic","kind":"symbol","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"preconditionNotInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}],"url":"\/documentation\/niocore\/eventloop\/preconditionnotineventloop(file:line:)-4nrf2","abstract":[{"type":"text","text":"Asserts that the current thread is "},{"inlineContent":[{"type":"text","text":"not"}],"type":"emphasis"},{"type":"text","text":" the one tied to this "},{"type":"codeVoice","code":"EventLoop"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, the process will be abnormally terminated as per the semantics of ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":".","type":"text"}],"title":"preconditionNotInEventLoop(file:line:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/preconditionNotInEventLoop(file:line:)-4nrf2"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(in:file:line:_:)":{"type":"topic","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatScheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"in","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/flatscheduletask(in:file:line:_:)","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" after the given amount of time."}],"title":"flatScheduleTask(in:file:line:_:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(in:file:line:_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/submit(_:)-44luu":{"defaultImplementations":1,"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/submit(_:)-44luu","type":"topic","title":"submit(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"submit","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/eventloop\/submit(_:)-44luu","abstract":[{"text":"Submit a given task to be executed by the ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":". Once the execution is complete the returned ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" is notified.","type":"text"}],"kind":"symbol","role":"symbol","required":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeCompletedFuture(withResultOf:)":{"url":"\/documentation\/niocore\/eventloop\/makecompletedfuture(withresultof:)","role":"symbol","abstract":[{"type":"text","text":"Creates and returns a new "},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":" that is marked as succeeded or failed with the value returned by "},{"code":"body","type":"codeVoice"},{"text":".","type":"text"}],"title":"makeCompletedFuture(withResultOf:)","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeCompletedFuture(withResultOf:)","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeCompletedFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"withResultOf","kind":"externalParam"},{"text":": () ","kind":"text"},{"text":"throws","kind":"keyword"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:)","title":"makeSucceededFuture(_:)","url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:)","type":"topic","abstract":[{"text":"Creates and returns a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" that is already marked as success. Notifications will be done using this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":" as execution ","type":"text"},{"code":"NIOThread","type":"codeVoice"},{"text":".","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/performWithTask(_:)":{"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/performWithTask(_:)","title":"performWithTask(_:)","url":"\/documentation\/niocore\/eventloop\/performwithtask(_:)","type":"topic","abstract":[{"text":"Run the ","type":"text"},{"code":"async","type":"codeVoice"},{"text":" function ","type":"text"},{"code":"body","type":"codeVoice"},{"text":" on this event loop and return its result as","type":"text"},{"text":" ","type":"text"},{"text":"an ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"performWithTask"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">(() "},{"kind":"keyword","text":"async"},{"kind":"text","text":" "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)":{"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/schedulerepeatedasynctask(initialdelay:delay:notifying:_:)","title":"scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","type":"topic","abstract":[{"type":"text","text":"Schedule a repeated asynchronous task to be executed by the "},{"code":"EventLoop","type":"codeVoice"},{"text":" with a fixed delay between the end and","type":"text"},{"text":" ","type":"text"},{"text":"start of each task.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedAsyncTask(initialDelay:delay:notifying:_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"scheduleRepeatedAsyncTask"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialDelay"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"notifying"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?, ("},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier","text":"RepeatedTask"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier","text":"RepeatedTask"}]},"doc://co.pointfree.VaporRouting/documentation/NIOEmbedded/EmbeddedEventLoop":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOEmbedded\/EmbeddedEventLoop","role":"symbol","kind":"symbol","url":"\/documentation\/nioembedded\/embeddedeventloop","abstract":[{"type":"text","text":"An "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" that is embedded in the current running context with no external"},{"type":"text","text":" "},{"type":"text","text":"control."}],"title":"EmbeddedEventLoop","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EmbeddedEventLoop","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"EmbeddedEventLoop","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededFuture(_:file:line:)":{"kind":"symbol","url":"\/documentation\/niocore\/eventloop\/makesucceededfuture(_:file:line:)","title":"makeSucceededFuture(_:file:line:)","type":"topic","abstract":[],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededFuture(_:file:line:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"makeSucceededFuture","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Success","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"Success","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Success"},{"kind":"text","text":">"}],"deprecated":true},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeFailedFuture(_:file:line:)":{"url":"\/documentation\/niocore\/eventloop\/makefailedfuture(_:file:line:)","deprecated":true,"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeFailedFuture(_:file:line:)","abstract":[],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeFailedFuture"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"preciseIdentifier":"s:s5ErrorP","text":"Error","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","text":"StaticString","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"line","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Su","text":"UInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"title":"makeFailedFuture(_:file:line:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/flatScheduleTask(deadline:file:line:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"flatScheduleTask","kind":"identifier"},{"text":"<","kind":"text"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"deadline"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore11NIODeadlineV","kind":"typeIdentifier","text":"NIODeadline"},{"kind":"text","text":", "},{"kind":"externalParam","text":"file"},{"kind":"text","text":": "},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":", () "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore9ScheduledV","kind":"typeIdentifier","text":"Scheduled"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":">"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/flatScheduleTask(deadline:file:line:_:)","url":"\/documentation\/niocore\/eventloop\/flatscheduletask(deadline:file:line:_:)","abstract":[{"type":"text","text":"Schedule a "},{"type":"codeVoice","code":"task"},{"type":"text","text":" that is executed by this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" at the given time."}],"role":"symbol","title":"flatScheduleTask(deadline:file:line:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/close()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/close()","url":"\/documentation\/niocore\/eventloop\/close()","abstract":[{"type":"text","text":"Close this "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":"."}],"role":"symbol","title":"close()","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/scheduleRepeatedTask(initialDelay:delay:notifying:_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"scheduleRepeatedTask","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialDelay","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"TimeAmount","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore10TimeAmountV"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"delay"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore10TimeAmountV","kind":"typeIdentifier","text":"TimeAmount"},{"kind":"text","text":", "},{"kind":"externalParam","text":"notifying"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","kind":"typeIdentifier","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">?, ("},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier","text":"RepeatedTask"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore12RepeatedTaskC","kind":"typeIdentifier","text":"RepeatedTask"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/scheduleRepeatedTask(initialDelay:delay:notifying:_:)","url":"\/documentation\/niocore\/eventloop\/schedulerepeatedtask(initialdelay:delay:notifying:_:)","abstract":[{"type":"text","text":"Schedule a repeated task to be executed by the "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" with a fixed delay between the end and start of each"},{"type":"text","text":" "},{"type":"text","text":"task."}],"role":"symbol","title":"scheduleRepeatedTask(initialDelay:delay:notifying:_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/assertInEventLoop(file:line:)":{"url":"\/documentation\/niocore\/eventloop\/assertineventloop(file:line:)","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/assertInEventLoop(file:line:)","abstract":[{"text":"Asserts that the current thread is the one tied to this ","type":"text"},{"code":"EventLoop","type":"codeVoice"},{"text":".","type":"text"},{"text":" ","type":"text"},{"text":"Otherwise, if running in debug mode, the process will be abnormally terminated as per the semantics of","type":"text"},{"text":" ","type":"text"},{"code":"preconditionFailure(_:file:line:)","type":"codeVoice"},{"text":". Never has any effect in release mode.","type":"text"}],"role":"symbol","type":"topic","title":"assertInEventLoop(file:line:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"assertInEventLoop","kind":"identifier"},{"text":"(","kind":"text"},{"text":"file","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:s12StaticStringV","kind":"typeIdentifier","text":"StaticString"},{"kind":"text","text":", "},{"kind":"externalParam","text":"line"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Su","kind":"typeIdentifier","text":"UInt"},{"kind":"text","text":")"}]}}}
{"variants":[{"paths":["\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap"]]},"abstract":[{"text":"Initialize the connected ","type":"text"},{"code":"SocketChannel","type":"codeVoice"},{"text":" with ","type":"text"},{"code":"initializer","type":"codeVoice"},{"text":". The most common task in initializer is to add","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s to the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"handler"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","text":"NIOClientTCPBootstrap"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"handler","content":[{"inlineContent":[{"text":"A closure that initializes the provided ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":".","type":"text"}],"type":"paragraph"}]}]},{"kind":"content","content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"The connected ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" will operate on ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" as inbound and ","type":"text"},{"code":"IOData","type":"codeVoice"},{"text":" as outbound messages.","type":"text"}]},{"type":"aside","style":"warning","name":"Warning","content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" closure may be invoked ","type":"text"},{"inlineContent":[{"text":"multiple times","type":"text"}],"type":"emphasis"},{"text":" so it’s usually the right choice to instantiate","type":"text"},{"text":" ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s within ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":". The reason ","type":"text"},{"code":"handler","type":"codeVoice"},{"text":" may be invoked multiple times is that to","type":"text"},{"text":" ","type":"text"},{"text":"successfully set up a connection multiple connections might be setup in the process. Assuming a","type":"text"},{"text":" ","type":"text"},{"text":"hostname that resolves to both IPv4 and IPv6 addresses, NIO will follow","type":"text"},{"text":" ","type":"text"},{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","isActive":true,"type":"reference"},{"text":" and race both an IPv4 and an IPv6","type":"text"},{"text":" ","type":"text"},{"text":"connection. It is possible that both connections get fully established before the IPv4 connection","type":"text"},{"text":" ","type":"text"},{"text":"will be closed again because the IPv6 connection ‘won the race’. Therefore the ","type":"text"},{"code":"channelInitializer","type":"codeVoice"},{"text":" ","type":"text"},{"text":"might be called multiple times and it’s important not to share stateful ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":"s in more","type":"text"},{"text":" ","type":"text"},{"text":"than one ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":".","type":"text"}]}]}]}],"metadata":{"roleHeading":"Instance Method","title":"channelInitializer(_:)","externalID":"s:7NIOCore21NIOClientTCPBootstrapV18channelInitializeryAcA15EventLoopFutureCyytGAA7Channel_pcF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"channelInitializer"},{"kind":"text","text":"(("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","kind":"typeIdentifier","text":"NIOClientTCPBootstrap"}],"modules":[{"name":"NIOCore"}],"role":"symbol","symbolKind":"method"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)"},"sections":[],"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap":{"abstract":[{"code":"NIOClientTCPBootstrap","type":"codeVoice"},{"type":"text","text":" is a bootstrap that allows you to bootstrap client TCP connections using NIO on BSD Sockets,"},{"type":"text","text":" "},{"type":"text","text":"NIO Transport Services, or other ways."}],"role":"symbol","url":"\/documentation\/niocore\/nioclienttcpbootstrap","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOClientTCPBootstrap","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"text":"NIOClientTCPBootstrap","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap","title":"NIOClientTCPBootstrap"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOClientTCPBootstrap/channelInitializer(_:)":{"kind":"symbol","abstract":[{"type":"text","text":"Initialize the connected "},{"type":"codeVoice","code":"SocketChannel"},{"type":"text","text":" with "},{"type":"codeVoice","code":"initializer"},{"type":"text","text":". The most common task in initializer is to add"},{"type":"text","text":" "},{"type":"codeVoice","code":"ChannelHandler"},{"type":"text","text":"s to the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":"."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOClientTCPBootstrap\/channelInitializer(_:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"channelInitializer","kind":"identifier"},{"text":"((","kind":"text"},{"preciseIdentifier":"s:7NIOCore7ChannelP","text":"Channel","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21NIOClientTCPBootstrapV","text":"NIOClientTCPBootstrap","kind":"typeIdentifier"}],"title":"channelInitializer(_:)","url":"\/documentation\/niocore\/nioclienttcpbootstrap\/channelinitializer(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel"},"https://en.wikipedia.org/wiki/Happy_Eyeballs":{"identifier":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs","title":"Happy Eyeballs","type":"link","titleInlineContent":[{"inlineContent":[{"type":"text","text":"Happy Eyeballs"}],"type":"emphasis"}],"url":"https:\/\/en.wikipedia.org\/wiki\/Happy_Eyeballs"}}}
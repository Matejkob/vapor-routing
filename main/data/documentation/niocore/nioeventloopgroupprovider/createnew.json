{"abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"EventLoopGroup"},{"text":" when necessary.","type":"text"},{"text":" ","type":"text"},{"text":"The library which accepts this provider takes ownership of the created event loop group,","type":"text"},{"text":" ","type":"text"},{"text":"and must ensure its proper shutdown when the library is being shut down.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider"]]},"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"createNew"}],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"modules":[{"name":"NIOCore"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createNew","kind":"identifier"}],"externalID":"s:7NIOCore25NIOEventLoopGroupProviderO9createNewyA2CmF","roleHeading":"Case","role":"symbol","symbolKind":"case","title":"NIOEventLoopGroupProvider.createNew"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/nioeventloopgroupprovider\/createnew"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/createNew"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider/createNew":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider\/createNew","url":"\/documentation\/niocore\/nioeventloopgroupprovider\/createnew","abstract":[{"type":"text","text":"Create a new "},{"type":"codeVoice","code":"EventLoopGroup"},{"type":"text","text":" when necessary."},{"type":"text","text":" "},{"type":"text","text":"The library which accepts this provider takes ownership of the created event loop group,"},{"type":"text","text":" "},{"text":"and must ensure its proper shutdown when the library is being shut down.","type":"text"}],"role":"symbol","title":"NIOEventLoopGroupProvider.createNew","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"createNew","kind":"identifier"}],"type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOEventLoopGroupProvider":{"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOEventLoopGroupProvider","url":"\/documentation\/niocore\/nioeventloopgroupprovider","abstract":[{"type":"text","text":"This type is intended to be used by libraries which use NIO, and offer their users either the option"},{"type":"text","text":" "},{"type":"text","text":"to "},{"code":".share","type":"codeVoice"},{"type":"text","text":" an existing event loop group or create (and manage) a new one ("},{"code":".createNew","type":"codeVoice"},{"type":"text","text":") and let it be"},{"type":"text","text":" "},{"type":"text","text":"managed by given library and its lifecycle."}],"navigatorTitle":[{"text":"NIOEventLoopGroupProvider","kind":"identifier"}],"role":"symbol","title":"NIOEventLoopGroupProvider","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOEventLoopGroupProvider","kind":"identifier"}],"type":"topic"}}}
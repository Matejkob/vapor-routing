{"schemaVersion":{"major":0,"patch":0,"minor":3},"kind":"symbol","sections":[],"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","title":"makeSucceededVoidFuture()","externalID":"s:7NIOCore9EventLoopPAAE23makeSucceededVoidFutureAA0bcG0CyytGyF","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco"]]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-1r0v4"]}],"abstract":[{"type":"text","text":"Default implementation of "},{"type":"codeVoice","code":"makeSucceededVoidFuture"},{"type":"text","text":": Return a fresh future (which will allocate)."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-1r0v4","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}]}],"kind":"declarations"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededVoidFuture()-4okco":{"kind":"symbol","title":"makeSucceededVoidFuture()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"makeSucceededVoidFuture"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"defaultImplementations":1,"type":"topic","abstract":[{"type":"text","text":"Return a succeeded "},{"type":"codeVoice","code":"Void"},{"type":"text","text":" future."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-4okco","required":true,"url":"\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-4okco","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop/makeSucceededVoidFuture()-1r0v4":{"abstract":[{"text":"Default implementation of ","type":"text"},{"type":"codeVoice","code":"makeSucceededVoidFuture"},{"text":": Return a fresh future (which will allocate).","type":"text"}],"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"makeSucceededVoidFuture","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/eventloop\/makesucceededvoidfuture()-1r0v4","type":"topic","kind":"symbol","title":"makeSucceededVoidFuture()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop\/makeSucceededVoidFuture()-1r0v4"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoop":{"url":"\/documentation\/niocore\/eventloop","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoop","abstract":[{"text":"An EventLoop processes IO \/ tasks in an endless loop for ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":"s until itâ€™s closed.","type":"text"}],"navigatorTitle":[{"text":"EventLoop","kind":"identifier"}],"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"text":"EventLoop","kind":"identifier"}],"title":"EventLoop"}}}
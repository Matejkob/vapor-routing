{"relationshipsSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"],"kind":"relationships","type":"inheritsFrom","title":"Inherits From"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"],"kind":"relationships","type":"conformingTypes","title":"Conforming Types"}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"sections":[],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","interfaceLanguage":"swift"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInvoker","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelInboundInvokerP","text":"ChannelInboundInvoker","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:7NIOCore22ChannelOutboundInvokerP","text":"ChannelOutboundInvoker","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker"}]}]}],"metadata":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInvoker"}],"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"ChannelInvoker"}],"externalID":"s:7NIOCore14ChannelInvokerP","modules":[{"name":"NIOCore"}],"symbolKind":"protocol","title":"ChannelInvoker","role":"symbol"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelinvoker"]}],"abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInboundInvoker":{"url":"\/documentation\/niocore\/channelinboundinvoker","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelInboundInvoker","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInboundInvoker","type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Fire inbound events related to a "},{"type":"codeVoice","code":"Channel"},{"text":" through the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" until its end is reached or it’s consumed by a ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","navigatorTitle":[{"text":"ChannelInboundInvoker","kind":"identifier"}],"title":"ChannelInboundInvoker"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"title":"ChannelPipeline","kind":"symbol","type":"topic","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"text":"interact with each other.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelInvoker":{"abstract":[{"type":"text","text":"A protocol that signals that outbound and inbound events are triggered by this invoker."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelInvoker"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelInvoker","title":"ChannelInvoker","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelInvoker"}],"type":"topic","url":"\/documentation\/niocore\/channelinvoker"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelOutboundInvoker":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelOutboundInvoker","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/channeloutboundinvoker","abstract":[{"type":"text","text":"Allows users to invoke an “outbound” operation related to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" that will flow through the "},{"type":"codeVoice","code":"ChannelPipeline"},{"type":"text","text":" until"},{"type":"text","text":" "},{"type":"text","text":"it will finally be executed by the the "},{"type":"codeVoice","code":"ChannelCore"},{"type":"text","text":" implementation."}],"title":"ChannelOutboundInvoker","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelOutboundInvoker"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ChannelOutboundInvoker"}]}}}
{"kind":"symbol","schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelHandlerContext","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOAny","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","preciseIdentifier":"s:7NIOCore6NIOAnyV"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which this "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" belongs to."}]}],"name":"context"},{"content":[{"inlineContent":[{"type":"text","text":"The data to write through the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", wrapped in a "},{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"data"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" which should be notified once the operation completes, or nil if no notification should take place.","type":"text"}]}],"name":"promise"}]},{"content":[{"text":"Discussion","level":2,"type":"heading","anchor":"discussion"},{"inlineContent":[{"text":"This should call ","type":"text"},{"code":"context.write","type":"codeVoice"},{"text":" to forward the operation to the next ","type":"text"},{"code":"_ChannelOutboundHandler","type":"codeVoice"},{"text":" in the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" or","type":"text"},{"text":" ","type":"text"},{"text":"complete the ","type":"text"},{"code":"EventLoopPromise","type":"codeVoice"},{"text":" to let the caller know that the operation completed.","type":"text"}],"type":"paragraph"}],"kind":"content"}],"metadata":{"role":"symbol","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore20MessageToByteHandlerC5write7context4data7promiseyAA07ChannelE7ContextC_AA6NIOAnyVAA16EventLoopPromiseVyytGSgtF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"externalParam","text":"context"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny"},{"kind":"text","text":", "},{"kind":"externalParam","text":"promise"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV","text":"EventLoopPromise"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">?)"}],"title":"write(context:data:promise:)","extendedModule":"NIOCore","symbolKind":"method","roleHeading":"Instance Method","conformance":{"availabilityPrefix":[{"text":"Available when","type":"text"}],"conformancePrefix":[{"text":"Conforms when","type":"text"}],"constraints":[{"type":"codeVoice","code":"Encoder"},{"text":" conforms to ","type":"text"},{"type":"codeVoice","code":"MessageToByteEncoder"},{"text":".","type":"text"}]}},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/write(context:data:promise:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/messagetobytehandler\/write(context:data:promise:)"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/_ChannelOutboundHandler-Implementations"]]},"sections":[],"abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Channel.flush"},{"text":" or ","type":"text"},{"type":"codeVoice","code":"ChannelHandlerContext.flush"},{"text":" is called.","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/MessageToByteHandler/write(context:data:promise:)":{"title":"write(context:data:promise:)","url":"\/documentation\/niocore\/messagetobytehandler\/write(context:data:promise:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/write(context:data:promise:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"write","kind":"identifier"},{"text":"(","kind":"text"},{"text":"context","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore21ChannelHandlerContextC","text":"ChannelHandlerContext","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore6NIOAnyV","text":"NIOAny","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"promise","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"EventLoopPromise","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore16EventLoopPromiseV"},{"text":"<","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">?)","kind":"text"}],"abstract":[{"text":"Called to request a write operation. The write operation will write the messages through the","type":"text"},{"text":" ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":". Those are then ready to be flushed to the actual ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" when","type":"text"},{"text":" ","type":"text"},{"code":"Channel.flush","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"ChannelHandlerContext.flush","type":"codeVoice"},{"text":" is called.","type":"text"}],"kind":"symbol","conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Encoder"},{"type":"text","text":" conforms to "},{"code":"MessageToByteEncoder","type":"codeVoice"},{"type":"text","text":"."}]}},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopPromise":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopPromise","role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/eventlooppromise","abstract":[{"type":"text","text":"A promise to provide a result later."}],"title":"EventLoopPromise","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopPromise"}],"type":"topic","navigatorTitle":[{"kind":"identifier","text":"EventLoopPromise"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MessageToByteHandler/_ChannelOutboundHandler-Implementations":{"title":"_ChannelOutboundHandler Implementations","url":"\/documentation\/niocore\/messagetobytehandler\/_channeloutboundhandler-implementations","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler\/_ChannelOutboundHandler-Implementations","role":"collectionGroup","type":"topic","abstract":[],"kind":"article"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelHandlerContext":{"url":"\/documentation\/niocore\/channelhandlercontext","title":"ChannelHandlerContext","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelHandlerContext","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"ChannelHandlerContext"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Every "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":" has – when added to a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" – a corresponding "},{"code":"ChannelHandlerContext","type":"codeVoice"},{"type":"text","text":" which is"},{"type":"text","text":" "},{"type":"text","text":"the way "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s can interact with other "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in the pipeline."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"ChannelHandlerContext"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOAny":{"role":"symbol","url":"\/documentation\/niocore\/nioany","title":"NIOAny","navigatorTitle":[{"text":"NIOAny","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOAny","type":"topic","abstract":[{"type":"codeVoice","code":"NIOAny"},{"type":"text","text":" is an opaque container for values of "},{"type":"emphasis","inlineContent":[{"text":"any","type":"text"}]},{"type":"text","text":" type, similar to Swift’s builtin "},{"type":"codeVoice","code":"Any"},{"text":" type. Contrary to","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" the overhead of ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" depends on the the type of the wrapped value. Certain types that are important","type":"text"},{"text":" ","type":"text"},{"text":"for the performance of a SwiftNIO application like ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":", ","type":"text"},{"type":"codeVoice","code":"FileRegion"},{"text":" and ","type":"text"},{"type":"codeVoice","code":"AddressEnvelope<ByteBuffer>"},{"text":" can be expected","type":"text"},{"text":" ","type":"text"},{"text":"to be wrapped almost without overhead. All others will have similar performance as if they were passed as an ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" as","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"NIOAny"},{"text":" just like ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" will contain them within an existential container.","type":"text"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOAny","kind":"identifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/MessageToByteHandler":{"kind":"symbol","url":"\/documentation\/niocore\/messagetobytehandler","title":"MessageToByteHandler","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MessageToByteHandler"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/MessageToByteHandler","role":"symbol","abstract":[{"text":"A handler which turns a given ","type":"text"},{"type":"codeVoice","code":"MessageToByteEncoder"},{"text":" into a ","type":"text"},{"type":"codeVoice","code":"ChannelOutboundHandler"},{"text":" that can then be added to a","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"ChannelPipeline"},{"text":".","type":"text"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"MessageToByteHandler"}]}}}
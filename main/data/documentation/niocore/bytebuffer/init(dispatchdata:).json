{"kind":"symbol","metadata":{"externalID":"s:7NIOCore10ByteBufferV12dispatchDataAC8Dispatch0fE0V_tcfc","roleHeading":"Initializer","symbolKind":"init","title":"init(dispatchData:)","role":"symbol","extendedModule":"NIOCore","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"dispatchData"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A4DataV","text":"DispatchData"},{"kind":"text","text":")"}],"modules":[{"name":"NIOCore"}]},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)"]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"init","kind":"keyword"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"type":"text","text":"This will allocate a new "},{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" with enough space to fit the bytes of the "},{"code":"DispatchData","type":"codeVoice"},{"type":"text","text":" and potentially"},{"type":"text","text":" "},{"type":"text","text":"some extra space using the default allocator."}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"info: If you have access to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":", or "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" we"},{"type":"text","text":" "},{"type":"text","text":"recommend using "},{"type":"codeVoice","code":"channel.allocator.buffer(dispatchData:)"},{"type":"text","text":". Or if you want to write multiple items into"},{"type":"text","text":" "},{"type":"text","text":"the buffer use "},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: ...)"},{"type":"text","text":" to allocate a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" of the right"},{"type":"text","text":" "},{"type":"text","text":"size followed by a "},{"type":"codeVoice","code":"writeDispatchData"},{"type":"text","text":" instead of using this method. This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" in the future."}]}]}]}]}],"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" containing the bytes contained in the given ","type":"text"},{"code":"DispatchData","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)","interfaceLanguage":"swift"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(dispatchData:)":{"kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"dispatchData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchData","preciseIdentifier":"s:8Dispatch0A4DataV","kind":"typeIdentifier"},{"text":")","kind":"text"}],"type":"topic","url":"\/documentation\/niocore\/bytebuffer\/init(dispatchdata:)","role":"symbol","title":"init(dispatchData:)","abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBuffer","type":"codeVoice"},{"text":" containing the bytes contained in the given ","type":"text"},{"code":"DispatchData","type":"codeVoice"},{"text":".","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(dispatchData:)"}}}
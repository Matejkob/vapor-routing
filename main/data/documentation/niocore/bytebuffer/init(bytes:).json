{"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Bytes"},{"kind":"text","text":">("},{"kind":"externalParam","text":"bytes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:ST","text":"Sequence"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Bytes"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":" == "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5UInt8V","text":"UInt8"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"This will allocate a new ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" with enough space to fit ","type":"text"},{"type":"codeVoice","code":"bytes"},{"text":" and potentially some extra space using","type":"text"},{"text":" ","type":"text"},{"text":"the default allocator.","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"info: If you have access to a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", "},{"type":"codeVoice","code":"ChannelHandlerContext"},{"type":"text","text":", or "},{"type":"codeVoice","code":"ByteBufferAllocator"},{"type":"text","text":" we"},{"type":"text","text":" "},{"type":"text","text":"recommend using "},{"type":"codeVoice","code":"channel.allocator.buffer(bytes:)"},{"type":"text","text":". Or if you want to write multiple items into the"},{"type":"text","text":" "},{"type":"text","text":"buffer use "},{"type":"codeVoice","code":"channel.allocator.buffer(capacity: ...)"},{"type":"text","text":" to allocate a "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" of the right"},{"type":"text","text":" "},{"type":"text","text":"size followed by a "},{"type":"codeVoice","code":"writeBytes"},{"type":"text","text":" instead of using this method. This allows SwiftNIO to do"},{"type":"text","text":" "},{"type":"text","text":"accounting and optimisations of resources acquired for operations on a given "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" in the future."}]}]}]}]}],"kind":"symbol","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the ","type":"text"},{"type":"codeVoice","code":"bytes"},{"text":".","type":"text"}],"metadata":{"title":"init(bytes:)","symbolKind":"init","extendedModule":"NIOCore","role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"bytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"text":")","kind":"text"}],"modules":[{"name":"NIOCore"}],"roleHeading":"Initializer","externalID":"s:7NIOCore10ByteBufferV5bytesACx_tcSTRzs5UInt8V7ElementRtzlufc"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(bytes:)"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"paths":["\/documentation\/niocore\/bytebuffer\/init(bytes:)"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer/init(bytes:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Create a fresh ","type":"text"},{"type":"codeVoice","code":"ByteBuffer"},{"text":" containing the ","type":"text"},{"type":"codeVoice","code":"bytes"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/bytebuffer\/init(bytes:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer\/init(bytes:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Bytes","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"bytes","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bytes","kind":"typeIdentifier"},{"kind":"text","text":")"}],"title":"init(bytes:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBuffer":{"kind":"symbol","title":"ByteBuffer","abstract":[{"code":"ByteBuffer","type":"codeVoice"},{"type":"text","text":" stores contiguously allocated raw bytes. It is a random and sequential accessible sequence of zero or"},{"type":"text","text":" "},{"type":"text","text":"more bytes (octets)."}],"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBuffer"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBuffer","url":"\/documentation\/niocore\/bytebuffer","navigatorTitle":[{"kind":"identifier","text":"ByteBuffer"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"}}}
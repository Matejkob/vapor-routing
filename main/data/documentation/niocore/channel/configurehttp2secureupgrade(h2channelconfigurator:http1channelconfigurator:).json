{"kind":"symbol","metadata":{"role":"symbol","symbolKind":"method","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTP2SecureUpgrade"},{"kind":"text","text":"("},{"kind":"externalParam","text":"h2ChannelConfigurator"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"http1ChannelConfigurator"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","text":"Channel"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","externalID":"s:7NIOCore7ChannelP8NIOHTTP2E27configureHTTP2SecureUpgrade02h2B12Configurator05http1bI0AA15EventLoopFutureCyytGAjaB_pc_AjaB_pctF"},"variants":[{"paths":["\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2ChannelConfigurator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1ChannelConfigurator","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"]}]},{"parameters":[{"name":"h2ChannelConfigurator","content":[{"inlineContent":[{"type":"text","text":"A callback that will be invoked if HTTP\/2 has been negogiated, and that"},{"type":"text","text":" "},{"type":"text","text":"should configure the channel for HTTP\/2 use. Must return a future that completes when the"},{"type":"text","text":" "},{"type":"text","text":"channel has been fully mutated."}],"type":"paragraph"}]},{"name":"http1ChannelConfigurator","content":[{"inlineContent":[{"text":"A callback that will be invoked if HTTP\/1.1 has been explicitly","type":"text"},{"text":" ","type":"text"},{"text":"negotiated, or if no protocol was negotiated. Must return a future that completes when the","type":"text"},{"text":" ","type":"text"},{"text":"channel has been fully mutated.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","type":"heading","level":2},{"inlineContent":[{"text":"An ","type":"text"},{"code":"EventLoopFuture<Void>","type":"codeVoice"},{"text":" that completes when the channel is ready to negotiate.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"HTTP\/2 secure upgrade uses the Application Layer Protocol Negotiation TLS extension to"},{"type":"text","text":" "},{"type":"text","text":"negotiate the inner protocol as part of the TLS handshake. For this reason, until the TLS"},{"type":"text","text":" "},{"type":"text","text":"handshake is complete, the ultimate configuration of the channel pipeline cannot be known."}]},{"type":"paragraph","inlineContent":[{"text":"This function configures the channel with a pair of callbacks that will handle the result","type":"text"},{"text":" ","type":"text"},{"text":"of the negotiation. It explicitly ","type":"text"},{"inlineContent":[{"type":"text","text":"does not"}],"type":"strong"},{"text":" configure a TLS handler to actually attempt","type":"text"},{"text":" ","type":"text"},{"text":"to negotiate ALPN. The supported ALPN protocols are provided in","type":"text"},{"text":" ","type":"text"},{"code":"NIOHTTP2SupportedALPNProtocols","type":"codeVoice"},{"text":": please ensure that the TLS handler you are using for your","type":"text"},{"text":" ","type":"text"},{"text":"pipeline is appropriately configured to perform this protocol negotiation.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If negotiation results in an unexpected protocol, the pipeline will close the connection","type":"text"},{"text":" ","type":"text"},{"text":"and no callback will fire.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"This configuration is acceptable for use on both client and server channel pipelines.","type":"text"}]}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel"]]},"schemaVersion":{"patch":0,"major":0,"minor":3},"abstract":[{"type":"text","text":"Configures a channel to perform a HTTP\/2 secure upgrade."}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)":{"type":"topic","abstract":[{"text":"Configures a channel to perform a HTTP\/2 secure upgrade.","type":"text"}],"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTP2SecureUpgrade","kind":"identifier"},{"text":"(","kind":"text"},{"text":"h2ChannelConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"http1ChannelConfigurator","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Channel","preciseIdentifier":"s:7NIOCore7ChannelP","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","title":"configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)","url":"\/documentation\/niocore\/channel\/configurehttp2secureupgrade(h2channelconfigurator:http1channelconfigurator:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel\/configureHTTP2SecureUpgrade(h2ChannelConfigurator:http1ChannelConfigurator:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/Channel":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/Channel","navigatorTitle":[{"kind":"identifier","text":"Channel"}],"title":"Channel","abstract":[{"text":"A ","type":"text"},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" is easiest thought of as a network socket. But it can be anything that is capable of I\/O operations such"},{"type":"text","text":" "},{"type":"text","text":"as read, write, connect, and bind."}],"kind":"symbol","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"Channel"}],"url":"\/documentation\/niocore\/channel"}}}
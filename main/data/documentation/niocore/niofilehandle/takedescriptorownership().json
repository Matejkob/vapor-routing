{"kind":"symbol","primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"}]}],"kind":"declarations"},{"content":[{"anchor":"return-value","level":2,"type":"heading","text":"Return Value"},{"inlineContent":[{"text":"The underlying file descriptor, now owned by the caller.","type":"text"}],"type":"paragraph"}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"After calling this, the ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":" cannot be used for anything else and all the operations will throw.","type":"text"}]}],"kind":"content"}],"metadata":{"symbolKind":"method","roleHeading":"Instance Method","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"takeDescriptorOwnership"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"}],"title":"takeDescriptorOwnership()","externalID":"s:7NIOCore13NIOFileHandleC23takeDescriptorOwnerships5Int32VyKF","role":"symbol"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"]]},"variants":[{"paths":["\/documentation\/niocore\/niofilehandle\/takedescriptorownership()"],"traits":[{"interfaceLanguage":"swift"}]}],"abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"code":"close()","type":"codeVoice"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"code":"close()","type":"codeVoice"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"title":"takeDescriptorOwnership()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"url":"\/documentation\/niocore\/niofilehandle","title":"NIOFileHandle","kind":"symbol","navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"role":"symbol"}}}
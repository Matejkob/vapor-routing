{"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastTTL","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"CUnsignedChar","preciseIdentifier":"s:s13CUnsignedChara","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Void","preciseIdentifier":"s:s4Voida","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The value to set IP_MULTICAST_TTL to."}]}],"name":"value"}],"kind":"parameters"},{"content":[{"level":2,"text":"Return Value","type":"heading","anchor":"return-value"},{"inlineContent":[{"type":"text","text":"An "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that fires when the option has been set,"},{"type":"text","text":" "},{"type":"text","text":"or if an error has occurred."}],"type":"paragraph"}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/socketoptionprovider\/setipmulticastttl(_:)"]}],"metadata":{"title":"setIPMulticastTTL(_:)","symbolKind":"method","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","roleHeading":"Instance Method","externalID":"s:7NIOCore20SocketOptionProviderPAAE17setIPMulticastTTLyAA15EventLoopFutureCyytGs5UInt8VF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setIPMulticastTTL","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s13CUnsignedChara","text":"CUnsignedChar","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol"},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastTTL(_:)","interfaceLanguage":"swift"},"kind":"symbol","abstract":[{"type":"text","text":"Sets the socket option IP_MULTICAST_TTL to "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider"]]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider":{"type":"topic","url":"\/documentation\/niocore\/socketoptionprovider","title":"SocketOptionProvider","navigatorTitle":[{"kind":"identifier","text":"SocketOptionProvider"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketOptionProvider"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider","kind":"symbol","abstract":[{"type":"text","text":"This protocol defines an object, most commonly a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", that supports"},{"type":"text","text":" "},{"type":"text","text":"setting and getting socket options (via "},{"type":"codeVoice","code":"setsockopt"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"getsockopt"},{"type":"text","text":" or similar)."},{"type":"text","text":" "},{"type":"text","text":"It provides a strongly typed API that makes working with larger, less-common"},{"type":"text","text":" "},{"type":"text","text":"socket options easier than the "},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" API allows."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPMulticastTTL(_:)":{"title":"setIPMulticastTTL(_:)","url":"\/documentation\/niocore\/socketoptionprovider\/setipmulticastttl(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastTTL(_:)","type":"topic","abstract":[{"type":"text","text":"Sets the socket option IP_MULTICAST_TTL to "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setIPMulticastTTL"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CUnsignedChar","preciseIdentifier":"s:s13CUnsignedChara"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol"}}}
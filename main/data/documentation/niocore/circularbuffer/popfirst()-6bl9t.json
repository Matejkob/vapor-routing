{"sections":[],"metadata":{"role":"symbol","externalID":"s:7NIOCore14CircularBufferV8popFirstxSgyF","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","roleHeading":"Instance Method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"popFirst","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}],"symbolKind":"method","title":"popFirst()"},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popFirst()-6bl9t"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"text":"() -> ","kind":"text"},{"text":"Element","kind":"typeIdentifier"},{"text":"?","kind":"text"}]}],"kind":"declarations"},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"The first element of the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"text":" if the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"text":" is not","type":"text"},{"text":" ","type":"text"},{"text":"empty; otherwise, ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":".","type":"text"}]}],"kind":"content"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"inlineContent":[{"type":"text","text":"Calling this method may invalidate all saved indices of this"},{"type":"text","text":" "},{"code":"CircularBuffer","type":"codeVoice"},{"type":"text","text":". Do not rely on a previously stored index value after"},{"type":"text","text":" "},{"type":"text","text":"altering a "},{"code":"CircularBuffer","type":"codeVoice"},{"type":"text","text":" with any operation that can change its length."}],"type":"paragraph"},{"content":[{"inlineContent":[{"type":"text","text":"O(1)"}],"type":"paragraph"}],"type":"aside","name":"Complexity","style":"note"}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/popfirst()-6bl9t"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"abstract":[{"text":"Removes and returns the first element of the ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":".","type":"text"}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/popFirst()-6bl9t":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/popFirst()-6bl9t","title":"popFirst()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"popFirst"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Element"},{"kind":"text","text":"?"}],"url":"\/documentation\/niocore\/circularbuffer\/popfirst()-6bl9t","type":"topic","kind":"symbol","role":"symbol","abstract":[{"type":"text","text":"Removes and returns the first element of the "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"title":"CircularBuffer","url":"\/documentation\/niocore\/circularbuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol"}}}
{"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"mutating","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeLast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"k","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"k","content":[{"type":"paragraph","inlineContent":[{"text":"The number of elements to remove from the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"text":".","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"k"},{"text":" must be greater than or equal to zero and must not exceed the","type":"text"},{"text":" ","type":"text"},{"text":"number of elements in the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"text":".","type":"text"}]}]}],"kind":"parameters"},{"content":[{"text":"Discussion","level":2,"anchor":"discussion","type":"heading"},{"inlineContent":[{"text":"Attempting to remove more elements than exist in the ","type":"text"},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":" "},{"type":"text","text":"triggers a runtime error."}],"type":"paragraph"},{"inlineContent":[{"text":"Calling this method may invalidate all saved indices of this","type":"text"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":". Do not rely on a previously stored index value after","type":"text"},{"text":" ","type":"text"},{"text":"altering a ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":" with any operation that can change its length.","type":"text"}],"type":"paragraph"},{"name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"emphasis","inlineContent":[{"text":"k","type":"text"}]},{"type":"text","text":"), where "},{"type":"emphasis","inlineContent":[{"type":"text","text":"k"}]},{"type":"text","text":" is the specified number of elements."}]}],"style":"note","type":"aside"}],"kind":"content"}],"kind":"symbol","variants":[{"paths":["\/documentation\/niocore\/circularbuffer\/removelast(_:)-1pry7"],"traits":[{"interfaceLanguage":"swift"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeLast(_:)-1pry7"},"abstract":[{"type":"text","text":"Removes the specified number of elements from the end of the"},{"type":"text","text":" "},{"type":"codeVoice","code":"CircularBuffer"},{"type":"text","text":"."}],"metadata":{"externalID":"s:7NIOCore14CircularBufferV10removeLastyySiF","modules":[{"name":"NIOCore"}],"symbolKind":"method","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"removeLast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":")","kind":"text"}],"roleHeading":"Instance Method","role":"symbol","title":"removeLast(_:)","extendedModule":"NIOCore"},"sections":[],"schemaVersion":{"patch":0,"minor":3,"major":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer/removeLast(_:)-1pry7":{"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeLast"},{"text":"(","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":")","kind":"text"}],"title":"removeLast(_:)","type":"topic","url":"\/documentation\/niocore\/circularbuffer\/removelast(_:)-1pry7","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer\/removeLast(_:)-1pry7","abstract":[{"text":"Removes the specified number of elements from the end of the","type":"text"},{"text":" ","type":"text"},{"code":"CircularBuffer","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/CircularBuffer":{"title":"CircularBuffer","url":"\/documentation\/niocore\/circularbuffer","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CircularBuffer","kind":"identifier"}],"abstract":[{"type":"text","text":"An automatically expanding ring buffer implementation backed by a "},{"type":"codeVoice","code":"ContiguousArray"},{"type":"text","text":". Even though this implementation"},{"type":"text","text":" "},{"type":"text","text":"will automatically expand if more elements than "},{"type":"codeVoice","code":"initialCapacity"},{"type":"text","text":" are stored, itâ€™s advantageous to prevent"},{"type":"text","text":" "},{"type":"text","text":"expansions from happening frequently. Expansions will always force an allocation and a copy to happen."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/CircularBuffer","kind":"symbol","type":"topic","navigatorTitle":[{"text":"CircularBuffer","kind":"identifier"}],"role":"symbol"}}}
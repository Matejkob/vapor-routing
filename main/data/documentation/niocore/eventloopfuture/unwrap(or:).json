{"kind":"symbol","identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/unwrap(or:)","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"("},{"kind":"externalParam","text":"or"},{"kind":"text","text":" "},{"kind":"internalParam","text":"error"},{"kind":"text","text":": "},{"kind":"attribute","text":"@autoclosure "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" () -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WrappedType"},{"kind":"text","text":">"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"","type":"text"},{"type":"codeVoice","code":"Error"},{"text":" to throw if the value is ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":". This is captured with ","type":"text"},{"type":"codeVoice","code":"@autoclosure"},{"text":" ","type":"text"},{"text":"to avoid initialize the ","type":"text"},{"type":"codeVoice","code":"Error"},{"text":" unless needed.","type":"text"}]}],"name":"error"}],"kind":"parameters"},{"content":[{"text":"Discussion","type":"heading","anchor":"discussion","level":2},{"type":"codeListing","code":["print(futureString) \/\/ Future<String?>","futureString.unwrap(or: MyError()) \/\/ Future<String>"],"syntax":null}],"kind":"content"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"metadata":{"role":"symbol","roleHeading":"Instance Method","title":"unwrap(or:)","symbolKind":"method","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","externalID":"s:7NIOCore15EventLoopFutureC5VaporAD12OptionalTypeRzlE6unwrap2orACy07WrappedG0QzGs5Error_pyXA_tF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"("},{"kind":"externalParam","text":"or"},{"kind":"text","text":": () -> "},{"kind":"typeIdentifier","text":"Error","preciseIdentifier":"s:s5ErrorP"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WrappedType"},{"kind":"text","text":">"}],"conformance":{"conformancePrefix":[{"type":"text","text":"Conforms when"}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"code":"Value","type":"codeVoice"},{"type":"text","text":" conforms to "},{"code":"OptionalType","type":"codeVoice"},{"type":"text","text":"."}]}},"abstract":[{"text":"Unwraps an ","type":"text"},{"type":"codeVoice","code":"Optional"},{"text":" value contained inside a Future’s expectation.","type":"text"},{"text":" ","type":"text"},{"text":"If the optional resolves to ","type":"text"},{"type":"codeVoice","code":"nil"},{"text":" (","type":"text"},{"type":"codeVoice","code":".none"},{"type":"text","text":"), the supplied error will be thrown instead."}],"variants":[{"paths":["\/documentation\/niocore\/eventloopfuture\/unwrap(or:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/unwrap(or:)":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unwrap"},{"kind":"text","text":"("},{"kind":"externalParam","text":"or"},{"kind":"text","text":": () -> "},{"preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier","text":"Error"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"WrappedType"},{"kind":"text","text":">"}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/unwrap(or:)","title":"unwrap(or:)","abstract":[{"type":"text","text":"Unwraps an "},{"type":"codeVoice","code":"Optional"},{"type":"text","text":" value contained inside a Future’s expectation."},{"type":"text","text":" "},{"type":"text","text":"If the optional resolves to "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" ("},{"type":"codeVoice","code":".none"},{"type":"text","text":"), the supplied error will be thrown instead."}],"url":"\/documentation\/niocore\/eventloopfuture\/unwrap(or:)","conformance":{"availabilityPrefix":[{"type":"text","text":"Available when"}],"constraints":[{"type":"codeVoice","code":"Value"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"OptionalType"},{"type":"text","text":"."}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"type":"topic","kind":"symbol"}}}
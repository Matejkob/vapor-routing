{"sections":[],"abstract":[{"type":"text","text":"Checks that the future’s value (if any) returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" for "},{"code":".isEmpty","type":"codeVoice"},{"text":". If the check fails, a new future with","type":"text"},{"text":" ","type":"text"},{"text":"an empty array as its value is returned. Otherwise, the provided normal ","type":"text"},{"code":"map()","type":"codeVoice"},{"text":" callback is invoked. The","type":"text"},{"text":" ","type":"text"},{"text":"callback’s return type must be an ","type":"text"},{"code":"Array","type":"codeVoice"},{"text":" or a ","type":"text"},{"code":"RangeReplaceableCollection","type":"codeVoice"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"transform"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Value"},{"text":" : ","kind":"text"},{"text":"Collection","preciseIdentifier":"s:Sl","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"RangeReplaceableCollection","preciseIdentifier":"s:Sm","kind":"typeIdentifier"}],"platforms":["Linux"],"languages":["swift"]}]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/nonemptyMap(_:)"},"metadata":{"roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"title":"nonemptyMap(_:)","role":"symbol","extendedModule":"NIOCore","symbolKind":"method","modules":[{"name":"NIOCore"}],"externalID":"s:7NIOCore15EventLoopFutureC8AsyncKitE11nonemptyMapyACyqd__Gqd__xcSlRzSmRd__lF"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/nonemptymap(_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/nonemptyMap(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"nonemptyMap"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"NewValue"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Checks that the future’s value (if any) returns "},{"code":"false","type":"codeVoice"},{"type":"text","text":" for "},{"code":".isEmpty","type":"codeVoice"},{"type":"text","text":". If the check fails, a new future with"},{"type":"text","text":" "},{"type":"text","text":"an empty array as its value is returned. Otherwise, the provided normal "},{"code":"map()","type":"codeVoice"},{"type":"text","text":" callback is invoked. The"},{"type":"text","text":" "},{"type":"text","text":"callback’s return type must be an "},{"type":"codeVoice","code":"Array"},{"type":"text","text":" or a "},{"type":"codeVoice","code":"RangeReplaceableCollection"},{"type":"text","text":"."}],"kind":"symbol","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/nonemptyMap(_:)","url":"\/documentation\/niocore\/eventloopfuture\/nonemptymap(_:)","title":"nonemptyMap(_:)"}}}
{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/recover(_:)"},"abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is in an error state, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"can recover from the error and return a new value of type ","type":"text"},{"type":"codeVoice","code":"Value"},{"type":"text","text":". The provided callback may not "},{"type":"codeVoice","code":"throw"},{"type":"text","text":","},{"type":"text","text":" "},{"type":"text","text":"so this function should be used when the error is always recoverable."}],"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recover"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"callback"},{"kind":"text","text":": "},{"kind":"keyword","text":"@escaping"},{"kind":"text","text":" ("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":">"}],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Function that will receive the error value of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and return","type":"text"},{"text":" ","type":"text"},{"text":"a new value lifted into a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"callback"}]},{"content":[{"type":"heading","anchor":"return-value","text":"Return Value","level":2},{"type":"paragraph","inlineContent":[{"text":"A future that will receive the recovered value.","type":"text"}]}],"kind":"content"},{"content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Operations performed in ","type":"text"},{"type":"codeVoice","code":"recover"},{"text":" should not block, or they will block the entire","type":"text"},{"text":" ","type":"text"},{"text":"event loop. ","type":"text"},{"type":"codeVoice","code":"recover"},{"text":" is intended for use when you have the ability to synchronously","type":"text"},{"text":" ","type":"text"},{"text":"recover from errors.","type":"text"}]}],"kind":"content"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/recover(_:)"]}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"metadata":{"roleHeading":"Instance Method","title":"recover(_:)","symbolKind":"method","role":"symbol","extendedModule":"NIOCore","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"recover"},{"kind":"text","text":"(("},{"kind":"typeIdentifier","preciseIdentifier":"s:s5ErrorP","text":"Error"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Value"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"externalID":"s:7NIOCore15EventLoopFutureC7recoveryACyxGxs5Error_pcF","modules":[{"name":"NIOCore"}]},"sections":[],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/recover(_:)":{"title":"recover(_:)","role":"symbol","type":"topic","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"recover","kind":"identifier"},{"text":"((","kind":"text"},{"text":"Error","preciseIdentifier":"s:s5ErrorP","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/eventloopfuture\/recover(_:)","abstract":[{"text":"When the current ","type":"text"},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"text":" is in an error state, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"can recover from the error and return a new value of type ","type":"text"},{"type":"codeVoice","code":"Value"},{"text":". The provided callback may not ","type":"text"},{"type":"codeVoice","code":"throw"},{"text":",","type":"text"},{"text":" ","type":"text"},{"text":"so this function should be used when the error is always recoverable.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/recover(_:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]}}}
{"primaryContentSections":[{"declarations":[{"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callback","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":")) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"callback","content":[{"inlineContent":[{"text":"Function that will receive the value of this ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":" and return","type":"text"},{"text":" ","type":"text"},{"text":"a new value lifted into a new ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"content":[{"anchor":"return-value","type":"heading","text":"Return Value","level":2},{"inlineContent":[{"type":"text","text":"A future that will receive the eventual value."}],"type":"paragraph"}],"kind":"content"},{"content":[{"type":"heading","anchor":"discussion","level":2,"text":"Discussion"},{"type":"paragraph","inlineContent":[{"text":"Operations performed in ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" should not block, or they will block the entire event","type":"text"},{"text":" ","type":"text"},{"text":"loop. ","type":"text"},{"code":"map","type":"codeVoice"},{"text":" is intended for use when you have a data-driven function that performs","type":"text"},{"text":" ","type":"text"},{"text":"a simple data transformation that cannot error.","type":"text"}]},{"type":"paragraph","inlineContent":[{"text":"If you have a data-driven function that can throw, you should use ","type":"text"},{"code":"flatMapThrowing","type":"codeVoice"},{"text":" ","type":"text"},{"text":"instead.","type":"text"}]},{"type":"codeListing","syntax":null,"code":["let future1 = eventually()","let future2 = future1.map { T -> U in","    ... stuff ...","    return u","}","let future3 = future2.map { U -> V in","    ... stuff ...","    return v","}"]}],"kind":"content"}],"abstract":[{"text":"When the current ","type":"text"},{"code":"EventLoopFuture<Value>","type":"codeVoice"},{"text":" is fulfilled, run the provided callback, which","type":"text"},{"text":" ","type":"text"},{"text":"performs a synchronous computation and returns a new value of type ","type":"text"},{"code":"NewValue","type":"codeVoice"},{"text":".","type":"text"}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/map(_:)","interfaceLanguage":"swift"},"metadata":{"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"map"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"NewValue"},{"kind":"text","text":">(("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> ("},{"text":"NewValue","kind":"typeIdentifier"},{"text":")) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"roleHeading":"Instance Method","symbolKind":"method","title":"map(_:)","modules":[{"name":"NIOCore"}],"extendedModule":"NIOCore","role":"symbol","externalID":"s:7NIOCore15EventLoopFutureC3mapyACyqd__Gqd__xclF"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/map(_:)"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/map(_:)":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"map","kind":"identifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":")) -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"NewValue","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/eventloopfuture\/map(_:)","title":"map(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/map(_:)","type":"topic","abstract":[{"type":"text","text":"When the current "},{"type":"codeVoice","code":"EventLoopFuture<Value>"},{"type":"text","text":" is fulfilled, run the provided callback, which"},{"type":"text","text":" "},{"type":"text","text":"performs a synchronous computation and returns a new value of type "},{"type":"codeVoice","code":"NewValue"},{"type":"text","text":"."}],"role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]}}}
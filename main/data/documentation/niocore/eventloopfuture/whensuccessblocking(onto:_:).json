{"schemaVersion":{"major":0,"patch":0,"minor":3},"abstract":[{"type":"text","text":"Adds an observer callback to this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" has a success result. The observer callback is permitted to block."}],"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture"]]},"metadata":{"roleHeading":"Instance Method","externalID":"s:7NIOCore15EventLoopFutureC19whenSuccessBlocking4onto_y8Dispatch0I5QueueC_yxctF","title":"whenSuccessBlocking(onto:_:)","extendedModule":"NIOCore","symbolKind":"method","modules":[{"name":"NIOCore"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenSuccessBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}]},"kind":"symbol","sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"whenSuccessBlocking","kind":"identifier"},{"text":"(","kind":"text"},{"text":"onto","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"queue","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"callbackMayBlock","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":")","kind":"text"}],"platforms":["Linux"]}]},{"kind":"parameters","parameters":[{"name":"onto","content":[{"type":"paragraph","inlineContent":[{"text":"the ","type":"text"},{"type":"codeVoice","code":"DispatchQueue"},{"text":" on which the blocking IO \/ task specified by ","type":"text"},{"type":"codeVoice","code":"callbackMayBlock"},{"text":" is scheduled.","type":"text"}]}]},{"name":"callbackMayBlock","content":[{"type":"paragraph","inlineContent":[{"text":"The callback that is called with the successful result of the ","type":"text"},{"code":"EventLoopFuture","type":"codeVoice"},{"text":".","type":"text"}]}]}]},{"kind":"content","content":[{"level":2,"anchor":"discussion","text":"Discussion","type":"heading"},{"inlineContent":[{"type":"text","text":"An observer callback cannot return a value, meaning that this function cannot be chained"},{"type":"text","text":" "},{"type":"text","text":"from. If you are attempting to create a computation pipeline, consider "},{"code":"map","type":"codeVoice"},{"type":"text","text":" or "},{"code":"flatMap","type":"codeVoice"},{"type":"text","text":"."},{"type":"text","text":" "},{"type":"text","text":"If you find yourself passing the results from this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" to a new "},{"code":"EventLoopPromise","type":"codeVoice"},{"type":"text","text":" "},{"type":"text","text":"in the body of this function, consider using "},{"code":"cascade","type":"codeVoice"},{"type":"text","text":" instead."}],"type":"paragraph"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture":{"url":"\/documentation\/niocore\/eventloopfuture","title":"EventLoopFuture","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventLoopFuture"}],"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Holder for a result that will be provided later."}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"EventLoopFuture"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/EventLoopFuture/whenSuccessBlocking(onto:_:)":{"type":"topic","abstract":[{"type":"text","text":"Adds an observer callback to this "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" that is called when the"},{"type":"text","text":" "},{"code":"EventLoopFuture","type":"codeVoice"},{"type":"text","text":" has a success result. The observer callback is permitted to block."}],"role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/EventLoopFuture\/whenSuccessBlocking(onto:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"whenSuccessBlocking"},{"kind":"text","text":"("},{"kind":"externalParam","text":"onto"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"kind":"text","text":", ("},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":")"}],"title":"whenSuccessBlocking(onto:_:)","url":"\/documentation\/niocore\/eventloopfuture\/whensuccessblocking(onto:_:)","kind":"symbol"}}}
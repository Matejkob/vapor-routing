{"sections":[],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"final","kind":"keyword"},{"text":" ","kind":"text"},{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"inlineContent":[{"text":"When creating a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" it takes ownership of the underlying file descriptor. When a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is no longer","type":"text"},{"text":" ","type":"text"},{"text":"needed you must ","type":"text"},{"code":"close","type":"codeVoice"},{"text":" it or take back ownership of the file descriptor using ","type":"text"},{"code":"takeDescriptorOwnership","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"content":[{"inlineContent":[{"text":"One underlying file descriptor should usually be managed by one ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" only.","type":"text"}],"type":"paragraph"}],"style":"note","name":"Note","type":"aside"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Failing to manage the lifetime of a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" correctly will result in undefined behaviour.","type":"text"}]}],"style":"warning","name":"Warning","type":"aside"},{"content":[{"inlineContent":[{"type":"text","text":""},{"code":"NIOFileHandle","type":"codeVoice"},{"type":"text","text":" objects are not thread-safe and are mutable. They also cannot be fully thread-safe as they refer to a global underlying file descriptor."}],"type":"paragraph"}],"style":"warning","name":"Warning","type":"aside"}]}],"relationshipsSections":[{"kind":"relationships","title":"Conforms To","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"],"type":"conformsTo"}],"variants":[{"paths":["\/documentation\/niocore\/niofilehandle"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle"},"metadata":{"roleHeading":"Class","title":"NIOFileHandle","navigatorTitle":[{"kind":"identifier","text":"NIOFileHandle"}],"symbolKind":"class","role":"symbol","externalID":"s:7NIOCore13NIOFileHandleC","modules":[{"name":"NIOCore"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOFileHandle"}]},"abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"topicSections":[{"title":"Structures","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode"]},{"title":"Initializers","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"]},{"title":"Instance Methods","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)"]},{"title":"Default Implementations","generated":true,"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations"]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/withUnsafeFileDescriptor(_:)":{"title":"withUnsafeFileDescriptor(_:)","role":"symbol","url":"\/documentation\/niocore\/niofilehandle\/withunsafefiledescriptor(_:)","type":"topic","abstract":[{"type":"text","text":"Will be called with the file descriptor if still open, if not it will"},{"type":"text","text":" "},{"type":"text","text":"throw an "},{"type":"codeVoice","code":"IOError"},{"type":"text","text":"."}],"kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/withUnsafeFileDescriptor(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"withUnsafeFileDescriptor"},{"kind":"text","text":"<"},{"text":"T","kind":"genericParameter"},{"text":">((","kind":"text"},{"text":"CInt","kind":"typeIdentifier","preciseIdentifier":"s:s4CInta"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"T","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/isOpen":{"role":"symbol","kind":"symbol","url":"\/documentation\/niocore\/niofilehandle\/isopen","type":"topic","abstract":[{"code":"true","type":"codeVoice"},{"text":" if this ","type":"text"},{"code":"FileDescriptor","type":"codeVoice"},{"text":" is open (which means it was not closed yet).","type":"text"}],"title":"isOpen","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"isOpen"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/isOpen"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/close()":{"title":"close()","role":"symbol","kind":"symbol","abstract":[{"text":"Close this ","type":"text"},{"code":"FileDescriptor","type":"codeVoice"},{"text":".","type":"text"}],"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/close()","url":"\/documentation\/niocore\/niofilehandle\/close()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"close","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/CustomStringConvertible-Implementations":{"title":"CustomStringConvertible Implementations","role":"collectionGroup","type":"topic","kind":"article","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/CustomStringConvertible-Implementations","abstract":[],"url":"\/documentation\/niocore\/niofilehandle\/customstringconvertible-implementations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:mode:flags:)":{"url":"\/documentation\/niocore\/niofilehandle\/init(path:mode:flags:)","title":"init(path:mode:flags:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:mode:flags:)","kind":"symbol","role":"symbol","abstract":[{"text":"Open a new ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":". This operation is blocking.","type":"text"}],"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"text":"path","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"mode","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Mode","preciseIdentifier":"s:7NIOCore13NIOFileHandleC4ModeV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"flags","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOFileHandle","preciseIdentifier":"s:7NIOCore13NIOFileHandleC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Flags","preciseIdentifier":"s:7NIOCore13NIOFileHandleC5FlagsV","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"type":"topic"},"doc://co.pointfree.VaporRouting/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/co.pointfree.VaporRouting\/s23CustomStringConvertibleP"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(descriptor:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(descriptor:)","title":"init(descriptor:)","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"descriptor"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":")"}],"abstract":[{"text":"Create a ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" taking ownership of ","type":"text"},{"code":"descriptor","type":"codeVoice"},{"text":". You must call ","type":"text"},{"code":"NIOFileHandle.close","type":"codeVoice"},{"text":" or ","type":"text"},{"code":"NIOFileHandle.takeDescriptorOwnership","type":"codeVoice"},{"text":" before","type":"text"},{"text":" ","type":"text"},{"text":"this object can be safely released.","type":"text"}],"url":"\/documentation\/niocore\/niofilehandle\/init(descriptor:)","type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Mode":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Mode","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Mode","kind":"identifier"}],"url":"\/documentation\/niocore\/niofilehandle\/mode","title":"NIOFileHandle.Mode","kind":"symbol","navigatorTitle":[{"text":"Mode","kind":"identifier"}],"abstract":[{"code":"Mode","type":"codeVoice"},{"text":" represents file access modes.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/duplicate()":{"role":"symbol","url":"\/documentation\/niocore\/niofilehandle\/duplicate()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/duplicate()","abstract":[{"text":"Duplicates this ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"text":". This means that a new ","type":"text"},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" object with a new underlying file descriptor"},{"type":"text","text":" "},{"type":"text","text":"is returned. The caller takes ownership of the returned "},{"type":"codeVoice","code":"NIOFileHandle"},{"type":"text","text":" and is responsible for closing it."}],"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"duplicate"},{"kind":"text","text":"() "},{"kind":"keyword","text":"throws"},{"text":" -> ","kind":"text"},{"text":"NIOFileHandle","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore13NIOFileHandleC"}],"kind":"symbol","type":"topic","title":"duplicate()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle":{"type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"NIOFileHandle","kind":"identifier"}],"url":"\/documentation\/niocore\/niofilehandle","title":"NIOFileHandle","kind":"symbol","navigatorTitle":[{"text":"NIOFileHandle","kind":"identifier"}],"abstract":[{"text":"A ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":" is a handle to an open file.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/init(path:)":{"fragments":[{"text":"convenience","kind":"keyword"},{"text":" ","kind":"text"},{"text":"init","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"path"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"type":"topic","title":"init(path:)","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/init(path:)","abstract":[{"text":"Open a new ","type":"text"},{"code":"NIOFileHandle","type":"codeVoice"},{"text":". This operation is blocking.","type":"text"}],"url":"\/documentation\/niocore\/niofilehandle\/init(path:)","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/FileDescriptor":{"type":"topic","abstract":[],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileDescriptor"}],"title":"FileDescriptor","url":"\/documentation\/niocore\/filedescriptor","kind":"symbol","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/FileDescriptor","navigatorTitle":[{"kind":"identifier","text":"FileDescriptor"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/takeDescriptorOwnership()":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Take the ownership of the underlying file descriptor. This is similar to "},{"code":"close()","type":"codeVoice"},{"type":"text","text":" but the underlying file"},{"type":"text","text":" "},{"type":"text","text":"descriptor remains open. The caller is responsible for closing the file descriptor by some other means."}],"title":"takeDescriptorOwnership()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/takeDescriptorOwnership()","url":"\/documentation\/niocore\/niofilehandle\/takedescriptorownership()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"takeDescriptorOwnership","kind":"identifier"},{"text":"() ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOFileHandle/Flags":{"type":"topic","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOFileHandle\/Flags","navigatorTitle":[{"kind":"identifier","text":"Flags"}],"abstract":[{"code":"Flags","type":"codeVoice"},{"type":"text","text":" allows to specify additional flags to "},{"code":"Mode","type":"codeVoice"},{"type":"text","text":", such as permission for file creation."}],"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Flags"}],"title":"NIOFileHandle.Flags","url":"\/documentation\/niocore\/niofilehandle\/flags","kind":"symbol"}}}
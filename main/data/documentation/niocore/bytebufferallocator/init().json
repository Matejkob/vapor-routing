{"variants":[{"paths":["\/documentation\/niocore\/bytebufferallocator\/init()"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/init()"},"metadata":{"symbolKind":"init","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"()"}],"modules":[{"name":"NIOCore"}],"title":"init()","roleHeading":"Initializer","role":"symbol","externalID":"s:7NIOCore19ByteBufferAllocatorVACycfc"},"abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"text":". In the future the allocator might use for example allocation pools and","type":"text"},{"text":" ","type":"text"},{"text":"therefore it’s recommended to reuse ","type":"text"},{"type":"codeVoice","code":"ByteBufferAllocators"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator"]]},"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"()"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"}],"kind":"symbol","schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator":{"type":"topic","navigatorTitle":[{"kind":"identifier","text":"ByteBufferAllocator"}],"role":"symbol","abstract":[{"type":"text","text":"The preferred allocator for "},{"type":"codeVoice","code":"ByteBuffer"},{"type":"text","text":" values. The allocation strategy is opaque but is currently libc’s"},{"type":"text","text":" "},{"type":"codeVoice","code":"malloc"},{"type":"text","text":", "},{"type":"codeVoice","code":"realloc"},{"type":"text","text":" and "},{"type":"codeVoice","code":"free"},{"type":"text","text":"."}],"url":"\/documentation\/niocore\/bytebufferallocator","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"ByteBufferAllocator"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator","title":"ByteBufferAllocator"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ByteBufferAllocator/init()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ByteBufferAllocator\/init()","role":"symbol","url":"\/documentation\/niocore\/bytebufferallocator\/init()","type":"topic","title":"init()","kind":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"text":"Create a fresh ","type":"text"},{"code":"ByteBufferAllocator","type":"codeVoice"},{"type":"text","text":". In the future the allocator might use for example allocation pools and"},{"type":"text","text":" "},{"type":"text","text":"therefore it’s recommended to reuse "},{"code":"ByteBufferAllocators","type":"codeVoice"},{"type":"text","text":" where possible instead of creating fresh ones in"},{"type":"text","text":" "},{"type":"text","text":"many places."}]}}}
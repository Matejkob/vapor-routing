{"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()"},"sections":[],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline"]]},"abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was registered to its "},{"type":"codeVoice","code":"EventLoop"},{"text":" and so IO will be processed.","type":"text"}],"metadata":{"symbolKind":"method","externalID":"s:7NIOCore15ChannelPipelineC04fireB10RegisteredyyF","modules":[{"name":"NIOCore"}],"roleHeading":"Instance Method","role":"symbol","title":"fireChannelRegistered()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRegistered","kind":"identifier"},{"text":"()","kind":"text"}]},"variants":[{"paths":["\/documentation\/niocore\/channelpipeline\/firechannelregistered()"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelRegistered"},{"kind":"text","text":"()"}],"platforms":["Linux"],"languages":["swift"]}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/fireChannelRegistered()":{"type":"topic","role":"symbol","url":"\/documentation\/niocore\/channelpipeline\/firechannelregistered()","title":"fireChannelRegistered()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/fireChannelRegistered()","kind":"symbol","abstract":[{"type":"text","text":"Called once a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" was registered to its "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" and so IO will be processed."}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelRegistered","kind":"identifier"},{"text":"()","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"title":"ChannelPipeline","kind":"symbol","type":"topic","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"text":"interact with each other.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"}}}
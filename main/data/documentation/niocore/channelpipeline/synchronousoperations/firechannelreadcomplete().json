{"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/synchronousoperations\/firechannelreadcomplete()"]}],"abstract":[{"text":"Fires ","type":"text"},{"code":"channelReadComplete","type":"codeVoice"},{"text":" from the head to the tail.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"text":"()","kind":"text"}]}],"kind":"declarations"},{"kind":"content","content":[{"anchor":"discussion","type":"heading","text":"Discussion","level":2},{"inlineContent":[{"type":"text","text":"This method should typically only be called by "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":" implementations directly."}],"type":"paragraph"}]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations"]]},"schemaVersion":{"minor":3,"major":0,"patch":0},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/fireChannelReadComplete()","interfaceLanguage":"swift"},"kind":"symbol","sections":[],"metadata":{"roleHeading":"Instance Method","externalID":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV04fireB12ReadCompleteyyF","symbolKind":"method","modules":[{"name":"NIOCore"}],"title":"fireChannelReadComplete()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"text":"()","kind":"text"}],"role":"symbol"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations/fireChannelReadComplete()":{"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"fireChannelReadComplete","kind":"identifier"},{"text":"()","kind":"text"}],"abstract":[{"type":"text","text":"Fires "},{"code":"channelReadComplete","type":"codeVoice"},{"type":"text","text":" from the head to the tail."}],"type":"topic","title":"fireChannelReadComplete()","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/fireChannelReadComplete()","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations\/firechannelreadcomplete()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SynchronousOperations","kind":"identifier"}],"navigatorTitle":[{"text":"SynchronousOperations","kind":"identifier"}],"abstract":[{"type":"text","text":"A view of a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" which may be used to invoke synchronous operations."}],"type":"topic","title":"ChannelPipeline.SynchronousOperations","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"title":"ChannelPipeline","kind":"symbol","type":"topic","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"text":"interact with each other.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"}}}
{"schemaVersion":{"patch":0,"major":0,"minor":3},"sections":[],"abstract":[{"type":"text","text":"Fires "},{"type":"codeVoice","code":"channelActive"},{"type":"text","text":" from the head to the tail."}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/synchronousoperations\/firechannelactive()"]}],"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations"]]},"kind":"symbol","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/fireChannelActive()"},"metadata":{"role":"symbol","roleHeading":"Instance Method","symbolKind":"method","modules":[{"name":"NIOCore"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelActive","kind":"identifier"},{"text":"()","kind":"text"}],"title":"fireChannelActive()","externalID":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV04fireB6ActiveyyF"},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fireChannelActive"},{"kind":"text","text":"()"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"text":"Discussion","type":"heading"},{"inlineContent":[{"text":"This method should typically only be called by ","type":"text"},{"type":"codeVoice","code":"Channel"},{"text":" implementations directly.","type":"text"}],"type":"paragraph"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations/fireChannelActive()":{"role":"symbol","title":"fireChannelActive()","type":"topic","abstract":[{"text":"Fires ","type":"text"},{"code":"channelActive","type":"codeVoice"},{"text":" from the head to the tail.","type":"text"}],"url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations\/firechannelactive()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/fireChannelActive()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"fireChannelActive","kind":"identifier"},{"text":"()","kind":"text"}],"kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SynchronousOperations","kind":"identifier"}],"navigatorTitle":[{"text":"SynchronousOperations","kind":"identifier"}],"abstract":[{"type":"text","text":"A view of a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" which may be used to invoke synchronous operations."}],"type":"topic","title":"ChannelPipeline.SynchronousOperations","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"title":"ChannelPipeline","kind":"symbol","type":"topic","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"text":"interact with each other.","type":"text"}],"role":"symbol"}}}
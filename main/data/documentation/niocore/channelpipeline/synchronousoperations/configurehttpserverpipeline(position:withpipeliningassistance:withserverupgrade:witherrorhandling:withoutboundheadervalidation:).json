{"abstract":[{"text":"Configure a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" for use as a HTTP server.","type":"text"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations"]]},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"configureHTTPServerPipeline"},{"kind":"text","text":"("},{"kind":"externalParam","text":"position"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline"},{"kind":"text","text":"."},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position"},{"kind":"text","text":" = .last, "},{"kind":"externalParam","text":"withPipeliningAssistance"},{"kind":"text","text":" "},{"kind":"internalParam","text":"pipelining"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"withServerUpgrade"},{"kind":"text","text":" "},{"kind":"internalParam","text":"upgrade"},{"kind":"text","text":": "},{"kind":"typeIdentifier","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa","text":"NIOHTTPServerUpgradeConfiguration"},{"kind":"text","text":"? = nil, "},{"kind":"externalParam","text":"withErrorHandling"},{"kind":"text","text":" "},{"kind":"internalParam","text":"errorHandling"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = true, "},{"kind":"externalParam","text":"withOutboundHeaderValidation"},{"kind":"text","text":" "},{"kind":"internalParam","text":"headerValidation"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":" = true) "},{"kind":"keyword","text":"throws"}]}]},{"kind":"parameters","parameters":[{"content":[{"inlineContent":[{"type":"text","text":"Where in the pipeline to add the HTTP server handlers, defaults to "},{"code":".last","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"position"},{"content":[{"inlineContent":[{"type":"text","text":"Whether to provide assistance handling HTTP clients that pipeline"},{"type":"text","text":" "},{"type":"text","text":"their requests. Defaults to "},{"type":"codeVoice","code":"true"},{"type":"text","text":". If "},{"type":"codeVoice","code":"false"},{"type":"text","text":", users will need to handle"},{"type":"text","text":" "},{"type":"text","text":"clients that pipeline themselves."}],"type":"paragraph"}],"name":"pipelining"},{"content":[{"inlineContent":[{"type":"text","text":"Whether to add a "},{"code":"HTTPServerUpgradeHandler","type":"codeVoice"},{"type":"text","text":" to the pipeline, configured for"},{"type":"text","text":" "},{"type":"text","text":"HTTP upgrade. Defaults to "},{"code":"nil","type":"codeVoice"},{"type":"text","text":", which will not add the handler to the pipeline. If"},{"type":"text","text":" "},{"type":"text","text":"provided should be a tuple of an array of "},{"code":"HTTPServerProtocolUpgrader","type":"codeVoice"},{"type":"text","text":" and the upgrade"},{"type":"text","text":" "},{"type":"text","text":"completion handler. See the documentation on "},{"code":"HTTPServerUpgradeHandler","type":"codeVoice"},{"type":"text","text":" for more"},{"type":"text","text":" "},{"type":"text","text":"details."}],"type":"paragraph"}],"name":"upgrade"},{"content":[{"type":"paragraph","inlineContent":[{"text":"Whether to provide assistance handling protocol errors (e.g.","type":"text"},{"text":" ","type":"text"},{"text":"failure to parse the HTTP request) by sending 400 errors. Defaults to ","type":"text"},{"code":"true","type":"codeVoice"},{"text":".","type":"text"}]}],"name":"errorHandling"},{"content":[{"inlineContent":[{"type":"text","text":"Whether to validate outbound request headers to confirm that they meet"},{"type":"text","text":" "},{"type":"text","text":"spec compliance. Defaults to "},{"type":"codeVoice","code":"true"},{"type":"text","text":"."}],"type":"paragraph"}],"name":"headerValidation"}]},{"kind":"content","content":[{"level":2,"type":"heading","anchor":"discussion","text":"Discussion"},{"inlineContent":[{"text":"This function knows how to set up all first-party HTTP channel handlers appropriately","type":"text"},{"text":" ","type":"text"},{"text":"for server use. It supports the following features:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"Providing assistance handling clients that pipeline HTTP requests, using the","type":"text"},{"text":" ","type":"text"},{"code":"HTTPServerPipelineHandler","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Supporting HTTP upgrade, using the "},{"code":"HTTPServerUpgradeHandler","type":"codeVoice"},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Providing assistance handling protocol errors.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Validating outbound header fields to protect against response splitting attacks."}]}]}],"type":"orderedList"},{"inlineContent":[{"text":"This method will likely be extended in future with more support for other first-party","type":"text"},{"text":" ","type":"text"},{"text":"features.","type":"text"}],"type":"paragraph"},{"name":"Important","style":"important","type":"aside","content":[{"inlineContent":[{"type":"text","text":"This "},{"type":"strong","inlineContent":[{"type":"text","text":"must"}]},{"type":"text","text":" be called on the Channelâ€™s event loop."}],"type":"paragraph"}]},{"name":"Throws","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"If the pipeline could not be configured."}],"type":"paragraph"}]}]}],"kind":"symbol","metadata":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTPServerPipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"ChannelPipeline","preciseIdentifier":"s:7NIOCore15ChannelPipelineC","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Position","preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withPipeliningAssistance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withServerUpgrade","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOHTTPServerUpgradeConfiguration","preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"withErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withOutboundHeaderValidation","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Bool","preciseIdentifier":"s:Sb","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"symbolKind":"method","role":"symbol","roleHeading":"Instance Method","externalID":"s:7NIOCore15ChannelPipelineC21SynchronousOperationsV8NIOHTTP1E019configureHTTPServerC08position24withPipeliningAssistance0J13ServerUpgrade0J13ErrorHandling0J24OutboundHeaderValidationyAC8PositionO_SbSayAF0H16ProtocolUpgrader_pG9upgraders_yAA0B14HandlerContextCc010completionX0tSgS2btKF","extendedModule":"NIOCore","modules":[{"name":"NIOCore"}],"title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:withOutboundHeaderValidation:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/niocore\/channelpipeline\/synchronousoperations\/configurehttpserverpipeline(position:withpipeliningassistance:withserverupgrade:witherrorhandling:withoutboundheadervalidation:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:withOutboundHeaderValidation:)"},"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:withOutboundHeaderValidation:)":{"abstract":[{"text":"Configure a ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":" for use as a HTTP server.","type":"text"}],"type":"topic","title":"configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:withOutboundHeaderValidation:)","role":"symbol","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"configureHTTPServerPipeline","kind":"identifier"},{"text":"(","kind":"text"},{"text":"position","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC","text":"ChannelPipeline","kind":"typeIdentifier"},{"text":".","kind":"text"},{"preciseIdentifier":"s:7NIOCore15ChannelPipelineC8PositionO","text":"Position","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withPipeliningAssistance","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withServerUpgrade","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8NIOHTTP133NIOHTTPServerUpgradeConfigurationa","text":"NIOHTTPServerUpgradeConfiguration","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"withErrorHandling","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"withOutboundHeaderValidation","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}],"url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations\/configurehttpserverpipeline(position:withpipeliningassistance:withserverupgrade:witherrorhandling:withoutboundheadervalidation:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations\/configureHTTPServerPipeline(position:withPipeliningAssistance:withServerUpgrade:withErrorHandling:withOutboundHeaderValidation:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/Position":{"abstract":[{"type":"text","text":"A "},{"type":"codeVoice","code":"Position"},{"type":"text","text":" within the "},{"type":"codeVoice","code":"ChannelPipeline"},{"text":" used to insert handlers into the ","type":"text"},{"code":"ChannelPipeline","type":"codeVoice"},{"text":".","type":"text"}],"title":"ChannelPipeline.Position","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"Position","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/Position","navigatorTitle":[{"text":"Position","kind":"identifier"}],"url":"\/documentation\/niocore\/channelpipeline\/position","type":"topic","role":"symbol","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOHTTP1/NIOHTTPServerUpgradeConfiguration":{"kind":"symbol","url":"\/documentation\/niohttp1\/niohttpserverupgradeconfiguration","abstract":[],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOHTTPServerUpgradeConfiguration"}],"navigatorTitle":[{"kind":"identifier","text":"NIOHTTPServerUpgradeConfiguration"}],"title":"NIOHTTPServerUpgradeConfiguration","role":"symbol","type":"topic","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOHTTP1\/NIOHTTPServerUpgradeConfiguration"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline":{"fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ChannelPipeline","kind":"identifier"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline","url":"\/documentation\/niocore\/channelpipeline","navigatorTitle":[{"text":"ChannelPipeline","kind":"identifier"}],"title":"ChannelPipeline","kind":"symbol","type":"topic","abstract":[{"text":"A list of ","type":"text"},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s that handle or intercept inbound events and outbound operations of a"},{"type":"text","text":" "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":". "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" implements an advanced form of the Intercepting Filter pattern"},{"type":"text","text":" "},{"type":"text","text":"to give a user full control over how an event is handled and how the "},{"code":"ChannelHandler","type":"codeVoice"},{"type":"text","text":"s in a pipeline"},{"type":"text","text":" "},{"text":"interact with each other.","type":"text"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/ChannelPipeline/SynchronousOperations":{"fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"SynchronousOperations","kind":"identifier"}],"navigatorTitle":[{"text":"SynchronousOperations","kind":"identifier"}],"abstract":[{"type":"text","text":"A view of a "},{"code":"ChannelPipeline","type":"codeVoice"},{"type":"text","text":" which may be used to invoke synchronous operations."}],"type":"topic","title":"ChannelPipeline.SynchronousOperations","role":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/ChannelPipeline\/SynchronousOperations","kind":"symbol","url":"\/documentation\/niocore\/channelpipeline\/synchronousoperations"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"}}}
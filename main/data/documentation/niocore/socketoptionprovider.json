{"hierarchy":{"paths":[["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore"]]},"abstract":[{"type":"text","text":"This protocol defines an object, most commonly a "},{"code":"Channel","type":"codeVoice"},{"type":"text","text":", that supports"},{"type":"text","text":" "},{"type":"text","text":"setting and getting socket options (via "},{"code":"setsockopt","type":"codeVoice"},{"type":"text","text":"\/"},{"code":"getsockopt","type":"codeVoice"},{"type":"text","text":" or similar)."},{"type":"text","text":" "},{"type":"text","text":"It provides a strongly typed API that makes working with larger, less-common"},{"type":"text","text":" "},{"type":"text","text":"socket options easier than the "},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" API allows."}],"relationshipsSections":[{"kind":"relationships","type":"inheritsFrom","identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable"],"title":"Inherits From"}],"schemaVersion":{"patch":0,"major":0,"minor":3},"identifier":{"url":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider","interfaceLanguage":"swift"},"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/eventLoop"],"title":"Instance Properties"},{"identifiers":["doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPMulticastIF()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPMulticastLoop()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPMulticastTTL()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPv6MulticastHops()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPv6MulticastIF()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPv6MulticastLoop()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getSoLinger()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getTCPInfo()","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastIF(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastLoop(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastTTL(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPv6MulticastHops(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPv6MulticastIF(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPv6MulticastLoop(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setSoLinger(_:)","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeGetSocketOption(level:name:)-5hoyn","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeGetSocketOption(level:name:)-7vfst","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeSetSocketOption(level:name:value:)-72342","doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeSetSocketOption(level:name:value:)-9rbq9"],"title":"Instance Methods"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketOptionProvider"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"NIOPreconcurrencySendable","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","preciseIdentifier":"s:7NIOCore25NIOPreconcurrencySendableP"}]}]},{"content":[{"text":"Overview","anchor":"overview","type":"heading","level":2},{"inlineContent":[{"text":"The API is divided into two portions. For socket options that NIO has prior","type":"text"},{"text":" ","type":"text"},{"text":"knowledge about, the API has strongly and safely typed APIs that only allow","type":"text"},{"text":" ","type":"text"},{"text":"users to use the exact correct type for the socket option. This will ensure","type":"text"},{"text":" ","type":"text"},{"text":"that the API is safe to use, and these are encouraged where possible.","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"These safe APIs are built on top of an “unsafe” API that is also exposed to"},{"type":"text","text":" "},{"type":"text","text":"users as part of this protocol. The “unsafe” API is unsafe in the same way"},{"type":"text","text":" "},{"type":"text","text":"that "},{"type":"codeVoice","code":"UnsafePointer"},{"type":"text","text":" is: incorrect use of the API allows all kinds of"},{"type":"text","text":" "},{"type":"text","text":"memory-unsafe behaviour. This API is necessary for socket options that NIO"},{"type":"text","text":" "},{"type":"text","text":"does not have prior knowledge of, but wherever possible users are discouraged"},{"type":"text","text":" "},{"type":"text","text":"from using it."}],"type":"paragraph"},{"text":"Relationship to SocketOption","anchor":"Relationship-to-SocketOption","type":"heading","level":3},{"inlineContent":[{"text":"All ","type":"text"},{"code":"Channel","type":"codeVoice"},{"text":" objects that implement this protocol should also support the","type":"text"},{"text":" ","type":"text"},{"code":"SocketOption","type":"codeVoice"},{"text":" ","type":"text"},{"code":"ChannelOption","type":"codeVoice"},{"text":" for simple socket options (those with C ","type":"text"},{"code":"int","type":"codeVoice"},{"text":" ","type":"text"},{"text":"values). These are the most common socket option types, and so this ","type":"text"},{"code":"ChannelOption","type":"codeVoice"},{"text":" ","type":"text"},{"text":"represents a convenient shorthand for using this protocol where the type allows,","type":"text"},{"text":" ","type":"text"},{"text":"as well as avoiding the need to cast to this protocol.","type":"text"}],"type":"paragraph"},{"name":"Note","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"Like the "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":" protocol, all methods in this protocol are"},{"type":"text","text":" "},{"type":"text","text":"thread-safe."}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"role":"symbol","title":"SocketOptionProvider","externalID":"s:7NIOCore20SocketOptionProviderP","modules":[{"name":"NIOCore"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketOptionProvider"}],"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"SocketOptionProvider"}],"symbolKind":"protocol"},"sections":[],"variants":[{"paths":["\/documentation\/niocore\/socketoptionprovider"],"traits":[{"interfaceLanguage":"swift"}]}],"references":{"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getIPMulticastLoop()":{"kind":"symbol","title":"getIPMulticastLoop()","type":"topic","abstract":[{"type":"text","text":"Gets the value of the socket option IP_MULTICAST_LOOP."}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getIPMulticastLoop"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:s13CUnsignedChara","text":"CUnsignedChar"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/socketoptionprovider\/getipmulticastloop()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPMulticastLoop()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/unsafeGetSocketOption(level:name:)-5hoyn":{"required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unsafeGetSocketOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO","text":"NIOBSDSocket"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO11OptionLevelV","text":"OptionLevel"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO","text":"NIOBSDSocket"},{"kind":"text","text":"."},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO6OptionV","text":"Option"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/niocore\/socketoptionprovider\/unsafegetsocketoption(level:name:)-5hoyn","title":"unsafeGetSocketOption(level:name:)","kind":"symbol","abstract":[{"type":"text","text":"Obtain the value of the socket option for the given level and name."}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeGetSocketOption(level:name:)-5hoyn","role":"symbol","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getIPv6MulticastHops()":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPv6MulticastHops()","kind":"symbol","title":"getIPv6MulticastHops()","role":"symbol","type":"topic","url":"\/documentation\/niocore\/socketoptionprovider\/getipv6multicasthops()","abstract":[{"text":"Gets the value of the socket option IPV6_MULTICAST_HOPS.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getIPv6MulticastHops","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"CInt","preciseIdentifier":"s:s4CInta","kind":"typeIdentifier"},{"text":">","kind":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPv6MulticastIF(_:)":{"url":"\/documentation\/niocore\/socketoptionprovider\/setipv6multicastif(_:)","abstract":[{"text":"Sets the socket option IPV6_MULTICAST_IF to ","type":"text"},{"type":"codeVoice","code":"value"},{"text":".","type":"text"}],"kind":"symbol","title":"setIPv6MulticastIF(_:)","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"setIPv6MulticastIF","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s12CUnsignedInta","text":"CUnsignedInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPv6MulticastIF(_:)","type":"topic"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPMulticastIF(_:)":{"type":"topic","title":"setIPMulticastIF(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setIPMulticastIF"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"in_addr","preciseIdentifier":"c:@S@in_addr"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/socketoptionprovider\/setipmulticastif(_:)","abstract":[{"text":"Sets the socket option IP_MULTICAST_IF to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastIF(_:)"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getSoLinger()":{"title":"getSoLinger()","abstract":[{"type":"text","text":"Gets the value of the socket option SO_LINGER."}],"role":"symbol","kind":"symbol","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getSoLinger()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getSoLinger","kind":"identifier"},{"text":"() -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"c:@S@linger","kind":"typeIdentifier","text":"linger"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/niocore\/socketoptionprovider\/getsolinger()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPMulticastLoop(_:)":{"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastLoop(_:)","title":"setIPMulticastLoop(_:)","role":"symbol","abstract":[{"text":"Sets the socket option IP_MULTICAST_LOOP to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}],"url":"\/documentation\/niocore\/socketoptionprovider\/setipmulticastloop(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPMulticastLoop","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s13CUnsignedChara","text":"CUnsignedChar"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"type":"topic","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getTCPInfo()":{"role":"symbol","kind":"symbol","type":"topic","abstract":[{"text":"Gets the value of the socket option TCP_INFO.","type":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getTCPInfo()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getTCPInfo"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@tcp_info","text":"tcp_info"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/socketoptionprovider\/gettcpinfo()","title":"getTCPInfo()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPv6MulticastLoop(_:)":{"role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setIPv6MulticastLoop"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:s12CUnsignedInta","text":"CUnsignedInt"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":">","kind":"text"}],"kind":"symbol","url":"\/documentation\/niocore\/socketoptionprovider\/setipv6multicastloop(_:)","title":"setIPv6MulticastLoop(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPv6MulticastLoop(_:)","abstract":[{"type":"text","text":"Sets the socket option IPV6_MULTICAST_LOOP to "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setSoLinger(_:)":{"kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setSoLinger","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@linger","text":"linger"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s4Voida","text":"Void"},{"kind":"text","text":">"}],"type":"topic","url":"\/documentation\/niocore\/socketoptionprovider\/setsolinger(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setSoLinger(_:)","role":"symbol","title":"setSoLinger(_:)","abstract":[{"text":"Sets the socket option SO_LINGER to ","type":"text"},{"code":"value","type":"codeVoice"},{"text":".","type":"text"}]},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getIPMulticastIF()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getIPMulticastIF","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:@S@in_addr","text":"in_addr"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Gets the value of the socket option IP_MULTICAST_IF."}],"title":"getIPMulticastIF()","type":"topic","kind":"symbol","url":"\/documentation\/niocore\/socketoptionprovider\/getipmulticastif()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPMulticastIF()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/eventLoop":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"eventLoop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore9EventLoopP","text":"EventLoop"}],"role":"symbol","abstract":[{"type":"text","text":"The "},{"type":"codeVoice","code":"EventLoop"},{"type":"text","text":" which is used by this "},{"type":"codeVoice","code":"SocketOptionProvider"},{"type":"text","text":" for execution."}],"title":"eventLoop","type":"topic","kind":"symbol","required":true,"url":"\/documentation\/niocore\/socketoptionprovider\/eventloop","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/eventLoop"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getIPv6MulticastIF()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getIPv6MulticastIF","kind":"identifier"},{"text":"() -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:s12CUnsignedInta","text":"CUnsignedInt"},{"kind":"text","text":">"}],"role":"symbol","abstract":[{"type":"text","text":"Gets the value of the socket option IPV6_MULTICAST_IF."}],"title":"getIPv6MulticastIF()","type":"topic","kind":"symbol","url":"\/documentation\/niocore\/socketoptionprovider\/getipv6multicastif()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPv6MulticastIF()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/unsafeSetSocketOption(level:name:value:)-72342":{"kind":"symbol","url":"\/documentation\/niocore\/socketoptionprovider\/unsafesetsocketoption(level:name:value:)-72342","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unsafeSetSocketOption"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Value"},{"kind":"text","text":">("},{"kind":"externalParam","text":"level"},{"kind":"text","text":": "},{"text":"NIOBSDSocket","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"OptionLevel","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO11OptionLevelV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"NIOBSDSocket","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO","kind":"typeIdentifier"},{"text":".","kind":"text"},{"text":"Option","preciseIdentifier":"s:7NIOCore12NIOBSDSocketO6OptionV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"title":"unsafeSetSocketOption(level:name:value:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeSetSocketOption(level:name:value:)-72342","required":true,"abstract":[{"type":"text","text":"Set a socket option for a given level and name to the specified value."}],"type":"topic","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getIPv6MulticastLoop()":{"type":"topic","abstract":[{"type":"text","text":"Gets the value of the socket option IPV6_MULTICAST_LOOP."}],"role":"symbol","title":"getIPv6MulticastLoop()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPv6MulticastLoop()","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getIPv6MulticastLoop"},{"kind":"text","text":"() -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s12CUnsignedInta","kind":"typeIdentifier","text":"CUnsignedInt"},{"kind":"text","text":">"}],"url":"\/documentation\/niocore\/socketoptionprovider\/getipv6multicastloop()"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider":{"type":"topic","url":"\/documentation\/niocore\/socketoptionprovider","title":"SocketOptionProvider","navigatorTitle":[{"kind":"identifier","text":"SocketOptionProvider"}],"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"SocketOptionProvider"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider","kind":"symbol","abstract":[{"type":"text","text":"This protocol defines an object, most commonly a "},{"type":"codeVoice","code":"Channel"},{"type":"text","text":", that supports"},{"type":"text","text":" "},{"type":"text","text":"setting and getting socket options (via "},{"type":"codeVoice","code":"setsockopt"},{"type":"text","text":"\/"},{"type":"codeVoice","code":"getsockopt"},{"type":"text","text":" or similar)."},{"type":"text","text":" "},{"type":"text","text":"It provides a strongly typed API that makes working with larger, less-common"},{"type":"text","text":" "},{"type":"text","text":"socket options easier than the "},{"type":"codeVoice","code":"ChannelOption"},{"type":"text","text":" API allows."}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/getIPMulticastTTL()":{"role":"symbol","abstract":[{"text":"Gets the value of the socket option IP_MULTICAST_TTL.","type":"text"}],"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getIPMulticastTTL","kind":"identifier"},{"text":"() -> ","kind":"text"},{"text":"EventLoopFuture","kind":"typeIdentifier","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"text":"<","kind":"text"},{"text":"CUnsignedChar","preciseIdentifier":"s:s13CUnsignedChara","kind":"typeIdentifier"},{"text":">","kind":"text"}],"type":"topic","title":"getIPMulticastTTL()","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/getIPMulticastTTL()","url":"\/documentation\/niocore\/socketoptionprovider\/getipmulticastttl()","kind":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPv6MulticastHops(_:)":{"abstract":[{"type":"text","text":"Sets the socket option IPV6_MULTICAST_HOPS to "},{"type":"codeVoice","code":"value"},{"type":"text","text":"."}],"kind":"symbol","type":"topic","title":"setIPv6MulticastHops(_:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"setIPv6MulticastHops","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"s:s4CInta","text":"CInt","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPv6MulticastHops(_:)","url":"\/documentation\/niocore\/socketoptionprovider\/setipv6multicasthops(_:)","role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/setIPMulticastTTL(_:)":{"title":"setIPMulticastTTL(_:)","url":"\/documentation\/niocore\/socketoptionprovider\/setipmulticastttl(_:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/setIPMulticastTTL(_:)","type":"topic","abstract":[{"type":"text","text":"Sets the socket option IP_MULTICAST_TTL to "},{"code":"value","type":"codeVoice"},{"type":"text","text":"."}],"kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setIPMulticastTTL"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CUnsignedChar","preciseIdentifier":"s:s13CUnsignedChara"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"EventLoopFuture","preciseIdentifier":"s:7NIOCore15EventLoopFutureC"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":">"}],"role":"symbol"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/unsafeSetSocketOption(level:name:value:)-9rbq9":{"type":"topic","abstract":[{"text":"Set a socket option for a given level and name to the specified value.","type":"text"}],"url":"\/documentation\/niocore\/socketoptionprovider\/unsafesetsocketoption(level:name:value:)-9rbq9","kind":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unsafeSetSocketOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"level","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore17SocketOptionLevela","text":"SocketOptionLevel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16SocketOptionNamea","kind":"typeIdentifier","text":"SocketOptionName"},{"kind":"text","text":", "},{"kind":"externalParam","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Value"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","kind":"typeIdentifier","text":"EventLoopFuture"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":">"}],"role":"symbol","required":true,"title":"unsafeSetSocketOption(level:name:value:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeSetSocketOption(level:name:value:)-9rbq9"},"doc://co.pointfree.VaporRouting/documentation/NIOCore":{"url":"\/documentation\/niocore","title":"NIOCore","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore","kind":"symbol","type":"topic","abstract":[],"role":"collection"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/NIOPreconcurrencySendable":{"kind":"symbol","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/NIOPreconcurrencySendable","role":"symbol","title":"NIOPreconcurrencySendable","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"NIOPreconcurrencySendable"}],"type":"topic","url":"\/documentation\/niocore\/niopreconcurrencysendable"},"doc://co.pointfree.VaporRouting/documentation/NIOCore/SocketOptionProvider/unsafeGetSocketOption(level:name:)-7vfst":{"type":"topic","kind":"symbol","abstract":[{"text":"Obtain the value of the socket option for the given level and name.","type":"text"}],"required":true,"title":"unsafeGetSocketOption(level:name:)","identifier":"doc:\/\/co.pointfree.VaporRouting\/documentation\/NIOCore\/SocketOptionProvider\/unsafeGetSocketOption(level:name:)-7vfst","url":"\/documentation\/niocore\/socketoptionprovider\/unsafegetsocketoption(level:name:)-7vfst","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unsafeGetSocketOption","kind":"identifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"level","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore17SocketOptionLevela","text":"SocketOptionLevel","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7NIOCore16SocketOptionNamea","text":"SocketOptionName","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:7NIOCore15EventLoopFutureC","text":"EventLoopFuture","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Value","kind":"typeIdentifier"},{"text":">","kind":"text"}]}}}